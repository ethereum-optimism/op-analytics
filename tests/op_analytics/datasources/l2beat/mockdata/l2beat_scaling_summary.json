{
    "success": true,
    "data": {
        "chart": {
            "types": [
                "timestamp",
                "native",
                "canonical",
                "external",
                "ethPrice"
            ],
            "data": [
                [
                    1738454400,
                    17907874764.76,
                    23938528533.72,
                    6735183526.41,
                    3118.4321
                ],
                [
                    1738476000,
                    17879053226.69,
                    23895770260.1,
                    6713710037.09,
                    3119.7048
                ],
                [
                    1738497600,
                    17582699941.97,
                    23540020347.57,
                    6628248126,
                    3065.666
                ],
                [
                    1738519200,
                    16817120010.58,
                    22763448484.41,
                    6451239006.35,
                    2970.0256
                ],
                [
                    1738540800,
                    16558972529.08,
                    22150954282.6,
                    6302831735.19,
                    2866.2536999999998
                ],
                [
                    1738562400,
                    15467713110.68,
                    19905190053.3,
                    5800641209.04,
                    2492.9434
                ],
                [
                    1738584000,
                    16020190971.09,
                    20673548959.34,
                    5943153177.66,
                    2585.8862
                ],
                [
                    1738605600,
                    16872309539.37,
                    21730487208.11,
                    6127737743.2,
                    2713.4197
                ],
                [
                    1738627200,
                    17418206742.01,
                    22626059740.26,
                    6338506836.92,
                    2880.2817
                ],
                [
                    1738648800,
                    16630108518.43,
                    21441463313.07,
                    6054860012.6,
                    2709.165
                ],
                [
                    1738670400,
                    16698471231.89,
                    21761860919.47,
                    6105151564.99,
                    2764.453
                ],
                [
                    1738692000,
                    16936841618.94,
                    22068240984.68,
                    6072714884.95,
                    2817.343
                ],
                [
                    1738713600,
                    16770339593.18,
                    21589546168.17,
                    5985794658.34,
                    2734.7632
                ],
                [
                    1738735200,
                    16827928623.82,
                    21787194031.94,
                    6010192243.57,
                    2766.9778
                ],
                [
                    1738756800,
                    17001553982.06,
                    21989117888.99,
                    6016565933.95,
                    2803.2717
                ],
                [
                    1738778400,
                    16630925822.27,
                    21568783262.44,
                    5922284213.77,
                    2748.9966
                ],
                [
                    1738800000,
                    16588376968.47,
                    21583093696.22,
                    5927708806.18,
                    2789.6216
                ],
                [
                    1738821600,
                    16755351370.32,
                    21840382814.66,
                    5991169871.02,
                    2828.8013
                ],
                [
                    1738843200,
                    16669196276.26,
                    21749968771.08,
                    6080566641.32,
                    2807.2258
                ],
                [
                    1738864800,
                    16183543610.5,
                    20979039650.1,
                    5924307644.35,
                    2699.1633
                ],
                [
                    1738886400,
                    16088220359.95,
                    20905704128.74,
                    5897479816.9,
                    2687.8135
                ],
                [
                    1738908000,
                    16188832752.11,
                    21101172867.63,
                    5949531086.14,
                    2713.2769
                ],
                [
                    1738929600,
                    16366065562.95,
                    21439696203.14,
                    6007128490.07,
                    2762.386
                ],
                [
                    1738951200,
                    16274020712.38,
                    21015024722.23,
                    5931741888.39,
                    2679.5737
                ],
                [
                    1738972800,
                    16033803659.2,
                    20676494531.56,
                    5852521134.53,
                    2623.4507
                ],
                [
                    1738994400,
                    15984229471.08,
                    20662433245.44,
                    5859434454.3,
                    2620.003
                ],
                [
                    1739016000,
                    16002153259.67,
                    20625450618.96,
                    5843449614.62,
                    2609.2285
                ],
                [
                    1739037600,
                    16220345394.23,
                    20878318542.66,
                    5893370611.54,
                    2629.5073
                ],
                [
                    1739059200,
                    16350276816.82,
                    20928609841.23,
                    5909193531.28,
                    2632.8062
                ],
                [
                    1739080800,
                    16466544176.44,
                    21087821868.31,
                    5940501690.84,
                    2661.5818
                ],
                [
                    1739102400,
                    16458390218.06,
                    21036415736.12,
                    5939667525.81,
                    2656.8438
                ],
                [
                    1739124000,
                    16282270545.41,
                    20846268769.57,
                    5896204006.8,
                    2640.5596
                ],
                [
                    1739145600,
                    16381492261.56,
                    20838319987.09,
                    5884941583.73,
                    2630.4372999999996
                ],
                [
                    1739167200,
                    16495231761.31,
                    20941860423.28,
                    5908223516.06,
                    2638.8823
                ],
                [
                    1739188800,
                    16618693764.38,
                    21072363584.88,
                    5954597947.66,
                    2655.4084
                ],
                [
                    1739210400,
                    16796585419.16,
                    21235672718.85,
                    6002173893.17,
                    2679.592
                ],
                [
                    1739232000,
                    16675310918.92,
                    21132767194.54,
                    5983205258.73,
                    2661.987
                ],
                [
                    1739253600,
                    17038592999.93,
                    21619576308.39,
                    6080645374.4,
                    2714.1672
                ],
                [
                    1739275200,
                    16946627391.9,
                    21548591153.09,
                    6029113874.78,
                    2707.8936
                ],
                [
                    1739296800,
                    16613607226.38,
                    21107813080.52,
                    5929573499.8,
                    2637.9993
                ],
                [
                    1739318400,
                    16614595917.62,
                    20878162050.65,
                    5891646140.47,
                    2602.923
                ],
                [
                    1739340000,
                    16620208446.69,
                    20897761129.54,
                    5896923788.37,
                    2608.2039
                ],
                [
                    1739361600,
                    16666293583.24,
                    21012783991.72,
                    5939783615.68,
                    2626.992
                ],
                [
                    1739383200,
                    16860222763.51,
                    21354448298.54,
                    6025817402.91,
                    2672.5457
                ],
                [
                    1739404800,
                    17046077951.84,
                    21751321931.43,
                    6101152880.36,
                    2737.199
                ],
                [
                    1739426400,
                    17032316894.37,
                    21655485913.11,
                    6067121969.4,
                    2721.6362
                ],
                [
                    1739448000,
                    16853435769.06,
                    21268381317.2,
                    5985008336.43,
                    2657.1575
                ],
                [
                    1739469600,
                    16869924648.74,
                    21030771238.61,
                    5900735049.09,
                    2633.2253
                ],
                [
                    1739491200,
                    16930320969.29,
                    21286274036.01,
                    5942401386.44,
                    2676.7212
                ],
                [
                    1739512800,
                    16990350511.66,
                    21393568244.07,
                    5955683770,
                    2695.3032000000003
                ],
                [
                    1739534400,
                    17130640018.77,
                    21474444224.33,
                    5946526355.77,
                    2685.2341
                ],
                [
                    1739556000,
                    17439867875.43,
                    21950085909.24,
                    6074904259.18,
                    2776.0864
                ],
                [
                    1739577600,
                    17217456321.76,
                    21698776791.4,
                    6005502758.63,
                    2725.8914
                ],
                [
                    1739599200,
                    17203965540.65,
                    21728677634.95,
                    5997516250.4,
                    2721.512
                ],
                [
                    1739620800,
                    17031875633.52,
                    21620284927.38,
                    5963740495.22,
                    2707.8481
                ],
                [
                    1739642400,
                    16877534046.47,
                    21440811830.86,
                    5924234908.75,
                    2684.9438
                ],
                [
                    1739664000,
                    16931917108.78,
                    21498786027,
                    5935137852.43,
                    2693.5044
                ],
                [
                    1739685600,
                    16942226457.62,
                    21586512822.94,
                    5947652788.89,
                    2710.086
                ],
                [
                    1739707200,
                    17042559686.74,
                    21648312449.31,
                    5976692193.11,
                    2712.0425
                ],
                [
                    1739728800,
                    16920104790.01,
                    21472847946.01,
                    5933700324.07,
                    2690.2163
                ],
                [
                    1739750400,
                    16874971162.26,
                    21338931031.06,
                    5897733664.27,
                    2661.1506
                ],
                [
                    1739772000,
                    16815391630.44,
                    21324933607.79,
                    5910886622.21,
                    2668.0051000000003
                ],
                [
                    1739793600,
                    17112953392.32,
                    21776060149.42,
                    5997629645.56,
                    2754.67
                ],
                [
                    1739815200,
                    17006780225.15,
                    21553003171.93,
                    5951225672.13,
                    2735.929
                ],
                [
                    1739836800,
                    17388519372.51,
                    21606032626.31,
                    5967937174.11,
                    2743.3503
                ],
                [
                    1739858400,
                    17033465080.34,
                    21175923401.67,
                    5890079729.44,
                    2677.798
                ],
                [
                    1739880000,
                    16890413840.04,
                    21138788646.45,
                    5869260122.97,
                    2681.1284
                ],
                [
                    1739901600,
                    16467578717.53,
                    20557087257.65,
                    5782887249.77,
                    2614.5854
                ],
                [
                    1739923200,
                    16698460436.12,
                    20929615814.67,
                    5854688350.79,
                    2671.6887
                ],
                [
                    1739944800,
                    16672338136.48,
                    20942452211.99,
                    5881415740.78,
                    2685.5208
                ],
                [
                    1739966400,
                    16914066324.54,
                    21226840415.7,
                    5928360434.67,
                    2727.3718
                ],
                [
                    1739988000,
                    16882462703.72,
                    21136218807.8,
                    5904928465.33,
                    2711.4072
                ],
                [
                    1740009600,
                    16878770775.18,
                    21160723929.95,
                    5907941637.19,
                    2716.0693
                ],
                [
                    1740031200,
                    17124145882.3,
                    21276072500.9,
                    5950916278.35,
                    2730.3580000000006
                ],
                [
                    1740052800,
                    17289671019.5,
                    21386430258.46,
                    5960394204.95,
                    2741.6080000000006
                ],
                [
                    1740074400,
                    17484365481.31,
                    21373501954.66,
                    5977291426.66,
                    2735.8459999999995
                ],
                [
                    1740096000,
                    17760784201.42,
                    21559245516.4,
                    6001483580.66,
                    2739.7255999999998
                ],
                [
                    1740117600,
                    17688241996.64,
                    21604221641.94,
                    6018272525.53,
                    2755.1274
                ],
                [
                    1740139200,
                    17986111396.58,
                    21953691139.79,
                    6092107644.7,
                    2791.834
                ],
                [
                    1740160800,
                    17636242753.05,
                    21095904689.37,
                    5926802558.43,
                    2677.5234
                ],
                [
                    1740182400,
                    17429507816.64,
                    20934346458.16,
                    5876510987.35,
                    2658.3472
                ],
                [
                    1740204000,
                    17597551030.85,
                    21277976540.83,
                    5972992971.83,
                    2690.5872
                ],
                [
                    1740225600,
                    17755204861.47,
                    21548352372.01,
                    6088476366.75,
                    2734.749
                ],
                [
                    1740247200,
                    17908547286.06,
                    21860181884.62,
                    6159482857.4,
                    2789.4692
                ],
                [
                    1740268800,
                    17796766302.33,
                    21764542037.07,
                    6140010033.83,
                    2762.9668
                ],
                [
                    1740290400,
                    17769887397.28,
                    21833018051.88,
                    6154061525.27,
                    2781.5559999999996
                ],
                [
                    1740312000,
                    17814133491.22,
                    21896906872.94,
                    6161455866.05,
                    2797.2339999999995
                ],
                [
                    1740333600,
                    17762625907.66,
                    21940734334.07,
                    6162005207.89,
                    2818.87
                ],
                [
                    1740355200,
                    17795814340.21,
                    22007612686.64,
                    6178488095.68,
                    2825.034
                ],
                [
                    1740376800,
                    17501439742.04,
                    21484660714.21,
                    6085413297.53,
                    2730.762
                ],
                [
                    1740398400,
                    17341480447.47,
                    21238918017.42,
                    5944061141.76,
                    2688.2075
                ],
                [
                    1740420000,
                    17116040990.23,
                    20960989112.04,
                    5987187878.99,
                    2663.492
                ],
                [
                    1740441600,
                    16492642473.08,
                    19990714908.63,
                    5790872058.95,
                    2514.864
                ],
                [
                    1740463200,
                    16438536179.5,
                    19943812349.55,
                    5790099252.68,
                    2501.29
                ],
                [
                    1740484800,
                    16349551286.24,
                    19578819773.27,
                    5711056222.71,
                    2433.876
                ],
                [
                    1740506400,
                    16441356545.4,
                    19571336472.05,
                    5697612126.82,
                    2426.3574
                ],
                [
                    1740528000,
                    16664822987.7,
                    19984398812.66,
                    5776650970.32,
                    2491.0957
                ],
                [
                    1740549600,
                    16671792273.5,
                    19937819429.03,
                    5776115671.51,
                    2474.935
                ],
                [
                    1740571200,
                    16646454055.76,
                    19916891944.76,
                    5765004951.67,
                    2463.9045
                ],
                [
                    1740592800,
                    16570678047.57,
                    19351248729.03,
                    5655237475.83,
                    2363.211
                ],
                [
                    1740614400,
                    16750672455.79,
                    19237623588.35,
                    5639175463.59,
                    2333.4392
                ],
                [
                    1740636000,
                    16915492367.95,
                    19415227724.19,
                    5657602619.85,
                    2339.9895
                ],
                [
                    1740657600,
                    17016972563.71,
                    19452439646.36,
                    5684015435.22,
                    2352.1033
                ],
                [
                    1740679200,
                    16618455298.97,
                    19235666523.56,
                    5629758353.45,
                    2319.485
                ],
                [
                    1740700800,
                    16534637070.77,
                    19184155062.55,
                    5613845058.45,
                    2305.0334
                ],
                [
                    1740722400,
                    15941429660.46,
                    18019035893.02,
                    5399146382.54,
                    2123.0913
                ],
                [
                    1740744000,
                    15984802157.65,
                    18072643516.33,
                    5393990639.99,
                    2126.6357
                ],
                [
                    1740765600,
                    16362433901.62,
                    18701588492.97,
                    5526954736.94,
                    2210.4333
                ],
                [
                    1740787200,
                    16436711629.21,
                    18897230693.48,
                    5546182869.25,
                    2234.7104
                ],
                [
                    1740808800,
                    16493660487.5,
                    19021187078.49,
                    5572634837.44,
                    2253.2021
                ],
                [
                    1740830400,
                    16229538263.85,
                    18602765015.67,
                    5481082828.23,
                    2182.7004
                ],
                [
                    1740852000,
                    16227216022.3,
                    18661322947.67,
                    5491002011.79,
                    2196.198
                ],
                [
                    1740873600,
                    16343658292.71,
                    18840229522.95,
                    5525332858.13,
                    2214.4846
                ],
                [
                    1740895200,
                    16439994553.33,
                    18895255106.69,
                    5535165957.23,
                    2229.6592
                ],
                [
                    1740916800,
                    16474633619.54,
                    18932771641.36,
                    5543327220.24,
                    2235.9514
                ],
                [
                    1740938400,
                    17185582870.65,
                    20490045117.87,
                    5843588532.56,
                    2481.2893
                ],
                [
                    1740960000,
                    17275952852.02,
                    20706891628.89,
                    5884656348.55,
                    2517.3381
                ],
                [
                    1740981600,
                    17054936204.02,
                    20332198088.73,
                    5803074776.26,
                    2450.0854
                ],
                [
                    1741003200,
                    16717944170.57,
                    19748377072.62,
                    5678326558.15,
                    2355.636
                ],
                [
                    1741024800,
                    16453681174.83,
                    19217745553.38,
                    5580629947.2,
                    2280.2205
                ],
                [
                    1741046400,
                    15800910155.56,
                    18272967889.61,
                    5404983961.58,
                    2144.9468
                ],
                [
                    1741068000,
                    15508161344.31,
                    17902193442.12,
                    5297877875.79,
                    2105.8694
                ],
                [
                    1741089600,
                    15366910404.82,
                    17801348179.98,
                    5291995426.5,
                    2099.9663
                ],
                [
                    1741111200,
                    15393515448.18,
                    17914538330.95,
                    5316041260.7,
                    2120.4314
                ],
                [
                    1741114800,
                    15548274864.15,
                    18153768992.43,
                    5366233327.32,
                    2153.4753
                ]
            ]
        },
        "projects": {
            "arbitrum": {
                "id": "arbitrum",
                "name": "Arbitrum One",
                "slug": "arbitrum",
                "type": "layer2",
                "hostChain": "Ethereum",
                "category": "Optimistic Rollup",
                "provider": "Arbitrum",
                "purposes": [
                    "Universal"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": false,
                "badges": [
                    {
                        "id": "EVM",
                        "type": "VM",
                        "name": "EVM",
                        "description": "This project uses the Ethereum Virtual Machine to run its smart contracts and supports the Solidity programming language"
                    },
                    {
                        "id": "WasmVM",
                        "type": "VM",
                        "name": "WasmVM",
                        "description": "This project uses a WebAssembly Virtual Machine to run its smart contracts"
                    },
                    {
                        "id": "EthereumBlobs",
                        "type": "DA",
                        "name": "Ethereum with blobs",
                        "description": "This project is posting its data to Ethereum as blobs"
                    },
                    {
                        "id": "Nitro",
                        "type": "Stack",
                        "name": "Built on Arbitrum Nitro",
                        "description": "The project is built on Arbitrum Nitro"
                    },
                    {
                        "id": "Governance",
                        "type": "Other",
                        "name": "Governance",
                        "description": "This project features token voting"
                    },
                    {
                        "id": "L3HostChain",
                        "type": "Other",
                        "name": "L3 Host Chain",
                        "description": "This project serves as a host chain for L3s"
                    }
                ],
                "stage": "Stage 1",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "Self sequence",
                        "sentiment": "good",
                        "description": "In the event of a sequencer failure, users can force transactions to be included in the project's chain by sending them to L1. There can be up to a 1d delay on this operation."
                    },
                    {
                        "name": "State Validation",
                        "value": "Fraud proofs (INT)",
                        "sentiment": "good",
                        "description": "Fraud proofs allow actors watching the chain to prove that the state is incorrect. Interactive proofs (INT) require multiple transactions over time to resolve."
                    },
                    {
                        "name": "Data Availability",
                        "value": "Onchain",
                        "sentiment": "good",
                        "description": "All of the data needed for proof construction is published on Ethereum L1."
                    },
                    {
                        "name": "Exit Window",
                        "value": "10d",
                        "sentiment": "warning",
                        "warning": {
                            "value": "The Security Council can upgrade with no delay.",
                            "sentiment": "bad"
                        },
                        "description": "Non-emergency upgrades are initiated on L2 and go through a 8d delay on L2 and a 3d delay on L1. Since there is a 1d delay to force a tx (forcing the inclusion in the following state update), users have 10d to exit."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Self propose",
                        "sentiment": "good",
                        "description": "Anyone can be a Proposer and propose new roots to the L1 bridge."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 12678688138.38,
                        "ether": 2701405822.07,
                        "stablecoin": 5674834868.2,
                        "associated": 1679668315.02
                    },
                    "change7d": -0.04042697819994168,
                    "associatedTokens": [
                        "ARB"
                    ]
                }
            },
            "base": {
                "id": "base",
                "name": "Base",
                "slug": "base",
                "type": "layer2",
                "hostChain": "Ethereum",
                "category": "Optimistic Rollup",
                "provider": "OP Stack",
                "purposes": [
                    "Universal"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": false,
                "badges": [
                    {
                        "id": "EVM",
                        "type": "VM",
                        "name": "EVM",
                        "description": "This project uses the Ethereum Virtual Machine to run its smart contracts and supports the Solidity programming language"
                    },
                    {
                        "id": "EthereumBlobs",
                        "type": "DA",
                        "name": "Ethereum with blobs",
                        "description": "This project is posting its data to Ethereum as blobs"
                    },
                    {
                        "id": "OPStack",
                        "type": "Stack",
                        "name": "Built on OP Stack",
                        "description": "The project is built on the OP Stack"
                    },
                    {
                        "id": "Superchain",
                        "type": "Infra",
                        "name": "Part of the Superchain",
                        "description": "The project is part of the Superchain, meaning it's included in the Superchain registry or uses the Superchain config"
                    },
                    {
                        "id": "L3HostChain",
                        "type": "Other",
                        "name": "L3 Host Chain",
                        "description": "This project serves as a host chain for L3s"
                    }
                ],
                "stage": "Stage 0",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "Self sequence",
                        "sentiment": "good",
                        "description": "In the event of a sequencer failure, users can force transactions to be included in the project's chain by sending them to L1. There can be up to a 12h delay on this operation."
                    },
                    {
                        "name": "State Validation",
                        "value": "Fraud proofs (INT)",
                        "sentiment": "good",
                        "description": "Fraud proofs allow actors watching the chain to prove that the state is incorrect. Interactive proofs (INT) require multiple transactions over time to resolve."
                    },
                    {
                        "name": "Data Availability",
                        "value": "Onchain",
                        "sentiment": "good",
                        "description": "All of the data needed for proof construction is published on Ethereum L1."
                    },
                    {
                        "name": "Exit Window",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "There is no window for users to exit in case of an unwanted regular upgrade since contracts are instantly upgradable."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Self propose",
                        "sentiment": "good",
                        "description": "Anyone can be a Proposer and propose new roots to the L1 bridge."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 11288576581.38,
                        "ether": 3679683510.04,
                        "stablecoin": 4540231751.94,
                        "associated": 0
                    },
                    "change7d": -0.06322704569903947,
                    "associatedTokens": []
                }
            },
            "optimism": {
                "id": "optimism",
                "name": "OP Mainnet",
                "slug": "op-mainnet",
                "type": "layer2",
                "hostChain": "Ethereum",
                "category": "Optimistic Rollup",
                "provider": "OP Stack",
                "purposes": [
                    "Universal"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": false,
                "badges": [
                    {
                        "id": "EVM",
                        "type": "VM",
                        "name": "EVM",
                        "description": "This project uses the Ethereum Virtual Machine to run its smart contracts and supports the Solidity programming language"
                    },
                    {
                        "id": "EthereumBlobs",
                        "type": "DA",
                        "name": "Ethereum with blobs",
                        "description": "This project is posting its data to Ethereum as blobs"
                    },
                    {
                        "id": "OPStack",
                        "type": "Stack",
                        "name": "Built on OP Stack",
                        "description": "The project is built on the OP Stack"
                    },
                    {
                        "id": "Superchain",
                        "type": "Infra",
                        "name": "Part of the Superchain",
                        "description": "The project is part of the Superchain, meaning it's included in the Superchain registry or uses the Superchain config"
                    },
                    {
                        "id": "Governance",
                        "type": "Other",
                        "name": "Governance",
                        "description": "This project features token voting"
                    },
                    {
                        "id": "L3HostChain",
                        "type": "Other",
                        "name": "L3 Host Chain",
                        "description": "This project serves as a host chain for L3s"
                    }
                ],
                "stage": "Stage 1",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "Self sequence",
                        "sentiment": "good",
                        "description": "In the event of a sequencer failure, users can force transactions to be included in the project's chain by sending them to L1. There can be up to a 12h delay on this operation."
                    },
                    {
                        "name": "State Validation",
                        "value": "Fraud proofs (INT)",
                        "sentiment": "good",
                        "description": "Fraud proofs allow actors watching the chain to prove that the state is incorrect. Interactive proofs (INT) require multiple transactions over time to resolve."
                    },
                    {
                        "name": "Data Availability",
                        "value": "Onchain",
                        "sentiment": "good",
                        "description": "All of the data needed for proof construction is published on Ethereum L1."
                    },
                    {
                        "name": "Exit Window",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "There is no exit window for users to exit in case of unwanted regular upgrades as they are initiated by the Security Council with instant upgrade power and without proper notice."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Self propose",
                        "sentiment": "good",
                        "description": "Anyone can be a Proposer and propose new roots to the L1 bridge."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 4306294100.28,
                        "ether": 1338422851.87,
                        "stablecoin": 695959755.93,
                        "associated": 1534516793.56
                    },
                    "change7d": -0.08836911676000225,
                    "associatedTokens": [
                        "OP"
                    ]
                }
            },
            "polygon-pos": {
                "id": "polygon-pos",
                "name": "Polygon PoS",
                "slug": "polygon-pos",
                "type": "layer2",
                "hostChain": "Ethereum",
                "category": "Other",
                "purposes": [
                    "Universal"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": false,
                "badges": [
                    {
                        "id": "EVM",
                        "type": "VM",
                        "name": "EVM",
                        "description": "This project uses the Ethereum Virtual Machine to run its smart contracts and supports the Solidity programming language"
                    },
                    {
                        "id": "CustomDA",
                        "type": "DA",
                        "name": "Custom DA solution",
                        "description": "This project is using a custom DA solution"
                    }
                ],
                "stage": "Not applicable",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "Enqueue via L1",
                        "sentiment": "warning",
                        "description": "Users can submit transactions to an L1 queue, but can't force them. The sequencers cannot selectively skip transactions but can stop processing the queue entirely. In other words, if the sequencers censor or are down, they are so for everyone. In Polygon PoS, the sequencers network corresponds to the PoS validators network, which is composed of 105 members."
                    },
                    {
                        "name": "State Validation",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "Currently the system permits invalid state roots. More details in project overview."
                    },
                    {
                        "name": "Data Availability",
                        "value": "PoS network",
                        "sentiment": "warning",
                        "description": "Data is guaranteed to be available by an external proof of stake network of validators. On Ethereum, DA is attested via signed block headers."
                    },
                    {
                        "name": "Exit Window",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "There is no window for users to exit in case of an unwanted regular upgrade since contracts are instantly upgradable."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Cannot withdraw",
                        "sentiment": "warning",
                        "description": "The Polygon PoS network is composed of 105 validators. Blocks are included in the chain only if signed by 2/3+1 of the network stake. It's currently not possible to join the set if the validator cap is reached. The current validator cap is set to 105. In the event of a failure in reaching consensus, withdrawals are frozen."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 3415036163.72,
                        "ether": 353163408.8,
                        "stablecoin": 1441062115.41,
                        "associated": 522454424.17
                    },
                    "change7d": -0.03264533842619477,
                    "associatedTokens": [
                        "POL",
                        "MATIC"
                    ]
                }
            },
            "hyperliquid": {
                "id": "hyperliquid",
                "name": "Hyperliquid",
                "slug": "hyperliquid",
                "type": "layer3",
                "hostChain": "Arbitrum One",
                "category": "Other",
                "purposes": [
                    "Exchange"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": false,
                "badges": [
                    {
                        "id": "AppChain",
                        "type": "VM",
                        "name": "Application-specific chain",
                        "description": "This project is built to operate a specific application"
                    },
                    {
                        "id": "CustomDA",
                        "type": "DA",
                        "name": "Custom DA solution",
                        "description": "This project is using a custom DA solution"
                    }
                ],
                "stage": "Not applicable",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "No mechanism",
                        "sentiment": "bad",
                        "description": "There is no mechanism to have transactions be included if the sequencer is down or censoring."
                    },
                    {
                        "name": "State Validation",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "Currently the system permits invalid state roots. More details in project overview."
                    },
                    {
                        "name": "Data Availability",
                        "value": "External",
                        "sentiment": "bad",
                        "description": "Proof construction and state derivation rely fully on data that is NOT published onchain."
                    },
                    {
                        "name": "Exit Window",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "There is no window for users to exit in case of an unwanted regular upgrade since contracts are instantly upgradable."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Cannot withdraw",
                        "sentiment": "bad",
                        "description": "Only the whitelisted proposers can publish state roots on L1, so in the event of failure the withdrawals are frozen."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 2507084289.72,
                        "ether": 0,
                        "stablecoin": 2507084289.72,
                        "associated": 0
                    },
                    "change7d": -0.0033651332847786097,
                    "associatedTokens": []
                }
            },
            "mantle": {
                "id": "mantle",
                "name": "Mantle",
                "slug": "mantle",
                "type": "layer2",
                "hostChain": "Ethereum",
                "category": "Optimium",
                "provider": "OP Stack",
                "purposes": [
                    "Universal"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": false,
                "badges": [
                    {
                        "id": "EVM",
                        "type": "VM",
                        "name": "EVM",
                        "description": "This project uses the Ethereum Virtual Machine to run its smart contracts and supports the Solidity programming language"
                    },
                    {
                        "id": "CustomDA",
                        "type": "DA",
                        "name": "Custom DA solution",
                        "description": "This project is using a custom DA solution"
                    },
                    {
                        "id": "OPStack",
                        "type": "Stack",
                        "name": "Built on OP Stack",
                        "description": "The project is built on the OP Stack"
                    }
                ],
                "stage": "Not applicable",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "Self sequence",
                        "sentiment": "good",
                        "description": "In the event of a sequencer failure, users can force transactions to be included in the project's chain by sending them to L1. There can be up to a 12h delay on this operation."
                    },
                    {
                        "name": "State Validation",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "Currently the system permits invalid state roots. More details in project overview."
                    },
                    {
                        "name": "Data Availability",
                        "value": "External",
                        "sentiment": "bad",
                        "description": "Proof construction and state derivation rely fully on data that is NOT published on chain. Mantle DA contracts are forked from EigenDA with significant modifications, most importantly removal of slashing conditions. DA fraud proof mechanism is not live yet."
                    },
                    {
                        "name": "Exit Window",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "There is no window for users to exit in case of an unwanted regular upgrade since contracts are instantly upgradable."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Cannot withdraw",
                        "sentiment": "bad",
                        "description": "Only the whitelisted proposers can publish state roots on L1, so in the event of failure the withdrawals are frozen."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 1382426992.3,
                        "ether": 558540998.81,
                        "stablecoin": 403023777.09,
                        "associated": 227092852.57
                    },
                    "change7d": -0.09616602726315537,
                    "associatedTokens": [
                        "MNT"
                    ]
                }
            },
            "zksync2": {
                "id": "zksync2",
                "name": "ZKsync Era",
                "slug": "zksync-era",
                "type": "layer2",
                "hostChain": "Ethereum",
                "category": "ZK Rollup",
                "provider": "ZK Stack",
                "purposes": [
                    "Universal"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": false,
                "badges": [
                    {
                        "id": "EVM",
                        "type": "VM",
                        "name": "EVM",
                        "description": "This project uses the Ethereum Virtual Machine to run its smart contracts and supports the Solidity programming language"
                    },
                    {
                        "id": "EthereumBlobs",
                        "type": "DA",
                        "name": "Ethereum with blobs",
                        "description": "This project is posting its data to Ethereum as blobs"
                    },
                    {
                        "id": "ZKStack",
                        "type": "Stack",
                        "name": "Built on the ZK Stack",
                        "description": "The project is built on the ZK Stack"
                    },
                    {
                        "id": "ElasticChain",
                        "type": "Infra",
                        "name": "Part of the Elastic Chain",
                        "description": "The project is part of the Elastic Chain, meaning it's based on the ZK stack and uses the shared contracts"
                    }
                ],
                "stage": "Stage 0",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "Enqueue via L1",
                        "sentiment": "warning",
                        "description": "Users can submit transactions to an L1 queue, but can't force them. The sequencers cannot selectively skip transactions but can stop processing the queue entirely. In other words, if the sequencers censor or are down, they are so for everyone."
                    },
                    {
                        "name": "State Validation",
                        "value": "ZK proofs (ST, SN)",
                        "sentiment": "good",
                        "description": "STARKs and SNARKs are zero knowledge proofs that ensure state correctness. STARKs proofs are wrapped in SNARKs proofs for efficiency. SNARKs require a trusted setup."
                    },
                    {
                        "name": "Data Availability",
                        "value": "Onchain (SD)",
                        "sentiment": "good",
                        "description": "All of the data (SD = state diffs) needed for proof construction is published onchain."
                    },
                    {
                        "name": "Exit Window",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "There is no window for users to exit in case of an unwanted standard upgrade because the central operator can censor withdrawal transactions by implementing a TransactionFilterer with no delay. The standard upgrade delay is 4d 3h."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Cannot withdraw",
                        "sentiment": "warning",
                        "description": "Only the whitelisted proposers can publish state roots on L1, so in the event of failure the withdrawals are frozen. There is a decentralized Governance system that can attempt changing Proposers with an upgrade."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 766506486.41,
                        "ether": 239247333.2,
                        "stablecoin": 152719605.24,
                        "associated": 305767664.77
                    },
                    "change7d": -0.10091788782729427,
                    "associatedTokens": [
                        "ZK"
                    ]
                }
            },
            "starknet": {
                "id": "starknet",
                "name": "Starknet",
                "slug": "starknet",
                "type": "layer2",
                "hostChain": "Ethereum",
                "category": "ZK Rollup",
                "provider": "SN Stack",
                "purposes": [
                    "Universal"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": false,
                "badges": [
                    {
                        "id": "CairoVM",
                        "type": "VM",
                        "name": "CairoVM",
                        "description": "This project uses the Cairo Virtual Machine to run its smart contracts and supports the Cairo programming language"
                    },
                    {
                        "id": "EthereumBlobs",
                        "type": "DA",
                        "name": "Ethereum with blobs",
                        "description": "This project is posting its data to Ethereum as blobs"
                    },
                    {
                        "id": "SNStack",
                        "type": "Stack",
                        "name": "Built on the SN Stack",
                        "description": "The project is built on the SN Stack"
                    },
                    {
                        "id": "SHARP",
                        "type": "Infra",
                        "name": "Uses SHARP",
                        "description": "The project uses a shared prover contract - SHARP"
                    },
                    {
                        "id": "Governance",
                        "type": "Other",
                        "name": "Governance",
                        "description": "This project features token voting"
                    },
                    {
                        "id": "L3HostChain",
                        "type": "Other",
                        "name": "L3 Host Chain",
                        "description": "This project serves as a host chain for L3s"
                    }
                ],
                "stage": "Stage 0",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "No mechanism",
                        "sentiment": "bad",
                        "description": "There is no mechanism to have transactions be included if the sequencer is down or censoring."
                    },
                    {
                        "name": "State Validation",
                        "value": "ZK proofs (ST)",
                        "sentiment": "good",
                        "description": "STARKs are zero knowledge proofs that ensure state correctness."
                    },
                    {
                        "name": "Data Availability",
                        "value": "Onchain (SD)",
                        "sentiment": "good",
                        "description": "All of the data (SD = state diffs) needed for proof construction is published onchain."
                    },
                    {
                        "name": "Exit Window",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "There is no window for users to exit in case of an unwanted regular upgrade since contracts are instantly upgradable."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Cannot withdraw",
                        "sentiment": "bad",
                        "description": "Only the whitelisted proposers can publish state roots on L1, so in the event of failure the withdrawals are frozen."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 558511955.69,
                        "ether": 200840041.67,
                        "stablecoin": 62380819.07,
                        "associated": 235670991.49
                    },
                    "change7d": -0.06875321487103803,
                    "associatedTokens": [
                        "STRK"
                    ]
                }
            },
            "linea": {
                "id": "linea",
                "name": "Linea",
                "slug": "linea",
                "type": "layer2",
                "hostChain": "Ethereum",
                "category": "ZK Rollup",
                "purposes": [
                    "Universal"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": false,
                "badges": [
                    {
                        "id": "EVM",
                        "type": "VM",
                        "name": "EVM",
                        "description": "This project uses the Ethereum Virtual Machine to run its smart contracts and supports the Solidity programming language"
                    },
                    {
                        "id": "EthereumBlobs",
                        "type": "DA",
                        "name": "Ethereum with blobs",
                        "description": "This project is posting its data to Ethereum as blobs"
                    },
                    {
                        "id": "L3HostChain",
                        "type": "Other",
                        "name": "L3 Host Chain",
                        "description": "This project serves as a host chain for L3s"
                    }
                ],
                "stage": "Stage 0",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "No mechanism",
                        "sentiment": "bad",
                        "description": "There is no mechanism to have transactions be included if the sequencer is down or censoring. Eventually (after 6 months of no finalized blocks) the Operator role becomes public, theoretically allowing anyone to post data."
                    },
                    {
                        "name": "State Validation",
                        "value": "ZK proofs (SN)",
                        "sentiment": "good",
                        "description": "SNARKs are zero knowledge proofs that ensure state correctness, but require trusted setup."
                    },
                    {
                        "name": "Data Availability",
                        "value": "Onchain",
                        "sentiment": "good",
                        "description": "All of the data needed for proof construction is published on Ethereum L1. Unlike most ZK rollups, transaction data is posted instead of state diffs."
                    },
                    {
                        "name": "Exit Window",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "There is no window for users to exit in case of an unwanted regular upgrade since contracts are instantly upgradable."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Cannot withdraw",
                        "sentiment": "bad",
                        "description": "Only the whitelisted proposers can publish state roots on L1, so in the event of failure the withdrawals are frozen. Eventually (after 6 months of no finalized blocks) the Operator role becomes public, theoretically allowing anyone to propose state with valid proofs."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 437929086.07,
                        "ether": 345274938.79,
                        "stablecoin": 27193504.22,
                        "associated": 0
                    },
                    "change7d": -0.10074928789189463,
                    "associatedTokens": []
                }
            },
            "blast": {
                "id": "blast",
                "name": "Blast",
                "slug": "blast",
                "type": "layer2",
                "hostChain": "Ethereum",
                "category": "Optimistic Rollup",
                "provider": "OP Stack",
                "purposes": [
                    "Universal"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": false,
                "badges": [
                    {
                        "id": "EVM",
                        "type": "VM",
                        "name": "EVM",
                        "description": "This project uses the Ethereum Virtual Machine to run its smart contracts and supports the Solidity programming language"
                    },
                    {
                        "id": "EthereumBlobs",
                        "type": "DA",
                        "name": "Ethereum with blobs",
                        "description": "This project is posting its data to Ethereum as blobs"
                    },
                    {
                        "id": "OPStack",
                        "type": "Stack",
                        "name": "Built on OP Stack",
                        "description": "The project is built on the OP Stack"
                    }
                ],
                "stage": "Stage 0",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "Self sequence",
                        "sentiment": "good",
                        "description": "In the event of a sequencer failure, users can force transactions to be included in the project's chain by sending them to L1. There can be up to a 12h delay on this operation."
                    },
                    {
                        "name": "State Validation",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "Currently the system permits invalid state roots. More details in project overview."
                    },
                    {
                        "name": "Data Availability",
                        "value": "Onchain",
                        "sentiment": "good",
                        "description": "All of the data needed for proof construction is published on Ethereum L1."
                    },
                    {
                        "name": "Exit Window",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "There is no window for users to exit in case of an unwanted regular upgrade since contracts are instantly upgradable."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Cannot withdraw",
                        "sentiment": "bad",
                        "description": "Only the whitelisted proposers can publish state roots on L1, so in the event of failure the withdrawals are frozen."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 414082779.42,
                        "ether": 227809916.24,
                        "stablecoin": 91776215.56,
                        "associated": 89858710.75
                    },
                    "change7d": -0.12095949953554241,
                    "associatedTokens": [
                        "BLAST"
                    ]
                }
            },
            "mantapacific": {
                "id": "mantapacific",
                "name": "Manta Pacific",
                "slug": "mantapacific",
                "type": "layer2",
                "hostChain": "Ethereum",
                "category": "Optimium",
                "provider": "OP Stack",
                "purposes": [
                    "Universal"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": false,
                "badges": [
                    {
                        "id": "EVM",
                        "type": "VM",
                        "name": "EVM",
                        "description": "This project uses the Ethereum Virtual Machine to run its smart contracts and supports the Solidity programming language"
                    },
                    {
                        "id": "Celestia",
                        "type": "DA",
                        "name": "Celestia",
                        "description": "This project is posting its data to Celestia"
                    },
                    {
                        "id": "OPStack",
                        "type": "Stack",
                        "name": "Built on OP Stack",
                        "description": "The project is built on the OP Stack"
                    },
                    {
                        "id": "Caldera",
                        "type": "RaaS",
                        "name": "Caldera",
                        "description": "This project was deployed via the rollup-as-a-service provider Caldera"
                    }
                ],
                "stage": "Not applicable",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "Self sequence",
                        "sentiment": "good",
                        "description": "In the event of a sequencer failure, users can force transactions to be included in the project's chain by sending them to L1. There can be up to a 12h delay on this operation."
                    },
                    {
                        "name": "State Validation",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "Currently the system permits invalid state roots. More details in project overview."
                    },
                    {
                        "name": "Data Availability",
                        "value": "External",
                        "sentiment": "bad",
                        "description": "Proof construction and state derivation fully rely on data that is posted on Celestia. Sequencer tx roots are not checked against the Blobstream bridge data roots onchain, but L2 nodes can verify data availability by running a Celestia light client."
                    },
                    {
                        "name": "Exit Window",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "There is no window for users to exit in case of an unwanted regular upgrade since contracts are instantly upgradable."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Cannot withdraw",
                        "sentiment": "bad",
                        "description": "Only the whitelisted proposers can publish state roots on L1, so in the event of failure the withdrawals are frozen."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 342972069.77,
                        "ether": 111148129.87,
                        "stablecoin": 100257188.84,
                        "associated": 117736015.24
                    },
                    "change7d": -0.09236823676572481,
                    "associatedTokens": [
                        "MANTA"
                    ]
                }
            },
            "worldchain": {
                "id": "worldchain",
                "name": "World Chain",
                "slug": "world",
                "type": "layer2",
                "hostChain": "Ethereum",
                "category": "Optimistic Rollup",
                "provider": "OP Stack",
                "purposes": [
                    "Universal",
                    "Identity"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": false,
                "badges": [
                    {
                        "id": "EVM",
                        "type": "VM",
                        "name": "EVM",
                        "description": "This project uses the Ethereum Virtual Machine to run its smart contracts and supports the Solidity programming language"
                    },
                    {
                        "id": "EthereumBlobs",
                        "type": "DA",
                        "name": "Ethereum with blobs",
                        "description": "This project is posting its data to Ethereum as blobs"
                    },
                    {
                        "id": "OPStack",
                        "type": "Stack",
                        "name": "Built on OP Stack",
                        "description": "The project is built on the OP Stack"
                    },
                    {
                        "id": "Superchain",
                        "type": "Infra",
                        "name": "Part of the Superchain",
                        "description": "The project is part of the Superchain, meaning it's included in the Superchain registry or uses the Superchain config"
                    },
                    {
                        "id": "Alchemy",
                        "type": "RaaS",
                        "name": "Alchemy",
                        "description": "This project was deployed via the rollup-as-a-service provider Alchemy"
                    }
                ],
                "stage": "Stage 0",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "Self sequence",
                        "sentiment": "good",
                        "description": "In the event of a sequencer failure, users can force transactions to be included in the project's chain by sending them to L1. There can be up to a 12h delay on this operation."
                    },
                    {
                        "name": "State Validation",
                        "value": "Fraud proofs (INT)",
                        "sentiment": "bad",
                        "description": "Fraud proofs allow actors watching the chain to prove that the state is incorrect. Interactive proofs (INT) require multiple transactions over time to resolve. Only one entity is currently allowed to propose and submit challenges, as only permissioned games are currently allowed."
                    },
                    {
                        "name": "Data Availability",
                        "value": "Onchain",
                        "sentiment": "good",
                        "description": "All of the data needed for proof construction is published on Ethereum L1."
                    },
                    {
                        "name": "Exit Window",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "There is no window for users to exit in case of an unwanted regular upgrade since contracts are instantly upgradable."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Cannot withdraw",
                        "sentiment": "bad",
                        "description": "Only the whitelisted proposers can publish state roots on L1, so in the event of failure the withdrawals are frozen."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 276112249.15,
                        "ether": 3222321.88,
                        "stablecoin": 14255331.21,
                        "associated": 255076097.6
                    },
                    "change7d": -0.09512482993199634,
                    "associatedTokens": [
                        "WLD"
                    ]
                }
            },
            "scroll": {
                "id": "scroll",
                "name": "Scroll",
                "slug": "scroll",
                "type": "layer2",
                "hostChain": "Ethereum",
                "category": "ZK Rollup",
                "purposes": [
                    "Universal"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": false,
                "badges": [
                    {
                        "id": "EVM",
                        "type": "VM",
                        "name": "EVM",
                        "description": "This project uses the Ethereum Virtual Machine to run its smart contracts and supports the Solidity programming language"
                    },
                    {
                        "id": "EthereumBlobs",
                        "type": "DA",
                        "name": "Ethereum with blobs",
                        "description": "This project is posting its data to Ethereum as blobs"
                    },
                    {
                        "id": "L3HostChain",
                        "type": "Other",
                        "name": "L3 Host Chain",
                        "description": "This project serves as a host chain for L3s"
                    }
                ],
                "stage": "Stage 0",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "No mechanism",
                        "sentiment": "bad",
                        "description": "There is no mechanism to have transactions be included if the sequencer is down or censoring."
                    },
                    {
                        "name": "State Validation",
                        "value": "ZK proofs (SN)",
                        "sentiment": "good",
                        "description": "SNARKs are zero knowledge proofs that ensure state correctness, but require trusted setup."
                    },
                    {
                        "name": "Data Availability",
                        "value": "Onchain",
                        "sentiment": "good",
                        "description": "All of the data needed for proof construction is published on Ethereum L1."
                    },
                    {
                        "name": "Exit Window",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "There is no window for users to exit in case of an unwanted regular upgrade since contracts are instantly upgradable."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Cannot withdraw",
                        "sentiment": "bad",
                        "description": "Only the whitelisted proposers can publish state roots on L1, so in the event of failure the withdrawals are frozen."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 274971314.63,
                        "ether": 156941121.5,
                        "stablecoin": 28530667.2,
                        "associated": 87312220.03
                    },
                    "change7d": -0.1374993265719503,
                    "associatedTokens": [
                        "SCR"
                    ]
                }
            },
            "bob": {
                "id": "bob",
                "name": "BOB",
                "slug": "bob",
                "type": "layer2",
                "hostChain": "Ethereum",
                "category": "Optimistic Rollup",
                "provider": "OP Stack",
                "purposes": [
                    "Universal",
                    "Bitcoin DApps"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": false,
                "badges": [
                    {
                        "id": "EVM",
                        "type": "VM",
                        "name": "EVM",
                        "description": "This project uses the Ethereum Virtual Machine to run its smart contracts and supports the Solidity programming language"
                    },
                    {
                        "id": "EthereumBlobs",
                        "type": "DA",
                        "name": "Ethereum with blobs",
                        "description": "This project is posting its data to Ethereum as blobs"
                    },
                    {
                        "id": "OPStack",
                        "type": "Stack",
                        "name": "Built on OP Stack",
                        "description": "The project is built on the OP Stack"
                    },
                    {
                        "id": "Conduit",
                        "type": "RaaS",
                        "name": "Conduit",
                        "description": "This project was deployed via the rollup-as-a-service provider Conduit"
                    }
                ],
                "stage": "Stage 0",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "Self sequence",
                        "sentiment": "good",
                        "description": "In the event of a sequencer failure, users can force transactions to be included in the project's chain by sending them to L1. There can be up to a 12h delay on this operation."
                    },
                    {
                        "name": "State Validation",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "Currently the system permits invalid state roots. More details in project overview."
                    },
                    {
                        "name": "Data Availability",
                        "value": "Onchain",
                        "sentiment": "good",
                        "description": "All of the data needed for proof construction is published on Ethereum L1."
                    },
                    {
                        "name": "Exit Window",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "There is no window for users to exit in case of an unwanted regular upgrade since contracts are instantly upgradable."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Cannot withdraw",
                        "sentiment": "bad",
                        "description": "Only the whitelisted proposers can publish state roots on L1, so in the event of failure the withdrawals are frozen."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 274961816.94,
                        "ether": 7839524.52,
                        "stablecoin": 3309410.44,
                        "associated": 0
                    },
                    "change7d": 0.06537986302507814,
                    "associatedTokens": []
                }
            },
            "fraxtal": {
                "id": "fraxtal",
                "name": "Fraxtal",
                "slug": "fraxtal",
                "type": "layer2",
                "hostChain": "Ethereum",
                "category": "Optimium",
                "provider": "OP Stack",
                "purposes": [
                    "Universal"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": false,
                "badges": [
                    {
                        "id": "EVM",
                        "type": "VM",
                        "name": "EVM",
                        "description": "This project uses the Ethereum Virtual Machine to run its smart contracts and supports the Solidity programming language"
                    },
                    {
                        "id": "CustomDA",
                        "type": "DA",
                        "name": "Custom DA solution",
                        "description": "This project is using a custom DA solution"
                    },
                    {
                        "id": "OPStack",
                        "type": "Stack",
                        "name": "Built on OP Stack",
                        "description": "The project is built on the OP Stack"
                    },
                    {
                        "id": "Superchain",
                        "type": "Infra",
                        "name": "Part of the Superchain",
                        "description": "The project is part of the Superchain, meaning it's included in the Superchain registry or uses the Superchain config"
                    }
                ],
                "stage": "Not applicable",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "Self sequence",
                        "sentiment": "good",
                        "description": "In the event of a sequencer failure, users can force transactions to be included in the project's chain by sending them to L1. There can be up to a 12h delay on this operation."
                    },
                    {
                        "name": "State Validation",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "Currently the system permits invalid state roots. More details in project overview."
                    },
                    {
                        "name": "Data Availability",
                        "value": "External",
                        "sentiment": "bad",
                        "description": "Proof construction and state derivation rely fully on data that is NOT published on chain. Fraxtal uses a separate data availability module developed by the Frax Core Team, and data availability attestations are not published on chain."
                    },
                    {
                        "name": "Exit Window",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "There is no window for users to exit in case of an unwanted regular upgrade since contracts are instantly upgradable."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Cannot withdraw",
                        "sentiment": "bad",
                        "description": "Only the whitelisted proposers can publish state roots on L1, so in the event of failure the withdrawals are frozen."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 206952020.05,
                        "ether": 30746382.52,
                        "stablecoin": 97908561.77,
                        "associated": 39521692.39
                    },
                    "change7d": -0.025766555577663386,
                    "associatedTokens": [
                        "FXS",
                        "FPIS"
                    ]
                }
            },
            "swell": {
                "id": "swell",
                "name": "Swellchain",
                "slug": "swell",
                "type": "layer2",
                "hostChain": "Ethereum",
                "category": "Optimistic Rollup",
                "provider": "OP Stack",
                "purposes": [
                    "Universal",
                    "Restaking"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": false,
                "badges": [
                    {
                        "id": "EVM",
                        "type": "VM",
                        "name": "EVM",
                        "description": "This project uses the Ethereum Virtual Machine to run its smart contracts and supports the Solidity programming language"
                    },
                    {
                        "id": "EthereumBlobs",
                        "type": "DA",
                        "name": "Ethereum with blobs",
                        "description": "This project is posting its data to Ethereum as blobs"
                    },
                    {
                        "id": "OPStack",
                        "type": "Stack",
                        "name": "Built on OP Stack",
                        "description": "The project is built on the OP Stack"
                    },
                    {
                        "id": "Superchain",
                        "type": "Infra",
                        "name": "Part of the Superchain",
                        "description": "The project is part of the Superchain, meaning it's included in the Superchain registry or uses the Superchain config"
                    },
                    {
                        "id": "AltLayer",
                        "type": "RaaS",
                        "name": "AltLayer",
                        "description": "This project was deployed via the rollup-as-a-service provider AltLayer"
                    }
                ],
                "stage": "Stage 0",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "Self sequence",
                        "sentiment": "good",
                        "description": "In the event of a sequencer failure, users can force transactions to be included in the project's chain by sending them to L1. There can be up to a 12h delay on this operation."
                    },
                    {
                        "name": "State Validation",
                        "value": "Fraud proofs (INT)",
                        "sentiment": "bad",
                        "description": "Fraud proofs allow actors watching the chain to prove that the state is incorrect. Interactive proofs (INT) require multiple transactions over time to resolve. Only one entity is currently allowed to propose and submit challenges, as only permissioned games are currently allowed."
                    },
                    {
                        "name": "Data Availability",
                        "value": "Onchain",
                        "sentiment": "good",
                        "description": "All of the data needed for proof construction is published on Ethereum L1."
                    },
                    {
                        "name": "Exit Window",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "There is no window for users to exit in case of an unwanted regular upgrade since contracts are instantly upgradable."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Cannot withdraw",
                        "sentiment": "bad",
                        "description": "Only the whitelisted proposers can publish state roots on L1, so in the event of failure the withdrawals are frozen."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 197839982.93,
                        "ether": 82075598.47,
                        "stablecoin": 933416.18,
                        "associated": 0
                    },
                    "change7d": -0.04223395358462789,
                    "associatedTokens": [
                        "WLD"
                    ]
                }
            },
            "zircuit": {
                "id": "zircuit",
                "name": "Zircuit",
                "slug": "zircuit",
                "type": "layer2",
                "hostChain": "Ethereum",
                "category": "Optimistic Rollup",
                "provider": "OP Stack",
                "purposes": [
                    "Universal"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": false,
                "badges": [
                    {
                        "id": "EVM",
                        "type": "VM",
                        "name": "EVM",
                        "description": "This project uses the Ethereum Virtual Machine to run its smart contracts and supports the Solidity programming language"
                    },
                    {
                        "id": "EthereumBlobs",
                        "type": "DA",
                        "name": "Ethereum with blobs",
                        "description": "This project is posting its data to Ethereum as blobs"
                    },
                    {
                        "id": "OPStack",
                        "type": "Stack",
                        "name": "Built on OP Stack",
                        "description": "The project is built on the OP Stack"
                    }
                ],
                "stage": "Stage 0",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "Self sequence",
                        "sentiment": "good",
                        "description": "In the event of a sequencer failure, users can force transactions to be included in the project's chain by sending them to L1. There can be up to a 12h delay on this operation."
                    },
                    {
                        "name": "State Validation",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "Currently the system permits invalid state roots. More details in project overview."
                    },
                    {
                        "name": "Data Availability",
                        "value": "Onchain",
                        "sentiment": "good",
                        "description": "All of the data needed for proof construction is published on Ethereum L1."
                    },
                    {
                        "name": "Exit Window",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "There is no window for users to exit in case of an unwanted regular upgrade since contracts are instantly upgradable."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Cannot withdraw",
                        "sentiment": "bad",
                        "description": "Only the whitelisted proposers can publish state roots on L1, so in the event of failure the withdrawals are frozen."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 184096497.64,
                        "ether": 88470514.41,
                        "stablecoin": 1269290.45,
                        "associated": 92829947.98
                    },
                    "change7d": -0.2504851731799824,
                    "associatedTokens": [
                        "ZRC"
                    ]
                }
            },
            "mode": {
                "id": "mode",
                "name": "Mode Network",
                "shortName": "Mode",
                "slug": "mode",
                "type": "layer2",
                "hostChain": "Ethereum",
                "category": "Optimistic Rollup",
                "provider": "OP Stack",
                "purposes": [
                    "Universal"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": false,
                "badges": [
                    {
                        "id": "EVM",
                        "type": "VM",
                        "name": "EVM",
                        "description": "This project uses the Ethereum Virtual Machine to run its smart contracts and supports the Solidity programming language"
                    },
                    {
                        "id": "EthereumBlobs",
                        "type": "DA",
                        "name": "Ethereum with blobs",
                        "description": "This project is posting its data to Ethereum as blobs"
                    },
                    {
                        "id": "OPStack",
                        "type": "Stack",
                        "name": "Built on OP Stack",
                        "description": "The project is built on the OP Stack"
                    },
                    {
                        "id": "Superchain",
                        "type": "Infra",
                        "name": "Part of the Superchain",
                        "description": "The project is part of the Superchain, meaning it's included in the Superchain registry or uses the Superchain config"
                    },
                    {
                        "id": "Conduit",
                        "type": "RaaS",
                        "name": "Conduit",
                        "description": "This project was deployed via the rollup-as-a-service provider Conduit"
                    }
                ],
                "stage": "Stage 0",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "Self sequence",
                        "sentiment": "good",
                        "description": "In the event of a sequencer failure, users can force transactions to be included in the project's chain by sending them to L1. There can be up to a 12h delay on this operation."
                    },
                    {
                        "name": "State Validation",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "Currently the system permits invalid state roots. More details in project overview."
                    },
                    {
                        "name": "Data Availability",
                        "value": "Onchain",
                        "sentiment": "good",
                        "description": "All of the data needed for proof construction is published on Ethereum L1."
                    },
                    {
                        "name": "Exit Window",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "There is no window for users to exit in case of an unwanted regular upgrade since contracts are instantly upgradable."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Cannot withdraw",
                        "sentiment": "bad",
                        "description": "Only the whitelisted proposers can publish state roots on L1, so in the event of failure the withdrawals are frozen."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 157284458.18,
                        "ether": 15827030.13,
                        "stablecoin": 4129504.66,
                        "associated": 16343681.51
                    },
                    "change7d": -0.023624701993469555,
                    "associatedTokens": [
                        "MODE"
                    ]
                }
            },
            "metis": {
                "id": "metis",
                "name": "Metis Andromeda",
                "shortName": "Metis",
                "slug": "metis",
                "type": "layer2",
                "hostChain": "Ethereum",
                "category": "Optimium",
                "provider": "OVM",
                "purposes": [
                    "Universal"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": false,
                "badges": [
                    {
                        "id": "EVM",
                        "type": "VM",
                        "name": "EVM",
                        "description": "This project uses the Ethereum Virtual Machine to run its smart contracts and supports the Solidity programming language"
                    },
                    {
                        "id": "CustomDA",
                        "type": "DA",
                        "name": "Custom DA solution",
                        "description": "This project is using a custom DA solution"
                    },
                    {
                        "id": "OVM",
                        "type": "Fork",
                        "name": "Fork of OVM",
                        "description": "The project is fork of the Optimistic Virtual Machine"
                    }
                ],
                "stage": "Not applicable",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "Enqueue via L1",
                        "sentiment": "warning",
                        "description": "Users can submit transactions to an L1 queue, but can't force them. The sequencers cannot selectively skip transactions but can stop processing the queue entirely. In other words, if the sequencers censor or are down, they are so for everyone."
                    },
                    {
                        "name": "State Validation",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "Currently the system permits invalid state roots. More details in project overview."
                    },
                    {
                        "name": "Data Availability",
                        "value": "External (MEMO)",
                        "sentiment": "bad",
                        "description": "Transaction data is kept in MEMO decentralized storage."
                    },
                    {
                        "name": "Exit Window",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "There is no window for users to exit in case of an unwanted regular upgrade since contracts are instantly upgradable."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Cannot withdraw",
                        "sentiment": "bad",
                        "description": "Only the whitelisted proposers can publish state roots on L1, so in the event of failure the withdrawals are frozen."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 155146129.05,
                        "ether": 10769106.58,
                        "stablecoin": 21676487.62,
                        "associated": 122581921.55
                    },
                    "change7d": -0.179576418505365,
                    "associatedTokens": [
                        "Metis"
                    ]
                }
            },
            "taiko": {
                "id": "taiko",
                "name": "Taiko",
                "slug": "taiko",
                "type": "layer2",
                "hostChain": "Ethereum",
                "category": "Optimistic Rollup",
                "provider": "Taiko",
                "purposes": [
                    "Universal"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": false,
                "badges": [
                    {
                        "id": "EVM",
                        "type": "VM",
                        "name": "EVM",
                        "description": "This project uses the Ethereum Virtual Machine to run its smart contracts and supports the Solidity programming language"
                    },
                    {
                        "id": "EthereumBlobs",
                        "type": "DA",
                        "name": "Ethereum with blobs",
                        "description": "This project is posting its data to Ethereum as blobs"
                    },
                    {
                        "id": "BasedSequencing",
                        "type": "Other",
                        "name": "Based Sequencing",
                        "description": "This project is ordering its transactions through Ethereum block proposers"
                    }
                ],
                "stage": "Stage 0",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "Self sequence",
                        "sentiment": "good",
                        "description": "The system uses a based (or L1-sequenced) rollup sequencing mechanism. Users can propose L2 blocks directly on the Taiko L1 contract. The TaikoAdmin multisig can pause block proposals without delay."
                    },
                    {
                        "name": "State Validation",
                        "value": "Multi-proofs",
                        "sentiment": "bad",
                        "description": "A multi-tier proof system is used. The tiers are SGX, ZK (RISC0, SP1), Minority Guardian, and Guardian (highest tier). A higher tier proof can challenge a lower one within the challenge period.\n        The system allows for an invalid state to be finalized by compromised Guardians (the highest tier) and does not enforce ZK proofs."
                    },
                    {
                        "name": "Data Availability",
                        "value": "Onchain",
                        "sentiment": "good",
                        "description": "All of the data needed for proof construction is published on Ethereum L1."
                    },
                    {
                        "name": "Exit Window",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "There is no window for users to exit in case of an unwanted upgrade since contracts are instantly upgradable."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Self propose",
                        "sentiment": "good",
                        "description": "Provers can examine the proposed blocks on the TaikoL1 contract, and generate SGX proofs for them. Currently, any prover providing a valid SGX attestation can register a SGX instance and create proofs for proposed blocks."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 152492117.14,
                        "ether": 11503590.82,
                        "stablecoin": 5427367.86,
                        "associated": 55320713.96
                    },
                    "change7d": -0.04777820294503721,
                    "associatedTokens": [
                        "TAIKO"
                    ]
                }
            },
            "sophon": {
                "id": "sophon",
                "name": "Sophon",
                "slug": "sophon",
                "type": "layer2",
                "hostChain": "Ethereum",
                "category": "Validium",
                "provider": "ZK Stack",
                "purposes": [
                    "Universal"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": false,
                "badges": [
                    {
                        "id": "EVM",
                        "type": "VM",
                        "name": "EVM",
                        "description": "This project uses the Ethereum Virtual Machine to run its smart contracts and supports the Solidity programming language"
                    },
                    {
                        "id": "Avail",
                        "type": "DA",
                        "name": "Avail",
                        "description": "This project is posting its data to Avail"
                    },
                    {
                        "id": "ZKStack",
                        "type": "Stack",
                        "name": "Built on the ZK Stack",
                        "description": "The project is built on the ZK Stack"
                    },
                    {
                        "id": "ElasticChain",
                        "type": "Infra",
                        "name": "Part of the Elastic Chain",
                        "description": "The project is part of the Elastic Chain, meaning it's based on the ZK stack and uses the shared contracts"
                    }
                ],
                "stage": "Not applicable",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "Enqueue via L1",
                        "sentiment": "warning",
                        "description": "Users can submit transactions to an L1 queue, but can't force them. The sequencers cannot selectively skip transactions but can stop processing the queue entirely. In other words, if the sequencers censor or are down, they are so for everyone."
                    },
                    {
                        "name": "State Validation",
                        "value": "ZK proofs (ST, SN)",
                        "sentiment": "good",
                        "description": "STARKs and SNARKs are zero knowledge proofs that ensure state correctness. STARKs proofs are wrapped in SNARKs proofs for efficiency. SNARKs require a trusted setup."
                    },
                    {
                        "name": "Data Availability",
                        "value": "External",
                        "sentiment": "bad",
                        "description": "Proof construction and state derivation rely fully on data that is NOT published onchain."
                    },
                    {
                        "name": "Exit Window",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "There is no window for users to exit in case of an unwanted standard upgrade because the central operator can censor withdrawal transactions by implementing a TransactionFilterer with no delay. The standard upgrade delay is 4d 3h."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Cannot withdraw",
                        "sentiment": "warning",
                        "description": "Only the whitelisted proposers can publish state roots on L1, so in the event of failure the withdrawals are frozen. There is a decentralized Governance system that can attempt changing Proposers with an upgrade."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 118749664.32,
                        "ether": 31451617.74,
                        "stablecoin": 15312369.94,
                        "associated": 0
                    },
                    "change7d": -0.07733344260968511,
                    "associatedTokens": [
                        "SOPH"
                    ]
                }
            },
            "lisk": {
                "id": "lisk",
                "name": "Lisk",
                "slug": "lisk",
                "type": "layer2",
                "hostChain": "Ethereum",
                "category": "Optimistic Rollup",
                "provider": "OP Stack",
                "purposes": [
                    "Universal"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": false,
                "badges": [
                    {
                        "id": "EVM",
                        "type": "VM",
                        "name": "EVM",
                        "description": "This project uses the Ethereum Virtual Machine to run its smart contracts and supports the Solidity programming language"
                    },
                    {
                        "id": "EthereumBlobs",
                        "type": "DA",
                        "name": "Ethereum with blobs",
                        "description": "This project is posting its data to Ethereum as blobs"
                    },
                    {
                        "id": "OPStack",
                        "type": "Stack",
                        "name": "Built on OP Stack",
                        "description": "The project is built on the OP Stack"
                    },
                    {
                        "id": "Superchain",
                        "type": "Infra",
                        "name": "Part of the Superchain",
                        "description": "The project is part of the Superchain, meaning it's included in the Superchain registry or uses the Superchain config"
                    },
                    {
                        "id": "MigratedFromL1",
                        "type": "Other",
                        "name": "Migrated from L1 to Ethereum L2",
                        "description": "This project has migrated from being a standalone L1 blockchain to an Ethereum L2"
                    },
                    {
                        "id": "Gelato",
                        "type": "RaaS",
                        "name": "Gelato",
                        "description": "This project was deployed via the rollup-as-a-service provider Gelato"
                    }
                ],
                "stage": "Stage 0",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "Self sequence",
                        "sentiment": "good",
                        "description": "In the event of a sequencer failure, users can force transactions to be included in the project's chain by sending them to L1. There can be up to a 12h delay on this operation."
                    },
                    {
                        "name": "State Validation",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "Currently the system permits invalid state roots. More details in project overview."
                    },
                    {
                        "name": "Data Availability",
                        "value": "Onchain",
                        "sentiment": "good",
                        "description": "All of the data needed for proof construction is published on Ethereum L1."
                    },
                    {
                        "name": "Exit Window",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "There is no window for users to exit in case of an unwanted regular upgrade since contracts are instantly upgradable."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Cannot withdraw",
                        "sentiment": "bad",
                        "description": "Only the whitelisted proposers can publish state roots on L1, so in the event of failure the withdrawals are frozen."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 106486672.05,
                        "ether": 3439367.82,
                        "stablecoin": 2230859.66,
                        "associated": 100440496.08
                    },
                    "change7d": -0.09745546745940847,
                    "associatedTokens": [
                        "LSK"
                    ]
                }
            },
            "ink": {
                "id": "ink",
                "name": "Ink",
                "slug": "ink",
                "type": "layer2",
                "hostChain": "Ethereum",
                "category": "Optimistic Rollup",
                "provider": "OP Stack",
                "purposes": [
                    "Universal"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": false,
                "badges": [
                    {
                        "id": "EVM",
                        "type": "VM",
                        "name": "EVM",
                        "description": "This project uses the Ethereum Virtual Machine to run its smart contracts and supports the Solidity programming language"
                    },
                    {
                        "id": "EthereumBlobs",
                        "type": "DA",
                        "name": "Ethereum with blobs",
                        "description": "This project is posting its data to Ethereum as blobs"
                    },
                    {
                        "id": "OPStack",
                        "type": "Stack",
                        "name": "Built on OP Stack",
                        "description": "The project is built on the OP Stack"
                    },
                    {
                        "id": "Superchain",
                        "type": "Infra",
                        "name": "Part of the Superchain",
                        "description": "The project is part of the Superchain, meaning it's included in the Superchain registry or uses the Superchain config"
                    },
                    {
                        "id": "Gelato",
                        "type": "RaaS",
                        "name": "Gelato",
                        "description": "This project was deployed via the rollup-as-a-service provider Gelato"
                    }
                ],
                "stage": "Stage 1",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "Self sequence",
                        "sentiment": "good",
                        "description": "In the event of a sequencer failure, users can force transactions to be included in the project's chain by sending them to L1. There can be up to a 12h delay on this operation."
                    },
                    {
                        "name": "State Validation",
                        "value": "Fraud proofs (INT)",
                        "sentiment": "good",
                        "description": "Fraud proofs allow actors watching the chain to prove that the state is incorrect. Interactive proofs (INT) require multiple transactions over time to resolve."
                    },
                    {
                        "name": "Data Availability",
                        "value": "Onchain",
                        "sentiment": "good",
                        "description": "All of the data needed for proof construction is published on Ethereum L1."
                    },
                    {
                        "name": "Exit Window",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "There is no window for users to exit in case of an unwanted regular upgrade since contracts are instantly upgradable."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Self propose",
                        "sentiment": "good",
                        "description": "Anyone can be a Proposer and propose new roots to the L1 bridge."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 90021052.39,
                        "ether": 18822338.9,
                        "stablecoin": 71198713.08,
                        "associated": 0
                    },
                    "change7d": -0.03376409690011606,
                    "associatedTokens": []
                }
            },
            "lyra": {
                "id": "lyra",
                "name": "Derive",
                "slug": "derive",
                "type": "layer2",
                "hostChain": "Ethereum",
                "category": "Optimium",
                "provider": "OP Stack",
                "purposes": [
                    "Universal",
                    "Exchange"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": false,
                "badges": [
                    {
                        "id": "EVM",
                        "type": "VM",
                        "name": "EVM",
                        "description": "This project uses the Ethereum Virtual Machine to run its smart contracts and supports the Solidity programming language"
                    },
                    {
                        "id": "Celestia",
                        "type": "DA",
                        "name": "Celestia",
                        "description": "This project is posting its data to Celestia"
                    },
                    {
                        "id": "OPStack",
                        "type": "Stack",
                        "name": "Built on OP Stack",
                        "description": "The project is built on the OP Stack"
                    },
                    {
                        "id": "Conduit",
                        "type": "RaaS",
                        "name": "Conduit",
                        "description": "This project was deployed via the rollup-as-a-service provider Conduit"
                    }
                ],
                "stage": "Not applicable",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "Self sequence",
                        "sentiment": "good",
                        "description": "In the event of a sequencer failure, users can force transactions to be included in the project's chain by sending them to L1. There can be up to a 12h delay on this operation."
                    },
                    {
                        "name": "State Validation",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "Currently the system permits invalid state roots. More details in project overview."
                    },
                    {
                        "name": "Data Availability",
                        "value": "External",
                        "sentiment": "bad",
                        "description": "Proof construction and state derivation fully rely on data that is posted on Celestia. Sequencer tx roots are not checked against the Blobstream bridge data roots onchain, but L2 nodes can verify data availability by running a Celestia light client."
                    },
                    {
                        "name": "Exit Window",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "There is no window for users to exit in case of an unwanted regular upgrade since contracts are instantly upgradable."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Cannot withdraw",
                        "sentiment": "bad",
                        "description": "Only the whitelisted proposers can publish state roots on L1, so in the event of failure the withdrawals are frozen."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 85361512.41,
                        "ether": 27365492.27,
                        "stablecoin": 6945618.72,
                        "associated": 0
                    },
                    "change7d": -0.03726289280566586,
                    "associatedTokens": [
                        "LYRA"
                    ]
                }
            },
            "galxegravity": {
                "id": "galxegravity",
                "name": "Gravity",
                "slug": "galxegravity",
                "type": "layer2",
                "hostChain": "Ethereum",
                "category": "Optimium",
                "provider": "Arbitrum",
                "purposes": [
                    "Universal"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": false,
                "badges": [
                    {
                        "id": "EVM",
                        "type": "VM",
                        "name": "EVM",
                        "description": "This project uses the Ethereum Virtual Machine to run its smart contracts and supports the Solidity programming language"
                    },
                    {
                        "id": "DAC",
                        "type": "DA",
                        "name": "Data Availability Committee",
                        "description": "There is a Data Availability Committee that provides/attests to data availability"
                    },
                    {
                        "id": "Orbit",
                        "type": "Stack",
                        "name": "Built on Arbitrum Orbit",
                        "description": "The project is built on Arbitrum Orbit"
                    },
                    {
                        "id": "Conduit",
                        "type": "RaaS",
                        "name": "Conduit",
                        "description": "This project was deployed via the rollup-as-a-service provider Conduit"
                    }
                ],
                "stage": "Not applicable",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "Self sequence",
                        "sentiment": "good",
                        "description": "In the event of a sequencer failure, users can force transactions to be included in the project's chain by sending them to L1. There can be up to a 1000d delay on this operation."
                    },
                    {
                        "name": "State Validation",
                        "value": "Fraud proofs (INT)",
                        "sentiment": "bad",
                        "description": "No actor outside of the single Proposer can submit fraud proofs. Interactive proofs (INT) require multiple transactions over time to resolve. The challenge protocol can be subject to delay attacks. There is a 5d 14h challenge period."
                    },
                    {
                        "name": "Data Availability",
                        "value": "External (DAC)",
                        "sentiment": "bad",
                        "description": "Proof construction relies fully on data that is NOT published onchain. There exists a Data Availability Committee (DAC) with a threshold of 1/1 that is tasked with protecting and supplying the data."
                    },
                    {
                        "name": "Exit Window",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "There is no window for users to exit in case of an unwanted regular upgrade since contracts are instantly upgradable."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Self propose",
                        "sentiment": "good",
                        "description": "Anyone can become a Proposer after 11d 23h of inactivity from the currently whitelisted Proposers."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 84632412.62,
                        "ether": 4848186.86,
                        "stablecoin": 1927825.99,
                        "associated": 77856399.77
                    },
                    "change7d": -0.08654925264068558,
                    "associatedTokens": [
                        "G"
                    ]
                }
            },
            "fuel": {
                "id": "fuel",
                "name": "Fuel Ignition",
                "slug": "fuel",
                "type": "layer2",
                "hostChain": "Ethereum",
                "category": "Optimistic Rollup",
                "purposes": [
                    "Universal"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": false,
                "badges": [
                    {
                        "id": "FuelVM",
                        "type": "VM",
                        "name": "FuelVM",
                        "description": "This project uses the Fuel Virtual Machine to run its smart contracts and supports the Sway programming language"
                    },
                    {
                        "id": "EthereumBlobs",
                        "type": "DA",
                        "name": "Ethereum with blobs",
                        "description": "This project is posting its data to Ethereum as blobs"
                    }
                ],
                "stage": "Stage 0",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "Self sequence",
                        "sentiment": "good",
                        "description": "In the event of a sequencer failure, users can force transactions to be included in the project's chain by sending them to L1."
                    },
                    {
                        "name": "State Validation",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "Currently the system permits invalid state roots. More details in project overview."
                    },
                    {
                        "name": "Data Availability",
                        "value": "Onchain",
                        "sentiment": "good",
                        "description": "All of the data needed for proof construction is published on Ethereum L1."
                    },
                    {
                        "name": "Exit Window",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "There is no window for users to exit in case of an unwanted regular upgrade since contracts are instantly upgradable."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Cannot withdraw",
                        "sentiment": "bad",
                        "description": "Only the whitelisted proposers can publish state roots on L1, so in the event of failure the withdrawals are frozen."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 72323484.67,
                        "ether": 26333615.37,
                        "stablecoin": 14748204.46,
                        "associated": 28375264.69
                    },
                    "change7d": -0.1209846869364698,
                    "associatedTokens": [
                        "FUEL"
                    ]
                }
            },
            "soneium": {
                "id": "soneium",
                "name": "Soneium",
                "slug": "soneium",
                "type": "layer2",
                "hostChain": "Ethereum",
                "category": "Optimistic Rollup",
                "provider": "OP Stack",
                "purposes": [
                    "Universal"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": false,
                "badges": [
                    {
                        "id": "EVM",
                        "type": "VM",
                        "name": "EVM",
                        "description": "This project uses the Ethereum Virtual Machine to run its smart contracts and supports the Solidity programming language"
                    },
                    {
                        "id": "EthereumBlobs",
                        "type": "DA",
                        "name": "Ethereum with blobs",
                        "description": "This project is posting its data to Ethereum as blobs"
                    },
                    {
                        "id": "OPStack",
                        "type": "Stack",
                        "name": "Built on OP Stack",
                        "description": "The project is built on the OP Stack"
                    },
                    {
                        "id": "Superchain",
                        "type": "Infra",
                        "name": "Part of the Superchain",
                        "description": "The project is part of the Superchain, meaning it's included in the Superchain registry or uses the Superchain config"
                    }
                ],
                "stage": "Stage 0",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "Self sequence",
                        "sentiment": "good",
                        "description": "In the event of a sequencer failure, users can force transactions to be included in the project's chain by sending them to L1. There can be up to a 12h delay on this operation."
                    },
                    {
                        "name": "State Validation",
                        "value": "Fraud proofs (INT)",
                        "sentiment": "bad",
                        "description": "Fraud proofs allow actors watching the chain to prove that the state is incorrect. Interactive proofs (INT) require multiple transactions over time to resolve. Only one entity is currently allowed to propose and submit challenges, as only permissioned games are currently allowed."
                    },
                    {
                        "name": "Data Availability",
                        "value": "Onchain",
                        "sentiment": "good",
                        "description": "All of the data needed for proof construction is published on Ethereum L1."
                    },
                    {
                        "name": "Exit Window",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "There is no window for users to exit in case of an unwanted regular upgrade since contracts are instantly upgradable."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Cannot withdraw",
                        "sentiment": "bad",
                        "description": "Only the whitelisted proposers can publish state roots on L1, so in the event of failure the withdrawals are frozen."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 72158929.88,
                        "ether": 25768924.58,
                        "stablecoin": 18417003.62,
                        "associated": 0
                    },
                    "change7d": 0.002970476496559682,
                    "associatedTokens": []
                }
            },
            "eclipse": {
                "id": "eclipse",
                "name": "Eclipse",
                "slug": "eclipse",
                "type": "layer2",
                "hostChain": "Ethereum",
                "category": "Other",
                "purposes": [
                    "Universal"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": false,
                "badges": [
                    {
                        "id": "SolanaVM",
                        "type": "VM",
                        "name": "SolanaVM",
                        "description": "This project uses the Solana Virtual Machine to run its smart contracts"
                    },
                    {
                        "id": "Celestia",
                        "type": "DA",
                        "name": "Celestia",
                        "description": "This project is posting its data to Celestia"
                    }
                ],
                "stage": "Not applicable",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "No mechanism",
                        "sentiment": "bad",
                        "description": "There is no mechanism to have transactions be included if the sequencer is down or censoring."
                    },
                    {
                        "name": "State Validation",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "Currently the system permits invalid state roots. More details in project overview."
                    },
                    {
                        "name": "Data Availability",
                        "value": "External",
                        "sentiment": "bad",
                        "description": "Proof construction and state derivation fully rely on data that is posted on Celestia. Sequencer tx roots are not checked against the Blobstream bridge data roots onchain, but L2 nodes can verify data availability by running a Celestia light client."
                    },
                    {
                        "name": "Exit Window",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "There is no window for users to exit in case of an unwanted regular upgrade since contracts are instantly upgradable."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Cannot withdraw",
                        "sentiment": "bad",
                        "description": "Only the whitelisted proposers can publish state roots on L1, so in the event of failure the withdrawals are frozen."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 56128490.86,
                        "ether": 56128490.86,
                        "stablecoin": 0,
                        "associated": 0
                    },
                    "change7d": -0.08292205445275092,
                    "associatedTokens": []
                }
            },
            "educhain": {
                "id": "educhain",
                "name": "EDU Chain",
                "slug": "edu-chain",
                "type": "layer3",
                "hostChain": "Arbitrum One",
                "category": "Optimium",
                "provider": "Arbitrum",
                "purposes": [
                    "Universal",
                    "Social"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": false,
                "badges": [
                    {
                        "id": "EVM",
                        "type": "VM",
                        "name": "EVM",
                        "description": "This project uses the Ethereum Virtual Machine to run its smart contracts and supports the Solidity programming language"
                    },
                    {
                        "id": "DAC",
                        "type": "DA",
                        "name": "Data Availability Committee",
                        "description": "There is a Data Availability Committee that provides/attests to data availability"
                    },
                    {
                        "id": "Orbit",
                        "type": "Stack",
                        "name": "Built on Arbitrum Orbit",
                        "description": "The project is built on Arbitrum Orbit"
                    },
                    {
                        "id": "Arbitrum",
                        "type": "L3ParentChain",
                        "name": "Built on top of Arbitrum",
                        "description": "The project has Arbitrum as its host chain"
                    },
                    {
                        "id": "Gelato",
                        "type": "RaaS",
                        "name": "Gelato",
                        "description": "This project was deployed via the rollup-as-a-service provider Gelato"
                    }
                ],
                "stage": "Not applicable",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "Self sequence",
                        "sentiment": "good",
                        "description": "In the event of a sequencer failure, users can force transactions to be included in the project's chain by sending them to L1. There can be up to a 5d delay on this operation."
                    },
                    {
                        "name": "State Validation",
                        "value": "Fraud proofs (INT)",
                        "sentiment": "bad",
                        "description": "Fraud proofs allow 6 WHITELISTED actors watching the chain to prove that the state is incorrect. There are fewer than 5 Challengers external to the Operator among these. Interactive proofs (INT) require multiple transactions over time to resolve. There is a 6d 8h challenge period."
                    },
                    {
                        "name": "Data Availability",
                        "value": "External (DAC)",
                        "sentiment": "bad",
                        "description": "Proof construction relies fully on data that is NOT published onchain. There exists a Data Availability Committee (DAC) with a threshold of 1/2 that is tasked with protecting and supplying the data."
                    },
                    {
                        "name": "Exit Window",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "There is no window for users to exit in case of an unwanted regular upgrade since contracts are instantly upgradable."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Self propose",
                        "sentiment": "good",
                        "description": "Anyone can become a Proposer after 12d 17h of inactivity from the currently whitelisted Proposers."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 55606416.57,
                        "ether": 7545.29,
                        "stablecoin": 481719.45,
                        "associated": 55117064.7
                    },
                    "change7d": -0.18917184108070229,
                    "associatedTokens": [
                        "EDU"
                    ]
                }
            },
            "degate3": {
                "id": "degate3",
                "name": "DeGate V1",
                "slug": "degate3",
                "type": "layer2",
                "hostChain": "Ethereum",
                "category": "ZK Rollup",
                "provider": "Loopring",
                "purposes": [
                    "Exchange",
                    "NFT"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": false,
                "badges": [
                    {
                        "id": "AppChain",
                        "type": "VM",
                        "name": "Application-specific chain",
                        "description": "This project is built to operate a specific application"
                    },
                    {
                        "id": "EthereumCalldata",
                        "type": "DA",
                        "name": "Ethereum with calldata",
                        "description": "This project is posting its data to Ethereum as calldata"
                    },
                    {
                        "id": "LoopringFork",
                        "type": "Fork",
                        "name": "Fork of Loopring",
                        "description": "The project is fork of Loopring"
                    }
                ],
                "stage": "Stage 2",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "Force via L1",
                        "sentiment": "good",
                        "description": "Users can force the sequencer to include a withdrawal transaction by submitting a request through L1 with a 0.01 ETH fee. If the sequencer is down for more than 15d, users can use the exit hatch to withdraw their funds. The sequencer can censor individual deposits, but in such case after 15d users can get their funds back."
                    },
                    {
                        "name": "State Validation",
                        "value": "ZK proofs (SN)",
                        "sentiment": "good",
                        "description": "SNARKs are zero knowledge proofs that ensure state correctness, but require trusted setup."
                    },
                    {
                        "name": "Data Availability",
                        "value": "Onchain",
                        "sentiment": "good",
                        "description": "All of the data needed for proof construction is published on Ethereum L1."
                    },
                    {
                        "name": "Exit Window",
                        "value": "30d",
                        "sentiment": "good",
                        "description": "Users have 30d to exit funds in case of an unwanted regular upgrade. There is a 45d delay before a regular upgrade is applied, and withdrawals can take up to 15d to be processed."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Use escape hatch",
                        "sentiment": "good",
                        "description": "Users are able to trustlessly exit by submitting a Merkle proof of funds."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 48547634.45,
                        "ether": 2339869.13,
                        "stablecoin": 15131091.28,
                        "associated": 27284317.95
                    },
                    "change7d": -0.03994808510040737,
                    "associatedTokens": [
                        "DG"
                    ]
                }
            },
            "polygonzkevm": {
                "id": "polygonzkevm",
                "name": "Polygon zkEVM",
                "slug": "polygonzkevm",
                "type": "layer2",
                "hostChain": "Ethereum",
                "category": "ZK Rollup",
                "provider": "Polygon",
                "purposes": [
                    "Universal"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": false,
                "badges": [
                    {
                        "id": "EVM",
                        "type": "VM",
                        "name": "EVM",
                        "description": "This project uses the Ethereum Virtual Machine to run its smart contracts and supports the Solidity programming language"
                    },
                    {
                        "id": "EthereumCalldata",
                        "type": "DA",
                        "name": "Ethereum with calldata",
                        "description": "This project is posting its data to Ethereum as calldata"
                    },
                    {
                        "id": "PolygonCDK",
                        "type": "Stack",
                        "name": "Built on the Polygon CDK stack",
                        "description": "The project is built on the Polygon CDK stack"
                    },
                    {
                        "id": "AggLayer",
                        "type": "Infra",
                        "name": "Part of the AggLayer",
                        "description": "The project is part of the AggLayer"
                    }
                ],
                "stage": "Stage 0",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "No mechanism",
                        "sentiment": "bad",
                        "description": "There is no mechanism to have transactions be included if the sequencer is down or censoring. Although the functionality exists in the code, it is currently disabled."
                    },
                    {
                        "name": "State Validation",
                        "value": "ZK proofs (ST, SN)",
                        "sentiment": "good",
                        "description": "STARKs and SNARKs are zero knowledge proofs that ensure state correctness. STARKs proofs are wrapped in SNARKs proofs for efficiency. SNARKs require a trusted setup."
                    },
                    {
                        "name": "Data Availability",
                        "value": "Onchain",
                        "sentiment": "good",
                        "description": "All of the data needed for proof construction is published on Ethereum L1. Unlike most ZK rollups transactions are posted instead of state diffs."
                    },
                    {
                        "name": "Exit Window",
                        "value": "None",
                        "sentiment": "bad",
                        "warning": {
                            "value": "The Security Council can remove the delay on upgrades.",
                            "sentiment": "bad"
                        },
                        "description": "Even though there is a 3d Timelock for upgrades, forced transactions are disabled."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Cannot withdraw",
                        "sentiment": "bad",
                        "description": "Only the whitelisted proposers can publish state roots on L1, so in the event of failure the withdrawals are frozen."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 45328770.36,
                        "ether": 10174895.93,
                        "stablecoin": 5911770.55,
                        "associated": 27363135.14
                    },
                    "change7d": -0.07350259627383926,
                    "associatedTokens": [
                        "POL",
                        "MATIC"
                    ]
                }
            },
            "aevo": {
                "id": "aevo",
                "name": "Aevo",
                "slug": "aevo",
                "type": "layer2",
                "hostChain": "Ethereum",
                "category": "Optimium",
                "provider": "OP Stack",
                "purposes": [
                    "Universal",
                    "Exchange"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": false,
                "badges": [
                    {
                        "id": "EVM",
                        "type": "VM",
                        "name": "EVM",
                        "description": "This project uses the Ethereum Virtual Machine to run its smart contracts and supports the Solidity programming language"
                    },
                    {
                        "id": "EigenDA",
                        "type": "DA",
                        "name": "EigenDA",
                        "description": "This project is posting its data to EigenDA"
                    },
                    {
                        "id": "OPStack",
                        "type": "Stack",
                        "name": "Built on OP Stack",
                        "description": "The project is built on the OP Stack"
                    },
                    {
                        "id": "Conduit",
                        "type": "RaaS",
                        "name": "Conduit",
                        "description": "This project was deployed via the rollup-as-a-service provider Conduit"
                    }
                ],
                "stage": "Not applicable",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "Self sequence",
                        "sentiment": "good",
                        "description": "In the event of a sequencer failure, users can force transactions to be included in the project's chain by sending them to L1. There can be up to a 12h delay on this operation."
                    },
                    {
                        "name": "State Validation",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "Currently the system permits invalid state roots. More details in project overview."
                    },
                    {
                        "name": "Data Availability",
                        "value": "External",
                        "sentiment": "bad",
                        "description": "Proof construction and state derivation fully rely on data that is posted on EigenDA. Sequencer transaction data roots are not checked against the ServiceManager DA bridge data roots onchain."
                    },
                    {
                        "name": "Exit Window",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "There is no window for users to exit in case of an unwanted regular upgrade since contracts are instantly upgradable."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Cannot withdraw",
                        "sentiment": "bad",
                        "description": "Only the whitelisted proposers can publish state roots on L1, so in the event of failure the withdrawals are frozen."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 45123808.09,
                        "ether": 2702684.41,
                        "stablecoin": 41160091.19,
                        "associated": 0
                    },
                    "change7d": -0.01998400330572847,
                    "associatedTokens": [
                        "AEVO"
                    ]
                }
            },
            "zklinknova": {
                "id": "zklinknova",
                "name": "zkLink Nova",
                "slug": "zklinknova",
                "type": "layer3",
                "hostChain": "Linea",
                "category": "Validium",
                "purposes": [
                    "Universal",
                    "Interoperability"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": false,
                "badges": [
                    {
                        "id": "EVM",
                        "type": "VM",
                        "name": "EVM",
                        "description": "This project uses the Ethereum Virtual Machine to run its smart contracts and supports the Solidity programming language"
                    },
                    {
                        "id": "DAC",
                        "type": "DA",
                        "name": "Data Availability Committee",
                        "description": "There is a Data Availability Committee that provides/attests to data availability"
                    },
                    {
                        "id": "Linea",
                        "type": "L3ParentChain",
                        "name": "Built on top of Linea",
                        "description": "The project has Linea as its host chain"
                    }
                ],
                "stage": "Not applicable",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "No mechanism",
                        "sentiment": "bad",
                        "description": "There is no mechanism to have transactions be included if the sequencer is down or censoring."
                    },
                    {
                        "name": "State Validation",
                        "value": "ZK proofs",
                        "sentiment": "good",
                        "description": "Zero knowledge cryptography is used to ensure state correctness. Proofs are first verified on Linea and finally on Ethereum."
                    },
                    {
                        "name": "Data Availability",
                        "value": "External",
                        "sentiment": "bad",
                        "description": "Proof construction and state derivation rely fully on data that is ultimately NOT published on Ethereum."
                    },
                    {
                        "name": "Exit Window",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "There is no window for users to exit in case of an unwanted regular upgrade since contracts are instantly upgradable."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Cannot withdraw",
                        "sentiment": "bad",
                        "description": "Only the whitelisted proposers can publish state roots on L1, so in the event of failure the withdrawals are frozen."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 44922155.28,
                        "ether": 13542443.15,
                        "stablecoin": 569397.02,
                        "associated": 15348383.37
                    },
                    "change7d": -0.14644388241682615,
                    "associatedTokens": [
                        "ZKL"
                    ]
                }
            },
            "cronoszkevm": {
                "id": "cronoszkevm",
                "name": "Cronos zkEVM",
                "slug": "cronoszkevm",
                "type": "layer2",
                "hostChain": "Ethereum",
                "category": "Validium",
                "provider": "ZK Stack",
                "purposes": [
                    "Universal"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": false,
                "badges": [
                    {
                        "id": "EVM",
                        "type": "VM",
                        "name": "EVM",
                        "description": "This project uses the Ethereum Virtual Machine to run its smart contracts and supports the Solidity programming language"
                    },
                    {
                        "id": "CustomDA",
                        "type": "DA",
                        "name": "Custom DA solution",
                        "description": "This project is using a custom DA solution"
                    },
                    {
                        "id": "ZKStack",
                        "type": "Stack",
                        "name": "Built on the ZK Stack",
                        "description": "The project is built on the ZK Stack"
                    },
                    {
                        "id": "ElasticChain",
                        "type": "Infra",
                        "name": "Part of the Elastic Chain",
                        "description": "The project is part of the Elastic Chain, meaning it's based on the ZK stack and uses the shared contracts"
                    }
                ],
                "stage": "Not applicable",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "Enqueue via L1",
                        "sentiment": "warning",
                        "description": "Users can submit transactions to an L1 queue, but can't force them. The sequencers cannot selectively skip transactions but can stop processing the queue entirely. In other words, if the sequencers censor or are down, they are so for everyone."
                    },
                    {
                        "name": "State Validation",
                        "value": "ZK proofs (ST, SN)",
                        "sentiment": "good",
                        "description": "STARKs and SNARKs are zero knowledge proofs that ensure state correctness. STARKs proofs are wrapped in SNARKs proofs for efficiency. SNARKs require a trusted setup."
                    },
                    {
                        "name": "Data Availability",
                        "value": "External",
                        "sentiment": "bad",
                        "description": "Proof construction and state derivation rely fully on data that is NOT published onchain."
                    },
                    {
                        "name": "Exit Window",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "There is no window for users to exit in case of an unwanted standard upgrade because the central operator can censor withdrawal transactions by implementing a TransactionFilterer with no delay. The standard upgrade delay is 4d 3h."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Cannot withdraw",
                        "sentiment": "warning",
                        "description": "Only the whitelisted proposers can publish state roots on L1, so in the event of failure the withdrawals are frozen. There is a decentralized Governance system that can attempt changing Proposers with an upgrade."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 44382738.84,
                        "ether": 8027702.3,
                        "stablecoin": 6256949.65,
                        "associated": 12312928.37
                    },
                    "change7d": -0.0794643629728331,
                    "associatedTokens": [
                        "zkCRO"
                    ]
                }
            },
            "immutablex": {
                "id": "immutablex",
                "name": "Immutable X",
                "slug": "immutablex",
                "type": "layer2",
                "hostChain": "Ethereum",
                "category": "Validium",
                "provider": "StarkEx",
                "purposes": [
                    "NFT",
                    "Exchange"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": false,
                "badges": [
                    {
                        "id": "AppChain",
                        "type": "VM",
                        "name": "Application-specific chain",
                        "description": "This project is built to operate a specific application"
                    },
                    {
                        "id": "DAC",
                        "type": "DA",
                        "name": "Data Availability Committee",
                        "description": "There is a Data Availability Committee that provides/attests to data availability"
                    },
                    {
                        "id": "StarkEx",
                        "type": "Stack",
                        "name": "StarkEx",
                        "description": "This project was deployed utilizing the StarkEx technology from StarkWare"
                    },
                    {
                        "id": "SHARP",
                        "type": "Infra",
                        "name": "Uses SHARP",
                        "description": "The project uses a shared prover contract - SHARP"
                    }
                ],
                "stage": "Not applicable",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "Force via L1",
                        "sentiment": "good",
                        "description": "Users can force the sequencer to include a withdrawal transaction by submitting a request through L1. If the sequencer censors or is down for  for more than 7d, users can use the exit hatch to withdraw their funds."
                    },
                    {
                        "name": "State Validation",
                        "value": "ZK proofs (ST)",
                        "sentiment": "good",
                        "description": "STARKs are zero knowledge proofs that ensure state correctness."
                    },
                    {
                        "name": "Data Availability",
                        "value": "External (DAC)",
                        "sentiment": "bad",
                        "description": "Proof construction relies fully on data that is NOT published onchain. There exists a Data Availability Committee (DAC) with a threshold of 5/7 that is tasked with protecting and supplying the data."
                    },
                    {
                        "name": "Exit Window",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "There is no window for users to exit in case of an unwanted regular upgrade since contracts are instantly upgradable."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Use escape hatch",
                        "sentiment": "good",
                        "description": "Users are able to trustlessly exit by submitting a Merkle proof of funds. NFTs will be minted on L1 to exit."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 43194333.31,
                        "ether": 12107310.9,
                        "stablecoin": 675311.77,
                        "associated": 26443616.44
                    },
                    "change7d": -0.09893792622073849,
                    "associatedTokens": [
                        "IMX"
                    ]
                }
            },
            "abstract": {
                "id": "abstract",
                "name": "Abstract",
                "slug": "abstract",
                "type": "layer2",
                "hostChain": "Ethereum",
                "category": "ZK Rollup",
                "provider": "ZK Stack",
                "purposes": [
                    "Universal"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": false,
                "badges": [
                    {
                        "id": "EVM",
                        "type": "VM",
                        "name": "EVM",
                        "description": "This project uses the Ethereum Virtual Machine to run its smart contracts and supports the Solidity programming language"
                    },
                    {
                        "id": "EthereumBlobs",
                        "type": "DA",
                        "name": "Ethereum with blobs",
                        "description": "This project is posting its data to Ethereum as blobs"
                    },
                    {
                        "id": "ZKStack",
                        "type": "Stack",
                        "name": "Built on the ZK Stack",
                        "description": "The project is built on the ZK Stack"
                    },
                    {
                        "id": "ElasticChain",
                        "type": "Infra",
                        "name": "Part of the Elastic Chain",
                        "description": "The project is part of the Elastic Chain, meaning it's based on the ZK stack and uses the shared contracts"
                    }
                ],
                "stage": "Stage 0",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "Enqueue via L1",
                        "sentiment": "warning",
                        "description": "Users can submit transactions to an L1 queue, but can't force them. The sequencers cannot selectively skip transactions but can stop processing the queue entirely. In other words, if the sequencers censor or are down, they are so for everyone."
                    },
                    {
                        "name": "State Validation",
                        "value": "ZK proofs (ST, SN)",
                        "sentiment": "good",
                        "description": "STARKs and SNARKs are zero knowledge proofs that ensure state correctness. STARKs proofs are wrapped in SNARKs proofs for efficiency. SNARKs require a trusted setup."
                    },
                    {
                        "name": "Data Availability",
                        "value": "Onchain (SD)",
                        "sentiment": "good",
                        "description": "All of the data (SD = state diffs) needed for proof construction is published onchain."
                    },
                    {
                        "name": "Exit Window",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "There is no window for users to exit in case of an unwanted standard upgrade because the central operator can censor withdrawal transactions by implementing a TransactionFilterer with no delay. The standard upgrade delay is 4d 3h."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Cannot withdraw",
                        "sentiment": "warning",
                        "description": "Only the whitelisted proposers can publish state roots on L1, so in the event of failure the withdrawals are frozen. There is a decentralized Governance system that can attempt changing Proposers with an upgrade."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 42985681.23,
                        "ether": 37690639.13,
                        "stablecoin": 0,
                        "associated": 0
                    },
                    "change7d": -0.010794631635671403,
                    "associatedTokens": []
                }
            },
            "paradex": {
                "id": "paradex",
                "name": "Paradex",
                "slug": "paradex",
                "type": "layer2",
                "hostChain": "Ethereum",
                "category": "ZK Rollup",
                "provider": "SN Stack",
                "purposes": [
                    "Universal",
                    "Exchange"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": false,
                "badges": [
                    {
                        "id": "CairoVM",
                        "type": "VM",
                        "name": "CairoVM",
                        "description": "This project uses the Cairo Virtual Machine to run its smart contracts and supports the Cairo programming language"
                    },
                    {
                        "id": "EthereumBlobs",
                        "type": "DA",
                        "name": "Ethereum with blobs",
                        "description": "This project is posting its data to Ethereum as blobs"
                    },
                    {
                        "id": "SNStack",
                        "type": "Stack",
                        "name": "Built on the SN Stack",
                        "description": "The project is built on the SN Stack"
                    },
                    {
                        "id": "SHARP",
                        "type": "Infra",
                        "name": "Uses SHARP",
                        "description": "The project uses a shared prover contract - SHARP"
                    }
                ],
                "stage": "Stage 0",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "No mechanism",
                        "sentiment": "bad",
                        "description": "There is no mechanism to have transactions be included if the sequencer is down or censoring."
                    },
                    {
                        "name": "State Validation",
                        "value": "ZK proofs (ST)",
                        "sentiment": "good",
                        "description": "STARKs are zero knowledge proofs that ensure state correctness."
                    },
                    {
                        "name": "Data Availability",
                        "value": "Onchain (SD)",
                        "sentiment": "good",
                        "description": "All of the data (SD = state diffs) needed for proof construction is published onchain."
                    },
                    {
                        "name": "Exit Window",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "There is no window for users to exit in case of an unwanted regular upgrade since contracts are instantly upgradable."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Cannot withdraw",
                        "sentiment": "bad",
                        "description": "Only the whitelisted proposers can publish state roots on L1, so in the event of failure the withdrawals are frozen."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 42080729.17,
                        "ether": 0,
                        "stablecoin": 42080729.17,
                        "associated": 0
                    },
                    "change7d": 0.026211493617338544,
                    "associatedTokens": []
                }
            },
            "zksync": {
                "id": "zksync",
                "name": "ZKsync Lite",
                "slug": "zksync-lite",
                "type": "layer2",
                "hostChain": "Ethereum",
                "category": "ZK Rollup",
                "provider": "ZKsync Lite",
                "purposes": [
                    "Payments",
                    "Exchange",
                    "NFT"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": false,
                "badges": [
                    {
                        "id": "AppChain",
                        "type": "VM",
                        "name": "Application-specific chain",
                        "description": "This project is built to operate a specific application"
                    },
                    {
                        "id": "EthereumCalldata",
                        "type": "DA",
                        "name": "Ethereum with calldata",
                        "description": "This project is posting its data to Ethereum as calldata"
                    }
                ],
                "stage": "Stage 0",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "Force via L1",
                        "sentiment": "good",
                        "description": "Users can force the sequencer to include a withdrawal transaction by submitting a request through L1. If the sequencer censors or is down for  for more than 14d, users can use the exit hatch to withdraw their funds."
                    },
                    {
                        "name": "State Validation",
                        "value": "ZK proofs (SN)",
                        "sentiment": "good",
                        "description": "SNARKs are zero knowledge proofs that ensure state correctness, but require trusted setup."
                    },
                    {
                        "name": "Data Availability",
                        "value": "Onchain",
                        "sentiment": "good",
                        "description": "All of the data needed for proof construction is published on Ethereum L1."
                    },
                    {
                        "name": "Exit Window",
                        "value": "7d",
                        "sentiment": "warning",
                        "warning": {
                            "value": "The Security Council can upgrade with no delay.",
                            "sentiment": "bad"
                        },
                        "description": "Users have 7d to exit funds in case of an unwanted upgrade. There is a 21d delay before an upgrade is applied, and withdrawals can take up to 14d to be processed."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Use escape hatch",
                        "sentiment": "good",
                        "description": "Users are able to trustlessly exit by submitting a zero knowledge proof of funds."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 41675460.26,
                        "ether": 31047598.62,
                        "stablecoin": 9625238.27,
                        "associated": 0
                    },
                    "change7d": -0.08582452278122932,
                    "associatedTokens": []
                }
            },
            "kinto": {
                "id": "kinto",
                "name": "Kinto",
                "slug": "kinto",
                "type": "layer2",
                "hostChain": "Ethereum",
                "category": "Optimistic Rollup",
                "provider": "Arbitrum",
                "purposes": [
                    "KYC-ed DeFi"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": false,
                "badges": [
                    {
                        "id": "EVM",
                        "type": "VM",
                        "name": "EVM",
                        "description": "This project uses the Ethereum Virtual Machine to run its smart contracts and supports the Solidity programming language"
                    },
                    {
                        "id": "EthereumBlobs",
                        "type": "DA",
                        "name": "Ethereum with blobs",
                        "description": "This project is posting its data to Ethereum as blobs"
                    },
                    {
                        "id": "Orbit",
                        "type": "Stack",
                        "name": "Built on Arbitrum Orbit",
                        "description": "The project is built on Arbitrum Orbit"
                    },
                    {
                        "id": "Caldera",
                        "type": "RaaS",
                        "name": "Caldera",
                        "description": "This project was deployed via the rollup-as-a-service provider Caldera"
                    }
                ],
                "stage": "Stage 0",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "Self sequence",
                        "sentiment": "good",
                        "description": "In the event of a sequencer failure, users can force transactions to be included in the project's chain by sending them to L1. There can be up to a 1d delay on this operation."
                    },
                    {
                        "name": "State Validation",
                        "value": "Fraud proofs (INT)",
                        "sentiment": "warning",
                        "description": "Fraud proofs allow 5 WHITELISTED actors watching the chain to prove that the state is incorrect. At least 5 Challengers are external to the Operator. Interactive proofs (INT) require multiple transactions over time to resolve. There is a 6d 8h challenge period."
                    },
                    {
                        "name": "Data Availability",
                        "value": "Onchain",
                        "sentiment": "good",
                        "description": "All of the data needed for proof construction is published on Ethereum L1."
                    },
                    {
                        "name": "Exit Window",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "There is no window for users to exit in case of an unwanted regular upgrade since contracts are instantly upgradable."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Self propose",
                        "sentiment": "good",
                        "description": "Anyone can become a Proposer after 12d 17h of inactivity from the currently whitelisted Proposers."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 40095880.59,
                        "ether": 14545032.29,
                        "stablecoin": 5182000.28,
                        "associated": 0
                    },
                    "change7d": -0.19918302144552158,
                    "associatedTokens": []
                }
            },
            "apex": {
                "id": "apex",
                "name": "ApeX",
                "slug": "apex",
                "type": "layer2",
                "hostChain": "Ethereum",
                "category": "Validium",
                "provider": "StarkEx",
                "purposes": [
                    "Exchange"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": false,
                "badges": [
                    {
                        "id": "AppChain",
                        "type": "VM",
                        "name": "Application-specific chain",
                        "description": "This project is built to operate a specific application"
                    },
                    {
                        "id": "DAC",
                        "type": "DA",
                        "name": "Data Availability Committee",
                        "description": "There is a Data Availability Committee that provides/attests to data availability"
                    },
                    {
                        "id": "StarkEx",
                        "type": "Stack",
                        "name": "StarkEx",
                        "description": "This project was deployed utilizing the StarkEx technology from StarkWare"
                    },
                    {
                        "id": "SHARP",
                        "type": "Infra",
                        "name": "Uses SHARP",
                        "description": "The project uses a shared prover contract - SHARP"
                    }
                ],
                "stage": "Not applicable",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "Force via L1",
                        "sentiment": "good",
                        "description": "Users can force the sequencer to include a trade or a withdrawal transaction by submitting a request through L1. If the sequencer censors or is down for 7d, users can use the exit hatch to withdraw their funds. Users are required to find a counterparty for the trade by out of system means."
                    },
                    {
                        "name": "State Validation",
                        "value": "ZK proofs (ST)",
                        "sentiment": "good",
                        "description": "STARKs are zero knowledge proofs that ensure state correctness."
                    },
                    {
                        "name": "Data Availability",
                        "value": "External (DAC)",
                        "sentiment": "bad",
                        "description": "Proof construction relies fully on data that is NOT published onchain. There exists a Data Availability Committee (DAC) with a threshold of 3/5 that is tasked with protecting and supplying the data."
                    },
                    {
                        "name": "Exit Window",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "There is no window for users to exit in case of an unwanted regular upgrade since contracts are instantly upgradable."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Use escape hatch",
                        "sentiment": "good",
                        "description": "Users are able to trustlessly exit by submitting a Merkle proof of funds. Positions will be closed using the average price from the last batch state update."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 38653246.18,
                        "ether": 0,
                        "stablecoin": 38653246.18,
                        "associated": 0
                    },
                    "change7d": 0.03234814217487436,
                    "associatedTokens": [
                        "APEX"
                    ]
                }
            },
            "loopring": {
                "id": "loopring",
                "name": "Loopring",
                "slug": "loopring",
                "type": "layer2",
                "hostChain": "Ethereum",
                "category": "ZK Rollup",
                "provider": "Loopring",
                "purposes": [
                    "NFT",
                    "Exchange"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": false,
                "badges": [
                    {
                        "id": "AppChain",
                        "type": "VM",
                        "name": "Application-specific chain",
                        "description": "This project is built to operate a specific application"
                    },
                    {
                        "id": "EthereumCalldata",
                        "type": "DA",
                        "name": "Ethereum with calldata",
                        "description": "This project is posting its data to Ethereum as calldata"
                    }
                ],
                "stage": "Stage 0",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "Force via L1",
                        "sentiment": "good",
                        "description": "Users can force the sequencer to include a withdrawal transaction by submitting a request through L1 with a 0.02 ETH fee. If the sequencer is down for more than 15d, users can use the exit hatch to withdraw their funds. The sequencer can censor individual deposits, but in such case after 15d users can get their funds back."
                    },
                    {
                        "name": "State Validation",
                        "value": "ZK proofs (SN)",
                        "sentiment": "good",
                        "description": "SNARKs are zero knowledge proofs that ensure state correctness, but require trusted setup."
                    },
                    {
                        "name": "Data Availability",
                        "value": "Onchain",
                        "sentiment": "good",
                        "description": "All of the data needed for proof construction is published on Ethereum L1."
                    },
                    {
                        "name": "Exit Window",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "There is no window for users to exit in case of an unwanted regular upgrade since contracts are instantly upgradable."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Use escape hatch",
                        "sentiment": "good",
                        "description": "Users are able to trustlessly exit by submitting a Merkle proof of funds."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 35475101.69,
                        "ether": 15343476.58,
                        "stablecoin": 3506006.61,
                        "associated": 12654967.75
                    },
                    "change7d": -0.0709832243787939,
                    "associatedTokens": [
                        "LRC"
                    ]
                }
            },
            "lumia": {
                "id": "lumia",
                "name": "Lumia Prism",
                "slug": "lumia",
                "type": "layer2",
                "hostChain": "Ethereum",
                "category": "Validium",
                "provider": "Polygon",
                "purposes": [
                    "Universal",
                    "Restaking",
                    "RWA"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": false,
                "badges": [
                    {
                        "id": "EVM",
                        "type": "VM",
                        "name": "EVM",
                        "description": "This project uses the Ethereum Virtual Machine to run its smart contracts and supports the Solidity programming language"
                    },
                    {
                        "id": "DAC",
                        "type": "DA",
                        "name": "Data Availability Committee",
                        "description": "There is a Data Availability Committee that provides/attests to data availability"
                    },
                    {
                        "id": "PolygonCDK",
                        "type": "Stack",
                        "name": "Built on the Polygon CDK stack",
                        "description": "The project is built on the Polygon CDK stack"
                    },
                    {
                        "id": "AggLayer",
                        "type": "Infra",
                        "name": "Part of the AggLayer",
                        "description": "The project is part of the AggLayer"
                    }
                ],
                "stage": "Not applicable",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "No mechanism",
                        "sentiment": "bad",
                        "description": "There is no mechanism to have transactions be included if the sequencer is down or censoring. Although the functionality exists in the code, it is currently disabled."
                    },
                    {
                        "name": "State Validation",
                        "value": "ZK proofs (ST, SN)",
                        "sentiment": "good",
                        "description": "STARKs and SNARKs are zero knowledge proofs that ensure state correctness. STARKs proofs are wrapped in SNARKs proofs for efficiency. SNARKs require a trusted setup."
                    },
                    {
                        "name": "Data Availability",
                        "value": "External (DAC)",
                        "sentiment": "bad",
                        "description": "Proof construction relies fully on data that is NOT published onchain. There exists a Data Availability Committee (DAC) with a threshold of 1/2 that is tasked with protecting and supplying the data."
                    },
                    {
                        "name": "Exit Window",
                        "value": "None",
                        "sentiment": "bad",
                        "warning": {
                            "value": "The Security Council can remove the delay on upgrades.",
                            "sentiment": "bad"
                        },
                        "description": "Even though there is a 3d Timelock for upgrades, forced transactions are disabled."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Cannot withdraw",
                        "sentiment": "bad",
                        "description": "Only the whitelisted proposers can publish state roots on L1, so in the event of failure the withdrawals are frozen."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 32135322.78,
                        "ether": 337.17,
                        "stablecoin": 747.82,
                        "associated": 32134231.93
                    },
                    "change7d": 0.02492225550813365,
                    "associatedTokens": [
                        "LUMIA"
                    ]
                }
            },
            "xlayer": {
                "id": "xlayer",
                "name": "X Layer",
                "slug": "xlayer",
                "type": "layer2",
                "hostChain": "Ethereum",
                "category": "Validium",
                "provider": "Polygon",
                "purposes": [
                    "Universal"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": false,
                "badges": [
                    {
                        "id": "EVM",
                        "type": "VM",
                        "name": "EVM",
                        "description": "This project uses the Ethereum Virtual Machine to run its smart contracts and supports the Solidity programming language"
                    },
                    {
                        "id": "DAC",
                        "type": "DA",
                        "name": "Data Availability Committee",
                        "description": "There is a Data Availability Committee that provides/attests to data availability"
                    },
                    {
                        "id": "PolygonCDK",
                        "type": "Stack",
                        "name": "Built on the Polygon CDK stack",
                        "description": "The project is built on the Polygon CDK stack"
                    },
                    {
                        "id": "AggLayer",
                        "type": "Infra",
                        "name": "Part of the AggLayer",
                        "description": "The project is part of the AggLayer"
                    }
                ],
                "stage": "Not applicable",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "No mechanism",
                        "sentiment": "bad",
                        "description": "There is no mechanism to have transactions be included if the sequencer is down or censoring. Although the functionality exists in the code, it is currently disabled."
                    },
                    {
                        "name": "State Validation",
                        "value": "ZK proofs (ST, SN)",
                        "sentiment": "good",
                        "description": "STARKs and SNARKs are zero knowledge proofs that ensure state correctness. STARKs proofs are wrapped in SNARKs proofs for efficiency. SNARKs require a trusted setup."
                    },
                    {
                        "name": "Data Availability",
                        "value": "External (DAC)",
                        "sentiment": "bad",
                        "description": "Proof construction relies fully on data that is NOT published onchain. There exists a Data Availability Committee (DAC) with a threshold of 2/2 that is tasked with protecting and supplying the data."
                    },
                    {
                        "name": "Exit Window",
                        "value": "None",
                        "sentiment": "bad",
                        "warning": {
                            "value": "The Security Council can remove the delay on upgrades.",
                            "sentiment": "bad"
                        },
                        "description": "Even though there is a 3d Timelock for upgrades, forced transactions are disabled."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Cannot withdraw",
                        "sentiment": "bad",
                        "description": "Only the whitelisted proposers can publish state roots on L1, so in the event of failure the withdrawals are frozen."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 30961370.71,
                        "ether": 8290195.42,
                        "stablecoin": 7028566.33,
                        "associated": 11117425.23
                    },
                    "change7d": -0.05325339039238319,
                    "associatedTokens": [
                        "OKB"
                    ]
                }
            },
            "nova": {
                "id": "nova",
                "name": "Arbitrum Nova",
                "slug": "nova",
                "type": "layer2",
                "hostChain": "Ethereum",
                "category": "Optimium",
                "provider": "Arbitrum",
                "purposes": [
                    "Universal"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": true,
                "badges": [
                    {
                        "id": "EVM",
                        "type": "VM",
                        "name": "EVM",
                        "description": "This project uses the Ethereum Virtual Machine to run its smart contracts and supports the Solidity programming language"
                    },
                    {
                        "id": "WasmVM",
                        "type": "VM",
                        "name": "WasmVM",
                        "description": "This project uses a WebAssembly Virtual Machine to run its smart contracts"
                    },
                    {
                        "id": "DAC",
                        "type": "DA",
                        "name": "Data Availability Committee",
                        "description": "There is a Data Availability Committee that provides/attests to data availability"
                    },
                    {
                        "id": "Nitro",
                        "type": "Stack",
                        "name": "Built on Arbitrum Nitro",
                        "description": "The project is built on Arbitrum Nitro"
                    },
                    {
                        "id": "Governance",
                        "type": "Other",
                        "name": "Governance",
                        "description": "This project features token voting"
                    },
                    {
                        "id": "L3HostChain",
                        "type": "Other",
                        "name": "L3 Host Chain",
                        "description": "This project serves as a host chain for L3s"
                    }
                ],
                "stage": "Not applicable",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "Self sequence",
                        "sentiment": "good",
                        "description": "In the event of a sequencer failure, users can force transactions to be included in the project's chain by sending them to L1. There can be up to a 1d delay on this operation."
                    },
                    {
                        "name": "State Validation",
                        "value": "Fraud proofs (INT)",
                        "sentiment": "good",
                        "description": "Fraud proofs allow actors watching the chain to prove that the state is incorrect. Interactive proofs (INT) require multiple transactions over time to resolve."
                    },
                    {
                        "name": "Data Availability",
                        "value": "External (DAC)",
                        "sentiment": "warning",
                        "description": "Proof construction relies fully on data that is NOT published onchain. There exists a Data Availability Committee (DAC) with a threshold of 5/6 that is tasked with protecting and supplying the data."
                    },
                    {
                        "name": "Exit Window",
                        "value": "7d",
                        "sentiment": "warning",
                        "warning": {
                            "value": "The Security Council can upgrade with no delay.",
                            "sentiment": "bad"
                        },
                        "description": "Non-emergency upgrades are initiated on L2 and go through a 8d delay. Since there is a 1d delay to force a tx (forcing the inclusion in the following state update), users have only 7d to exit. \n    \n  If users post a tx after that time, they would only be able to self propose a state root 12d 17h after the last state root was proposed and then wait for the 6d 8h challenge window, while the upgrade would be confirmed just after the 6d 8h challenge window and the 3d L1 timelock."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Self propose",
                        "sentiment": "good",
                        "description": "Anyone can become a Proposer after 12d 17h of inactivity from the currently whitelisted Proposers."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 28060967.25,
                        "ether": 27077565.56,
                        "stablecoin": 689873.85,
                        "associated": 84869.94
                    },
                    "change7d": -0.12026046571996818,
                    "associatedTokens": [
                        "ARB"
                    ]
                }
            },
            "rss3": {
                "id": "rss3",
                "name": "RSS3 Value Sublayer",
                "shortName": "RSS3 VSL",
                "slug": "rss3",
                "type": "layer2",
                "hostChain": "Ethereum",
                "category": "Optimium",
                "provider": "OP Stack",
                "purposes": [
                    "Universal",
                    "AI",
                    "Information"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": false,
                "badges": [
                    {
                        "id": "EVM",
                        "type": "VM",
                        "name": "EVM",
                        "description": "This project uses the Ethereum Virtual Machine to run its smart contracts and supports the Solidity programming language"
                    },
                    {
                        "id": "NearDA",
                        "type": "DA",
                        "name": "NearDA",
                        "description": "This project is posting its data to NearDA"
                    },
                    {
                        "id": "OPStack",
                        "type": "Stack",
                        "name": "Built on OP Stack",
                        "description": "The project is built on the OP Stack"
                    },
                    {
                        "id": "Superchain",
                        "type": "Infra",
                        "name": "Part of the Superchain",
                        "description": "The project is part of the Superchain, meaning it's included in the Superchain registry or uses the Superchain config"
                    }
                ],
                "stage": "Not applicable",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "Self sequence",
                        "sentiment": "good",
                        "description": "In the event of a sequencer failure, users can force transactions to be included in the project's chain by sending them to L1. There can be up to a 12h delay on this operation."
                    },
                    {
                        "name": "State Validation",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "Currently the system permits invalid state roots. More details in project overview."
                    },
                    {
                        "name": "Data Availability",
                        "value": "External",
                        "sentiment": "bad",
                        "description": "Proof construction and state derivation rely fully on data that is NOT published on chain."
                    },
                    {
                        "name": "Exit Window",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "There is no window for users to exit in case of an unwanted regular upgrade since contracts are instantly upgradable."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Cannot withdraw",
                        "sentiment": "bad",
                        "description": "Only the whitelisted proposers can publish state roots on L1, so in the event of failure the withdrawals are frozen."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 27793869.38,
                        "ether": 2057.93,
                        "stablecoin": 113272.63,
                        "associated": 27678538.82
                    },
                    "change7d": -0.13732028582848077,
                    "associatedTokens": [
                        "RSS3"
                    ]
                }
            },
            "unichain": {
                "id": "unichain",
                "name": "Unichain",
                "slug": "unichain",
                "type": "layer2",
                "hostChain": "Ethereum",
                "category": "Optimistic Rollup",
                "provider": "OP Stack",
                "purposes": [
                    "Universal",
                    "Exchange"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": false,
                "badges": [
                    {
                        "id": "EVM",
                        "type": "VM",
                        "name": "EVM",
                        "description": "This project uses the Ethereum Virtual Machine to run its smart contracts and supports the Solidity programming language"
                    },
                    {
                        "id": "EthereumBlobs",
                        "type": "DA",
                        "name": "Ethereum with blobs",
                        "description": "This project is posting its data to Ethereum as blobs"
                    },
                    {
                        "id": "OPStack",
                        "type": "Stack",
                        "name": "Built on OP Stack",
                        "description": "The project is built on the OP Stack"
                    },
                    {
                        "id": "Superchain",
                        "type": "Infra",
                        "name": "Part of the Superchain",
                        "description": "The project is part of the Superchain, meaning it's included in the Superchain registry or uses the Superchain config"
                    }
                ],
                "stage": "Stage 1",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "Self sequence",
                        "sentiment": "good",
                        "description": "In the event of a sequencer failure, users can force transactions to be included in the project's chain by sending them to L1. There can be up to a 12h delay on this operation."
                    },
                    {
                        "name": "State Validation",
                        "value": "Fraud proofs (INT)",
                        "sentiment": "good",
                        "description": "Fraud proofs allow actors watching the chain to prove that the state is incorrect. Interactive proofs (INT) require multiple transactions over time to resolve."
                    },
                    {
                        "name": "Data Availability",
                        "value": "Onchain",
                        "sentiment": "good",
                        "description": "All of the data needed for proof construction is published on Ethereum L1."
                    },
                    {
                        "name": "Exit Window",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "There is no window for users to exit in case of an unwanted regular upgrade since contracts are instantly upgradable."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Self propose",
                        "sentiment": "good",
                        "description": "Anyone can be a Proposer and propose new roots to the L1 bridge."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 22825587.77,
                        "ether": 16829576.39,
                        "stablecoin": 5467175.68,
                        "associated": 362726.99
                    },
                    "change7d": -0.08333884001922498,
                    "associatedTokens": [
                        "UNI"
                    ]
                }
            },
            "game7": {
                "id": "game7",
                "name": "Game7",
                "slug": "g7",
                "type": "layer3",
                "hostChain": "Arbitrum One",
                "category": "Optimium",
                "provider": "Arbitrum",
                "purposes": [
                    "Universal",
                    "Gaming"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": false,
                "badges": [
                    {
                        "id": "EVM",
                        "type": "VM",
                        "name": "EVM",
                        "description": "This project uses the Ethereum Virtual Machine to run its smart contracts and supports the Solidity programming language"
                    },
                    {
                        "id": "DAC",
                        "type": "DA",
                        "name": "Data Availability Committee",
                        "description": "There is a Data Availability Committee that provides/attests to data availability"
                    },
                    {
                        "id": "Orbit",
                        "type": "Stack",
                        "name": "Built on Arbitrum Orbit",
                        "description": "The project is built on Arbitrum Orbit"
                    },
                    {
                        "id": "Arbitrum",
                        "type": "L3ParentChain",
                        "name": "Built on top of Arbitrum",
                        "description": "The project has Arbitrum as its host chain"
                    },
                    {
                        "id": "Conduit",
                        "type": "RaaS",
                        "name": "Conduit",
                        "description": "This project was deployed via the rollup-as-a-service provider Conduit"
                    }
                ],
                "stage": "Not applicable",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "Self sequence",
                        "sentiment": "good",
                        "description": "In the event of a sequencer failure, users can force transactions to be included in the project's chain by sending them to L1. There can be up to a 2d delay on this operation."
                    },
                    {
                        "name": "State Validation",
                        "value": "Fraud proofs (INT)",
                        "sentiment": "bad",
                        "description": "Fraud proofs only allow 2 WHITELISTED actors watching the chain to prove that the state is incorrect. Interactive proofs (INT) require multiple transactions over time to resolve. The challenge protocol can be subject to delay attacks. There is a 5d 14h challenge period."
                    },
                    {
                        "name": "Data Availability",
                        "value": "External (DAC)",
                        "sentiment": "bad",
                        "description": "Proof construction relies fully on data that is NOT published onchain. There exists a Data Availability Committee (DAC) with a threshold of 1/1 that is tasked with protecting and supplying the data."
                    },
                    {
                        "name": "Exit Window",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "There is no window for users to exit in case of an unwanted regular upgrade since contracts are instantly upgradable."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Self propose",
                        "sentiment": "good",
                        "description": "Anyone can become a Proposer after 11d 23h of inactivity from the currently whitelisted Proposers."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 21133083.41,
                        "ether": 0.02,
                        "stablecoin": 1451987.77,
                        "associated": 19681095.59
                    },
                    "change7d": -0.03968490619768661,
                    "associatedTokens": [
                        "G7"
                    ]
                }
            },
            "reya": {
                "id": "reya",
                "name": "Reya",
                "slug": "reya",
                "type": "layer2",
                "hostChain": "Ethereum",
                "category": "Optimium",
                "provider": "Arbitrum",
                "purposes": [
                    "Universal"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": false,
                "badges": [
                    {
                        "id": "EVM",
                        "type": "VM",
                        "name": "EVM",
                        "description": "This project uses the Ethereum Virtual Machine to run its smart contracts and supports the Solidity programming language"
                    },
                    {
                        "id": "DAC",
                        "type": "DA",
                        "name": "Data Availability Committee",
                        "description": "There is a Data Availability Committee that provides/attests to data availability"
                    },
                    {
                        "id": "Orbit",
                        "type": "Stack",
                        "name": "Built on Arbitrum Orbit",
                        "description": "The project is built on Arbitrum Orbit"
                    },
                    {
                        "id": "Gelato",
                        "type": "RaaS",
                        "name": "Gelato",
                        "description": "This project was deployed via the rollup-as-a-service provider Gelato"
                    }
                ],
                "stage": "Not applicable",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "Self sequence",
                        "sentiment": "good",
                        "description": "In the event of a sequencer failure, users can force transactions to be included in the project's chain by sending them to L1. There can be up to a 1d delay on this operation."
                    },
                    {
                        "name": "State Validation",
                        "value": "Fraud proofs (INT)",
                        "sentiment": "bad",
                        "description": "No actor outside of the single Proposer can submit fraud proofs. Interactive proofs (INT) require multiple transactions over time to resolve. The challenge protocol can be subject to delay attacks. There is a 6d 8h challenge period."
                    },
                    {
                        "name": "Data Availability",
                        "value": "External (DAC)",
                        "sentiment": "bad",
                        "description": "Proof construction relies fully on data that is NOT published onchain. There exists a Data Availability Committee (DAC) with a threshold of 1/2 that is tasked with protecting and supplying the data."
                    },
                    {
                        "name": "Exit Window",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "There is no window for users to exit in case of an unwanted regular upgrade since contracts are instantly upgradable."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Self propose",
                        "sentiment": "good",
                        "description": "Anyone can become a Proposer after 12d 17h of inactivity from the currently whitelisted Proposers."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 20097619.48,
                        "ether": 305201.62,
                        "stablecoin": 19792417.86,
                        "associated": 0
                    },
                    "change7d": -0.019840369130209368,
                    "associatedTokens": []
                }
            },
            "immutablezkevm": {
                "id": "immutablezkevm",
                "name": "Immutable zkEVM",
                "slug": "immutablezkevm",
                "type": "layer2",
                "hostChain": "Ethereum",
                "category": "Other",
                "purposes": [
                    "Universal"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": false,
                "badges": [
                    {
                        "id": "EVM",
                        "type": "VM",
                        "name": "EVM",
                        "description": "This project uses the Ethereum Virtual Machine to run its smart contracts and supports the Solidity programming language"
                    },
                    {
                        "id": "CustomDA",
                        "type": "DA",
                        "name": "Custom DA solution",
                        "description": "This project is using a custom DA solution"
                    }
                ],
                "stage": "Not applicable",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "No mechanism",
                        "sentiment": "bad",
                        "description": "There is no mechanism to have transactions be included if the sequencer is down or censoring."
                    },
                    {
                        "name": "State Validation",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "Currently the system permits invalid state roots. More details in project overview."
                    },
                    {
                        "name": "Data Availability",
                        "value": "External",
                        "sentiment": "bad",
                        "description": "Proof construction and state derivation rely fully on data that is NOT published onchain."
                    },
                    {
                        "name": "Exit Window",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "There is no window for users to exit in case of an unwanted regular upgrade since contracts are instantly upgradable."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Cannot withdraw",
                        "sentiment": "bad",
                        "description": "Only the whitelisted proposers can publish state roots on L1, so in the event of failure the withdrawals are frozen."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 19732911.14,
                        "ether": 1402835.82,
                        "stablecoin": 12294380.85,
                        "associated": 5111644.67
                    },
                    "change7d": -0.02827441050096202,
                    "associatedTokens": [
                        "IMX"
                    ]
                }
            },
            "morph": {
                "id": "morph",
                "name": "Morph",
                "slug": "morph",
                "type": "layer2",
                "hostChain": "Ethereum",
                "category": "Optimistic Rollup",
                "purposes": [
                    "Universal"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": false,
                "badges": [
                    {
                        "id": "EVM",
                        "type": "VM",
                        "name": "EVM",
                        "description": "This project uses the Ethereum Virtual Machine to run its smart contracts and supports the Solidity programming language"
                    },
                    {
                        "id": "EthereumBlobs",
                        "type": "DA",
                        "name": "Ethereum with blobs",
                        "description": "This project is posting its data to Ethereum as blobs"
                    }
                ],
                "stage": "Stage 0",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "No mechanism",
                        "sentiment": "bad",
                        "description": "There is no mechanism to have transactions be included if the sequencer is down or censoring."
                    },
                    {
                        "name": "State Validation",
                        "value": "Fraud proofs (1R, ZK)",
                        "sentiment": "bad",
                        "description": "Fraud proofs allow actors watching the chain to prove that the state is incorrect. Single round proofs (1R) only require a single transaction to resolve. ZK proofs are used to prove the correctness of the state transition. The system currently operates with a single whitelisted challenger."
                    },
                    {
                        "name": "Data Availability",
                        "value": "Onchain",
                        "sentiment": "good",
                        "description": "All of the data needed for proof construction is published on Ethereum L1."
                    },
                    {
                        "name": "Exit Window",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "There is no window for users to exit in case of an unwanted regular upgrade since contracts are instantly upgradable."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Cannot withdraw",
                        "sentiment": "bad",
                        "description": "Only the whitelisted proposers can publish state roots on L1, so in the event of failure the withdrawals are frozen."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 19166298.29,
                        "ether": 6578567.73,
                        "stablecoin": 3438968.54,
                        "associated": 0
                    },
                    "change7d": -0.038158147527605824,
                    "associatedTokens": []
                }
            },
            "treasure": {
                "id": "treasure",
                "name": "Treasure",
                "slug": "treasure",
                "type": "layer2",
                "hostChain": "Ethereum",
                "category": "Validium",
                "provider": "ZK Stack",
                "purposes": [
                    "Universal",
                    "Gaming"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": false,
                "badges": [
                    {
                        "id": "EVM",
                        "type": "VM",
                        "name": "EVM",
                        "description": "This project uses the Ethereum Virtual Machine to run its smart contracts and supports the Solidity programming language"
                    },
                    {
                        "id": "CustomDA",
                        "type": "DA",
                        "name": "Custom DA solution",
                        "description": "This project is using a custom DA solution"
                    },
                    {
                        "id": "ZKStack",
                        "type": "Stack",
                        "name": "Built on the ZK Stack",
                        "description": "The project is built on the ZK Stack"
                    },
                    {
                        "id": "ElasticChain",
                        "type": "Infra",
                        "name": "Part of the Elastic Chain",
                        "description": "The project is part of the Elastic Chain, meaning it's based on the ZK stack and uses the shared contracts"
                    }
                ],
                "stage": "Not applicable",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "Enqueue via L1",
                        "sentiment": "warning",
                        "description": "Users can submit transactions to an L1 queue, but can't force them. The sequencers cannot selectively skip transactions but can stop processing the queue entirely. In other words, if the sequencers censor or are down, they are so for everyone."
                    },
                    {
                        "name": "State Validation",
                        "value": "ZK proofs (ST, SN)",
                        "sentiment": "good",
                        "description": "STARKs and SNARKs are zero knowledge proofs that ensure state correctness. STARKs proofs are wrapped in SNARKs proofs for efficiency. SNARKs require a trusted setup."
                    },
                    {
                        "name": "Data Availability",
                        "value": "External",
                        "sentiment": "bad",
                        "description": "Proof construction and state derivation rely fully on data that is NOT published onchain."
                    },
                    {
                        "name": "Exit Window",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "There is no window for users to exit in case of an unwanted standard upgrade because the central operator can censor withdrawal transactions by implementing a TransactionFilterer with no delay. The standard upgrade delay is 4d 3h."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Cannot withdraw",
                        "sentiment": "warning",
                        "description": "Only the whitelisted proposers can publish state roots on L1, so in the event of failure the withdrawals are frozen. There is a decentralized Governance system that can attempt changing Proposers with an upgrade."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 18009704.6,
                        "ether": 609676.61,
                        "stablecoin": 0,
                        "associated": 17400027.99
                    },
                    "change7d": -0.1400570253344411,
                    "associatedTokens": [
                        "MAGIC"
                    ]
                }
            },
            "real": {
                "id": "real",
                "name": "Re.al",
                "slug": "real",
                "type": "layer2",
                "hostChain": "Ethereum",
                "category": "Optimium",
                "provider": "Arbitrum",
                "purposes": [
                    "Universal",
                    "RWA"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": false,
                "badges": [
                    {
                        "id": "EVM",
                        "type": "VM",
                        "name": "EVM",
                        "description": "This project uses the Ethereum Virtual Machine to run its smart contracts and supports the Solidity programming language"
                    },
                    {
                        "id": "DAC",
                        "type": "DA",
                        "name": "Data Availability Committee",
                        "description": "There is a Data Availability Committee that provides/attests to data availability"
                    },
                    {
                        "id": "Orbit",
                        "type": "Stack",
                        "name": "Built on Arbitrum Orbit",
                        "description": "The project is built on Arbitrum Orbit"
                    },
                    {
                        "id": "Gelato",
                        "type": "RaaS",
                        "name": "Gelato",
                        "description": "This project was deployed via the rollup-as-a-service provider Gelato"
                    }
                ],
                "stage": "Not applicable",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "Self sequence",
                        "sentiment": "good",
                        "description": "In the event of a sequencer failure, users can force transactions to be included in the project's chain by sending them to L1. There can be up to a 1d delay on this operation."
                    },
                    {
                        "name": "State Validation",
                        "value": "Fraud proofs (INT)",
                        "sentiment": "bad",
                        "description": "Fraud proofs allow 6 WHITELISTED actors watching the chain to prove that the state is incorrect. There are fewer than 5 Challengers external to the Operator among these. Interactive proofs (INT) require multiple transactions over time to resolve. There is a 6d 8h challenge period."
                    },
                    {
                        "name": "Data Availability",
                        "value": "External (DAC)",
                        "sentiment": "bad",
                        "description": "Proof construction relies fully on data that is NOT published onchain. There exists a Data Availability Committee (DAC) with a threshold of 1/2 that is tasked with protecting and supplying the data."
                    },
                    {
                        "name": "Exit Window",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "There is no window for users to exit in case of an unwanted regular upgrade since contracts are instantly upgradable."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Self propose",
                        "sentiment": "good",
                        "description": "Anyone can become a Proposer after 12d 17h of inactivity from the currently whitelisted Proposers."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 17145601.4,
                        "ether": 608790.52,
                        "stablecoin": 7417.98,
                        "associated": 600499.46
                    },
                    "change7d": -0.47665115485695253,
                    "associatedTokens": [
                        "RWA"
                    ]
                }
            },
            "sxnetwork": {
                "id": "sxnetwork",
                "name": "SX Network",
                "slug": "sxnetwork",
                "type": "layer2",
                "hostChain": "Ethereum",
                "category": "Optimium",
                "provider": "Arbitrum",
                "purposes": [
                    "Universal",
                    "Betting"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": false,
                "badges": [
                    {
                        "id": "EVM",
                        "type": "VM",
                        "name": "EVM",
                        "description": "This project uses the Ethereum Virtual Machine to run its smart contracts and supports the Solidity programming language"
                    },
                    {
                        "id": "DAC",
                        "type": "DA",
                        "name": "Data Availability Committee",
                        "description": "There is a Data Availability Committee that provides/attests to data availability"
                    },
                    {
                        "id": "Orbit",
                        "type": "Stack",
                        "name": "Built on Arbitrum Orbit",
                        "description": "The project is built on Arbitrum Orbit"
                    },
                    {
                        "id": "Gelato",
                        "type": "RaaS",
                        "name": "Gelato",
                        "description": "This project was deployed via the rollup-as-a-service provider Gelato"
                    }
                ],
                "stage": "Not applicable",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "Self sequence",
                        "sentiment": "good",
                        "description": "In the event of a sequencer failure, users can force transactions to be included in the project's chain by sending them to L1. There can be up to a 4d delay on this operation."
                    },
                    {
                        "name": "State Validation",
                        "value": "Fraud proofs (INT)",
                        "sentiment": "bad",
                        "description": "Fraud proofs allow 6 WHITELISTED actors watching the chain to prove that the state is incorrect. There are fewer than 5 Challengers external to the Operator among these. Interactive proofs (INT) require multiple transactions over time to resolve. There is a 6d 8h challenge period."
                    },
                    {
                        "name": "Data Availability",
                        "value": "External (DAC)",
                        "sentiment": "bad",
                        "description": "Proof construction relies fully on data that is NOT published onchain. There exists a Data Availability Committee (DAC) with a threshold of 1/2 that is tasked with protecting and supplying the data."
                    },
                    {
                        "name": "Exit Window",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "There is no window for users to exit in case of an unwanted regular upgrade since contracts are instantly upgradable."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Self propose",
                        "sentiment": "good",
                        "description": "Anyone can become a Proposer after 12d 17h of inactivity from the currently whitelisted Proposers."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 15215269.32,
                        "ether": 0,
                        "stablecoin": 0,
                        "associated": 15215269.32
                    },
                    "change7d": -0.14380087135038755,
                    "associatedTokens": [
                        "SX"
                    ]
                }
            },
            "karak": {
                "id": "karak",
                "name": "K2",
                "slug": "k2",
                "type": "layer2",
                "hostChain": "Ethereum",
                "category": "Optimium",
                "provider": "OP Stack",
                "purposes": [
                    "Universal"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": false,
                "badges": [
                    {
                        "id": "EVM",
                        "type": "VM",
                        "name": "EVM",
                        "description": "This project uses the Ethereum Virtual Machine to run its smart contracts and supports the Solidity programming language"
                    },
                    {
                        "id": "Celestia",
                        "type": "DA",
                        "name": "Celestia",
                        "description": "This project is posting its data to Celestia"
                    },
                    {
                        "id": "OPStack",
                        "type": "Stack",
                        "name": "Built on OP Stack",
                        "description": "The project is built on the OP Stack"
                    },
                    {
                        "id": "Caldera",
                        "type": "RaaS",
                        "name": "Caldera",
                        "description": "This project was deployed via the rollup-as-a-service provider Caldera"
                    }
                ],
                "stage": "Not applicable",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "Self sequence",
                        "sentiment": "good",
                        "description": "In the event of a sequencer failure, users can force transactions to be included in the project's chain by sending them to L1. There can be up to a 12h delay on this operation."
                    },
                    {
                        "name": "State Validation",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "Currently the system permits invalid state roots. More details in project overview."
                    },
                    {
                        "name": "Data Availability",
                        "value": "External",
                        "sentiment": "bad",
                        "description": "Proof construction and state derivation fully rely on data that is posted on Celestia. Sequencer tx roots are not checked against the Blobstream bridge data roots onchain, but L2 nodes can verify data availability by running a Celestia light client."
                    },
                    {
                        "name": "Exit Window",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "There is no window for users to exit in case of an unwanted regular upgrade since contracts are instantly upgradable."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Cannot withdraw",
                        "sentiment": "bad",
                        "description": "Only the whitelisted proposers can publish state roots on L1, so in the event of failure the withdrawals are frozen."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 14857220.37,
                        "ether": 12180113.54,
                        "stablecoin": 2677106.83,
                        "associated": 0
                    },
                    "change7d": -0.09830605908123269,
                    "associatedTokens": []
                }
            },
            "lightlink": {
                "id": "lightlink",
                "name": "LightLink",
                "slug": "lightlink",
                "type": "layer2",
                "hostChain": "Ethereum",
                "category": "Other",
                "purposes": [
                    "Universal"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": true,
                "badges": [
                    {
                        "id": "EVM",
                        "type": "VM",
                        "name": "EVM",
                        "description": "This project uses the Ethereum Virtual Machine to run its smart contracts and supports the Solidity programming language"
                    },
                    {
                        "id": "Celestia",
                        "type": "DA",
                        "name": "Celestia",
                        "description": "This project is posting its data to Celestia"
                    }
                ],
                "stage": "Not applicable",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "No mechanism",
                        "sentiment": "bad",
                        "description": "There is no mechanism to have transactions be included if the sequencer is down or censoring."
                    },
                    {
                        "name": "State Validation",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "Currently the system permits invalid state roots. More details in project overview. State updates must be signed by at least 50.00% of validators, which corresponds to a minimum of 2 validators."
                    },
                    {
                        "name": "Data Availability",
                        "value": "External",
                        "sentiment": "bad",
                        "description": "Proof construction and state derivation fully rely on data that is posted on Celestia. Sequencer tx roots are not checked against the Blobstream bridge data roots onchain, but L2 nodes can verify data availability by running a Celestia light client."
                    },
                    {
                        "name": "Exit Window",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "There is no window for users to exit in case of an unwanted regular upgrade since contracts are instantly upgradable."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Cannot withdraw",
                        "sentiment": "bad",
                        "description": "Only the whitelisted proposers can publish state roots on L1, so in the event of failure the withdrawals are frozen."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 14135699.34,
                        "ether": 0,
                        "stablecoin": 45006.45,
                        "associated": 14090459.08
                    },
                    "change7d": -0.05499019195535604,
                    "associatedTokens": [
                        "LL"
                    ]
                }
            },
            "zora": {
                "id": "zora",
                "name": "Zora",
                "slug": "zora",
                "type": "layer2",
                "hostChain": "Ethereum",
                "category": "Optimistic Rollup",
                "provider": "OP Stack",
                "purposes": [
                    "Universal",
                    "NFT"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": false,
                "badges": [
                    {
                        "id": "EVM",
                        "type": "VM",
                        "name": "EVM",
                        "description": "This project uses the Ethereum Virtual Machine to run its smart contracts and supports the Solidity programming language"
                    },
                    {
                        "id": "EthereumBlobs",
                        "type": "DA",
                        "name": "Ethereum with blobs",
                        "description": "This project is posting its data to Ethereum as blobs"
                    },
                    {
                        "id": "OPStack",
                        "type": "Stack",
                        "name": "Built on OP Stack",
                        "description": "The project is built on the OP Stack"
                    },
                    {
                        "id": "Superchain",
                        "type": "Infra",
                        "name": "Part of the Superchain",
                        "description": "The project is part of the Superchain, meaning it's included in the Superchain registry or uses the Superchain config"
                    },
                    {
                        "id": "Conduit",
                        "type": "RaaS",
                        "name": "Conduit",
                        "description": "This project was deployed via the rollup-as-a-service provider Conduit"
                    }
                ],
                "stage": "Stage 0",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "Self sequence",
                        "sentiment": "good",
                        "description": "In the event of a sequencer failure, users can force transactions to be included in the project's chain by sending them to L1. There can be up to a 12h delay on this operation."
                    },
                    {
                        "name": "State Validation",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "Currently the system permits invalid state roots. More details in project overview."
                    },
                    {
                        "name": "Data Availability",
                        "value": "Onchain",
                        "sentiment": "good",
                        "description": "All of the data needed for proof construction is published on Ethereum L1."
                    },
                    {
                        "name": "Exit Window",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "There is no window for users to exit in case of an unwanted regular upgrade since contracts are instantly upgradable."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Cannot withdraw",
                        "sentiment": "bad",
                        "description": "Only the whitelisted proposers can publish state roots on L1, so in the event of failure the withdrawals are frozen."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 14090612.45,
                        "ether": 13838613.18,
                        "stablecoin": 251999.27,
                        "associated": 0
                    },
                    "change7d": -0.13254432814398331,
                    "associatedTokens": []
                }
            },
            "sorare": {
                "id": "sorare",
                "name": "Sorare",
                "slug": "sorare",
                "type": "layer2",
                "hostChain": "Ethereum",
                "category": "Validium",
                "provider": "StarkEx",
                "purposes": [
                    "NFT",
                    "Exchange"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": false,
                "badges": [
                    {
                        "id": "AppChain",
                        "type": "VM",
                        "name": "Application-specific chain",
                        "description": "This project is built to operate a specific application"
                    },
                    {
                        "id": "DAC",
                        "type": "DA",
                        "name": "Data Availability Committee",
                        "description": "There is a Data Availability Committee that provides/attests to data availability"
                    },
                    {
                        "id": "StarkEx",
                        "type": "Stack",
                        "name": "StarkEx",
                        "description": "This project was deployed utilizing the StarkEx technology from StarkWare"
                    },
                    {
                        "id": "SHARP",
                        "type": "Infra",
                        "name": "Uses SHARP",
                        "description": "The project uses a shared prover contract - SHARP"
                    }
                ],
                "stage": "Not applicable",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "Force via L1",
                        "sentiment": "good",
                        "description": "Users can force the sequencer to include a withdrawal transaction by submitting a request through L1. If the sequencer censors or is down for  for more than 7d, users can use the exit hatch to withdraw their funds."
                    },
                    {
                        "name": "State Validation",
                        "value": "ZK proofs (ST)",
                        "sentiment": "good",
                        "description": "STARKs are zero knowledge proofs that ensure state correctness."
                    },
                    {
                        "name": "Data Availability",
                        "value": "External (DAC)",
                        "sentiment": "bad",
                        "description": "Proof construction relies fully on data that is NOT published onchain. There exists a Data Availability Committee (DAC) with a threshold of 2/4 that is tasked with protecting and supplying the data."
                    },
                    {
                        "name": "Exit Window",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "There is no window for users to exit in case of an unwanted regular upgrade since contracts are instantly upgradable."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Use escape hatch",
                        "sentiment": "good",
                        "description": "Users are able to trustlessly exit by submitting a Merkle proof of funds. NFTs will be minted on L1 to exit."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 13458525.64,
                        "ether": 13458525.64,
                        "stablecoin": 0,
                        "associated": 0
                    },
                    "change7d": -0.10505821998961229,
                    "associatedTokens": []
                }
            },
            "cyber": {
                "id": "cyber",
                "name": "Cyber",
                "slug": "cyber",
                "type": "layer2",
                "hostChain": "Ethereum",
                "category": "Optimium",
                "provider": "OP Stack",
                "purposes": [
                    "Universal",
                    "Social"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": false,
                "badges": [
                    {
                        "id": "EVM",
                        "type": "VM",
                        "name": "EVM",
                        "description": "This project uses the Ethereum Virtual Machine to run its smart contracts and supports the Solidity programming language"
                    },
                    {
                        "id": "DAC",
                        "type": "DA",
                        "name": "Data Availability Committee",
                        "description": "There is a Data Availability Committee that provides/attests to data availability"
                    },
                    {
                        "id": "OPStack",
                        "type": "Stack",
                        "name": "Built on OP Stack",
                        "description": "The project is built on the OP Stack"
                    },
                    {
                        "id": "Superchain",
                        "type": "Infra",
                        "name": "Part of the Superchain",
                        "description": "The project is part of the Superchain, meaning it's included in the Superchain registry or uses the Superchain config"
                    },
                    {
                        "id": "AltLayer",
                        "type": "RaaS",
                        "name": "AltLayer",
                        "description": "This project was deployed via the rollup-as-a-service provider AltLayer"
                    }
                ],
                "stage": "Not applicable",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "Self sequence",
                        "sentiment": "good",
                        "description": "In the event of a sequencer failure, users can force transactions to be included in the project's chain by sending them to L1. There can be up to a 12h delay on this operation."
                    },
                    {
                        "name": "State Validation",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "Currently the system permits invalid state roots. More details in project overview."
                    },
                    {
                        "name": "Data Availability",
                        "value": "External",
                        "sentiment": "bad",
                        "description": "Proof construction and state derivation rely fully on data that is NOT published onchain. A custom data availability (DA) provider without attestations is used, but data unavailability can be challenged."
                    },
                    {
                        "name": "Exit Window",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "There is no window for users to exit in case of an unwanted regular upgrade since contracts are instantly upgradable."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Cannot withdraw",
                        "sentiment": "bad",
                        "description": "Only the whitelisted proposers can publish state roots on L1, so in the event of failure the withdrawals are frozen."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 13218939.53,
                        "ether": 1181838.73,
                        "stablecoin": 18862.77,
                        "associated": 11999356.34
                    },
                    "change7d": -0.07368424470073398,
                    "associatedTokens": [
                        "CYBER"
                    ]
                }
            },
            "silicon": {
                "id": "silicon",
                "name": "Silicon",
                "slug": "silicon",
                "type": "layer2",
                "hostChain": "Ethereum",
                "category": "Validium",
                "provider": "Polygon",
                "purposes": [
                    "Universal"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": false,
                "badges": [
                    {
                        "id": "EVM",
                        "type": "VM",
                        "name": "EVM",
                        "description": "This project uses the Ethereum Virtual Machine to run its smart contracts and supports the Solidity programming language"
                    },
                    {
                        "id": "DAC",
                        "type": "DA",
                        "name": "Data Availability Committee",
                        "description": "There is a Data Availability Committee that provides/attests to data availability"
                    },
                    {
                        "id": "PolygonCDK",
                        "type": "Stack",
                        "name": "Built on the Polygon CDK stack",
                        "description": "The project is built on the Polygon CDK stack"
                    },
                    {
                        "id": "AggLayer",
                        "type": "Infra",
                        "name": "Part of the AggLayer",
                        "description": "The project is part of the AggLayer"
                    }
                ],
                "stage": "Not applicable",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "No mechanism",
                        "sentiment": "bad",
                        "description": "There is no mechanism to have transactions be included if the sequencer is down or censoring. Although the functionality exists in the code, it is currently disabled."
                    },
                    {
                        "name": "State Validation",
                        "value": "ZK proofs (ST, SN)",
                        "sentiment": "good",
                        "description": "STARKs and SNARKs are zero knowledge proofs that ensure state correctness. STARKs proofs are wrapped in SNARKs proofs for efficiency. SNARKs require a trusted setup."
                    },
                    {
                        "name": "Data Availability",
                        "value": "External (DAC)",
                        "sentiment": "bad",
                        "description": "Proof construction relies fully on data that is NOT published onchain. There exists a Data Availability Committee (DAC) with a threshold of 2/3 that is tasked with protecting and supplying the data."
                    },
                    {
                        "name": "Exit Window",
                        "value": "None",
                        "sentiment": "bad",
                        "warning": {
                            "value": "The Security Council can remove the delay on upgrades.",
                            "sentiment": "bad"
                        },
                        "description": "Even though there is a 3d Timelock for upgrades, forced transactions are disabled."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Cannot withdraw",
                        "sentiment": "bad",
                        "description": "Only the whitelisted proposers can publish state roots on L1, so in the event of failure the withdrawals are frozen."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 13198763.55,
                        "ether": 2041296.91,
                        "stablecoin": 6947740.82,
                        "associated": 0
                    },
                    "change7d": -0.024534156348488545,
                    "associatedTokens": []
                }
            },
            "orderly": {
                "id": "orderly",
                "name": "Orderly Network",
                "shortName": "Orderly",
                "slug": "orderly",
                "type": "layer2",
                "hostChain": "Ethereum",
                "category": "Optimium",
                "provider": "OP Stack",
                "purposes": [
                    "Universal",
                    "Exchange"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": false,
                "badges": [
                    {
                        "id": "EVM",
                        "type": "VM",
                        "name": "EVM",
                        "description": "This project uses the Ethereum Virtual Machine to run its smart contracts and supports the Solidity programming language"
                    },
                    {
                        "id": "Celestia",
                        "type": "DA",
                        "name": "Celestia",
                        "description": "This project is posting its data to Celestia"
                    },
                    {
                        "id": "OPStack",
                        "type": "Stack",
                        "name": "Built on OP Stack",
                        "description": "The project is built on the OP Stack"
                    },
                    {
                        "id": "Conduit",
                        "type": "RaaS",
                        "name": "Conduit",
                        "description": "This project was deployed via the rollup-as-a-service provider Conduit"
                    }
                ],
                "stage": "Not applicable",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "Self sequence",
                        "sentiment": "good",
                        "description": "In the event of a sequencer failure, users can force transactions to be included in the project's chain by sending them to L1. There can be up to a 12h delay on this operation."
                    },
                    {
                        "name": "State Validation",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "Currently the system permits invalid state roots. More details in project overview."
                    },
                    {
                        "name": "Data Availability",
                        "value": "External",
                        "sentiment": "bad",
                        "description": "Proof construction and state derivation fully rely on data that is posted on Celestia. Sequencer tx roots are not checked against the Blobstream bridge data roots onchain, but L2 nodes can verify data availability by running a Celestia light client."
                    },
                    {
                        "name": "Exit Window",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "There is no window for users to exit in case of an unwanted regular upgrade since contracts are instantly upgradable."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Cannot withdraw",
                        "sentiment": "bad",
                        "description": "Only the whitelisted proposers can publish state roots on L1, so in the event of failure the withdrawals are frozen."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 13062492.29,
                        "ether": 261962.58,
                        "stablecoin": 12800529.71,
                        "associated": 0
                    },
                    "change7d": -0.005915509772904226,
                    "associatedTokens": []
                }
            },
            "pepeunchained": {
                "id": "pepeunchained",
                "name": "Pepe Unchained",
                "slug": "pepeunchained",
                "type": "layer2",
                "hostChain": "Ethereum",
                "category": "Optimium",
                "provider": "OP Stack",
                "purposes": [
                    "Universal"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": false,
                "badges": [
                    {
                        "id": "EVM",
                        "type": "VM",
                        "name": "EVM",
                        "description": "This project uses the Ethereum Virtual Machine to run its smart contracts and supports the Solidity programming language"
                    },
                    {
                        "id": "Celestia",
                        "type": "DA",
                        "name": "Celestia",
                        "description": "This project is posting its data to Celestia"
                    },
                    {
                        "id": "OPStack",
                        "type": "Stack",
                        "name": "Built on OP Stack",
                        "description": "The project is built on the OP Stack"
                    },
                    {
                        "id": "Superchain",
                        "type": "Infra",
                        "name": "Part of the Superchain",
                        "description": "The project is part of the Superchain, meaning it's included in the Superchain registry or uses the Superchain config"
                    },
                    {
                        "id": "Conduit",
                        "type": "RaaS",
                        "name": "Conduit",
                        "description": "This project was deployed via the rollup-as-a-service provider Conduit"
                    }
                ],
                "stage": "Not applicable",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "Self sequence",
                        "sentiment": "good",
                        "description": "In the event of a sequencer failure, users can force transactions to be included in the project's chain by sending them to L1. There can be up to a 12h delay on this operation."
                    },
                    {
                        "name": "State Validation",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "Currently the system permits invalid state roots. More details in project overview."
                    },
                    {
                        "name": "Data Availability",
                        "value": "External",
                        "sentiment": "bad",
                        "description": "Proof construction and state derivation fully rely on data that is posted on Celestia. Sequencer tx roots are not checked against the Blobstream bridge data roots onchain, but L2 nodes can verify data availability by running a Celestia light client."
                    },
                    {
                        "name": "Exit Window",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "There is no window for users to exit in case of an unwanted regular upgrade since contracts are instantly upgradable."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Cannot withdraw",
                        "sentiment": "bad",
                        "description": "Only the whitelisted proposers can publish state roots on L1, so in the event of failure the withdrawals are frozen."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 12504219.36,
                        "ether": 132499.3,
                        "stablecoin": 185642.44,
                        "associated": 0
                    },
                    "change7d": -0.18159838661314176,
                    "associatedTokens": []
                }
            },
            "bobanetwork": {
                "id": "bobanetwork",
                "name": "Boba Network",
                "shortName": "Boba",
                "slug": "bobanetwork",
                "type": "layer2",
                "hostChain": "Ethereum",
                "category": "Optimistic Rollup",
                "provider": "OP Stack",
                "purposes": [
                    "Universal"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": false,
                "badges": [
                    {
                        "id": "EVM",
                        "type": "VM",
                        "name": "EVM",
                        "description": "This project uses the Ethereum Virtual Machine to run its smart contracts and supports the Solidity programming language"
                    },
                    {
                        "id": "EthereumBlobs",
                        "type": "DA",
                        "name": "Ethereum with blobs",
                        "description": "This project is posting its data to Ethereum as blobs"
                    },
                    {
                        "id": "OPStack",
                        "type": "Stack",
                        "name": "Built on OP Stack",
                        "description": "The project is built on the OP Stack"
                    },
                    {
                        "id": "Superchain",
                        "type": "Infra",
                        "name": "Part of the Superchain",
                        "description": "The project is part of the Superchain, meaning it's included in the Superchain registry or uses the Superchain config"
                    }
                ],
                "stage": "Stage 0",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "Self sequence",
                        "sentiment": "good",
                        "description": "In the event of a sequencer failure, users can force transactions to be included in the project's chain by sending them to L1. There can be up to a 12h delay on this operation."
                    },
                    {
                        "name": "State Validation",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "Currently the system permits invalid state roots. More details in project overview."
                    },
                    {
                        "name": "Data Availability",
                        "value": "Onchain",
                        "sentiment": "good",
                        "description": "All of the data needed for proof construction is published on Ethereum L1."
                    },
                    {
                        "name": "Exit Window",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "There is no window for users to exit in case of an unwanted regular upgrade since contracts are instantly upgradable."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Cannot withdraw",
                        "sentiment": "bad",
                        "description": "Only the whitelisted proposers can publish state roots on L1, so in the event of failure the withdrawals are frozen."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 9695519.06,
                        "ether": 3837833.16,
                        "stablecoin": 1773377.99,
                        "associated": 3080977.02
                    },
                    "change7d": -0.09091926879501167,
                    "associatedTokens": [
                        "BOBA"
                    ]
                }
            },
            "zkfair": {
                "id": "zkfair",
                "name": "ZKFair",
                "slug": "zkfair",
                "type": "layer2",
                "hostChain": "Ethereum",
                "category": "Validium",
                "provider": "Polygon",
                "purposes": [
                    "Universal"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": false,
                "badges": [
                    {
                        "id": "EVM",
                        "type": "VM",
                        "name": "EVM",
                        "description": "This project uses the Ethereum Virtual Machine to run its smart contracts and supports the Solidity programming language"
                    },
                    {
                        "id": "DAC",
                        "type": "DA",
                        "name": "Data Availability Committee",
                        "description": "There is a Data Availability Committee that provides/attests to data availability"
                    },
                    {
                        "id": "PolygonCDK",
                        "type": "Stack",
                        "name": "Built on the Polygon CDK stack",
                        "description": "The project is built on the Polygon CDK stack"
                    }
                ],
                "stage": "Not applicable",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "No mechanism",
                        "sentiment": "bad",
                        "description": "There is no mechanism to have transactions be included if the sequencer is down or censoring. Although the functionality exists in the code, it is currently disabled."
                    },
                    {
                        "name": "State Validation",
                        "value": "ZK proofs (SN)",
                        "sentiment": "good",
                        "description": "SNARKs are zero knowledge proofs that ensure state correctness, but require trusted setup."
                    },
                    {
                        "name": "Data Availability",
                        "value": "External (DAC)",
                        "sentiment": "bad",
                        "description": "Proof construction relies fully on data that is NOT published onchain. There exists a Data Availability Committee (DAC) with a threshold of 3/5 that is tasked with protecting and supplying the data."
                    },
                    {
                        "name": "Exit Window",
                        "value": "None",
                        "sentiment": "bad",
                        "warning": {
                            "value": "The ZkFair Owner can upgrade with no delay.",
                            "sentiment": "bad"
                        },
                        "description": "Even though there is a 1d Timelock for upgrades, forced transactions are disabled. Even if they were to be enabled, user withdrawals can be censored up to 15d."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Self propose",
                        "sentiment": "good",
                        "description": "If the Proposer fails, users can leverage the source available prover to submit proofs to the L1 bridge. There is a 5d delay for proving and a 5d delay for finalizing state proven in this way. These delays can only be lowered except during the emergency state."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 7756812.86,
                        "ether": 339548.65,
                        "stablecoin": 5439201.65,
                        "associated": 1975977.46
                    },
                    "change7d": -0.07801942559975639,
                    "associatedTokens": [
                        "ZKF"
                    ]
                }
            },
            "polynomial": {
                "id": "polynomial",
                "name": "Polynomial",
                "slug": "polynomial",
                "type": "layer2",
                "hostChain": "Ethereum",
                "category": "Optimistic Rollup",
                "provider": "OP Stack",
                "purposes": [
                    "Universal",
                    "Exchange"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": false,
                "badges": [
                    {
                        "id": "EVM",
                        "type": "VM",
                        "name": "EVM",
                        "description": "This project uses the Ethereum Virtual Machine to run its smart contracts and supports the Solidity programming language"
                    },
                    {
                        "id": "EthereumBlobs",
                        "type": "DA",
                        "name": "Ethereum with blobs",
                        "description": "This project is posting its data to Ethereum as blobs"
                    },
                    {
                        "id": "OPStack",
                        "type": "Stack",
                        "name": "Built on OP Stack",
                        "description": "The project is built on the OP Stack"
                    },
                    {
                        "id": "Superchain",
                        "type": "Infra",
                        "name": "Part of the Superchain",
                        "description": "The project is part of the Superchain, meaning it's included in the Superchain registry or uses the Superchain config"
                    },
                    {
                        "id": "Conduit",
                        "type": "RaaS",
                        "name": "Conduit",
                        "description": "This project was deployed via the rollup-as-a-service provider Conduit"
                    }
                ],
                "stage": "Stage 0",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "Self sequence",
                        "sentiment": "good",
                        "description": "In the event of a sequencer failure, users can force transactions to be included in the project's chain by sending them to L1. There can be up to a 12h delay on this operation."
                    },
                    {
                        "name": "State Validation",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "Currently the system permits invalid state roots. More details in project overview."
                    },
                    {
                        "name": "Data Availability",
                        "value": "Onchain",
                        "sentiment": "good",
                        "description": "All of the data needed for proof construction is published on Ethereum L1."
                    },
                    {
                        "name": "Exit Window",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "There is no window for users to exit in case of an unwanted regular upgrade since contracts are instantly upgradable."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Cannot withdraw",
                        "sentiment": "bad",
                        "description": "Only the whitelisted proposers can publish state roots on L1, so in the event of failure the withdrawals are frozen."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 7361372.03,
                        "ether": 41379.39,
                        "stablecoin": 3424986.65,
                        "associated": 0
                    },
                    "change7d": -0.03074975785867351,
                    "associatedTokens": []
                }
            },
            "hashkey": {
                "id": "hashkey",
                "name": "HashKey Chain",
                "slug": "hashkey",
                "type": "layer2",
                "hostChain": "Ethereum",
                "category": "Optimistic Rollup",
                "provider": "OP Stack",
                "purposes": [
                    "Universal",
                    "Exchange"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": false,
                "badges": [
                    {
                        "id": "EVM",
                        "type": "VM",
                        "name": "EVM",
                        "description": "This project uses the Ethereum Virtual Machine to run its smart contracts and supports the Solidity programming language"
                    },
                    {
                        "id": "EthereumBlobs",
                        "type": "DA",
                        "name": "Ethereum with blobs",
                        "description": "This project is posting its data to Ethereum as blobs"
                    },
                    {
                        "id": "OPStack",
                        "type": "Stack",
                        "name": "Built on OP Stack",
                        "description": "The project is built on the OP Stack"
                    },
                    {
                        "id": "Superchain",
                        "type": "Infra",
                        "name": "Part of the Superchain",
                        "description": "The project is part of the Superchain, meaning it's included in the Superchain registry or uses the Superchain config"
                    }
                ],
                "stage": "Stage 0",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "Self sequence",
                        "sentiment": "good",
                        "description": "In the event of a sequencer failure, users can force transactions to be included in the project's chain by sending them to L1. There can be up to a 12h delay on this operation."
                    },
                    {
                        "name": "State Validation",
                        "value": "Fraud proofs (INT)",
                        "sentiment": "bad",
                        "description": "Fraud proofs allow actors watching the chain to prove that the state is incorrect. Interactive proofs (INT) require multiple transactions over time to resolve. Only one entity is currently allowed to propose and submit challenges, as only permissioned games are currently allowed."
                    },
                    {
                        "name": "Data Availability",
                        "value": "Onchain",
                        "sentiment": "good",
                        "description": "All of the data needed for proof construction is published on Ethereum L1."
                    },
                    {
                        "name": "Exit Window",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "There is no window for users to exit in case of an unwanted regular upgrade since contracts are instantly upgradable."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Cannot withdraw",
                        "sentiment": "bad",
                        "description": "Only the whitelisted proposers can publish state roots on L1, so in the event of failure the withdrawals are frozen."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 6723469.85,
                        "ether": 160918.62,
                        "stablecoin": 1381862.89,
                        "associated": 5180601.78
                    },
                    "change7d": 1.0500134950552789,
                    "associatedTokens": [
                        "HSK"
                    ]
                }
            },
            "deversifi": {
                "id": "deversifi",
                "name": "rhino.fi",
                "slug": "rhinofi",
                "type": "layer2",
                "hostChain": "Ethereum",
                "category": "Validium",
                "provider": "StarkEx",
                "purposes": [
                    "Exchange"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": false,
                "badges": [
                    {
                        "id": "AppChain",
                        "type": "VM",
                        "name": "Application-specific chain",
                        "description": "This project is built to operate a specific application"
                    },
                    {
                        "id": "DAC",
                        "type": "DA",
                        "name": "Data Availability Committee",
                        "description": "There is a Data Availability Committee that provides/attests to data availability"
                    },
                    {
                        "id": "StarkEx",
                        "type": "Stack",
                        "name": "StarkEx",
                        "description": "This project was deployed utilizing the StarkEx technology from StarkWare"
                    },
                    {
                        "id": "SHARP",
                        "type": "Infra",
                        "name": "Uses SHARP",
                        "description": "The project uses a shared prover contract - SHARP"
                    }
                ],
                "stage": "Not applicable",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "Force via L1",
                        "sentiment": "good",
                        "description": "Users can force the sequencer to include a withdrawal transaction by submitting a request through L1. If the sequencer censors or is down for  for more than 7d, users can use the exit hatch to withdraw their funds."
                    },
                    {
                        "name": "State Validation",
                        "value": "ZK proofs (ST)",
                        "sentiment": "good",
                        "description": "STARKs are zero knowledge proofs that ensure state correctness."
                    },
                    {
                        "name": "Data Availability",
                        "value": "External (DAC)",
                        "sentiment": "bad",
                        "description": "Proof construction relies fully on data that is NOT published onchain. There exists a Data Availability Committee (DAC) with a threshold of 4/7 that is tasked with protecting and supplying the data."
                    },
                    {
                        "name": "Exit Window",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "There is no window for users to exit in case of an unwanted regular upgrade since contracts are instantly upgradable. Users can be explicitly censored from withdrawing (Blocklist on L1)."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Use escape hatch",
                        "sentiment": "good",
                        "description": "Users are able to trustlessly exit by submitting a Merkle proof of funds."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 6659598.31,
                        "ether": 2762731.32,
                        "stablecoin": 2962045.11,
                        "associated": 0
                    },
                    "change7d": -0.05908072163174982,
                    "associatedTokens": []
                }
            },
            "kroma": {
                "id": "kroma",
                "name": "Kroma",
                "slug": "kroma",
                "type": "layer2",
                "hostChain": "Ethereum",
                "category": "Optimistic Rollup",
                "provider": "OP Stack",
                "purposes": [
                    "Universal"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": false,
                "badges": [
                    {
                        "id": "EVM",
                        "type": "VM",
                        "name": "EVM",
                        "description": "This project uses the Ethereum Virtual Machine to run its smart contracts and supports the Solidity programming language"
                    },
                    {
                        "id": "EthereumBlobs",
                        "type": "DA",
                        "name": "Ethereum with blobs",
                        "description": "This project is posting its data to Ethereum as blobs"
                    },
                    {
                        "id": "OPStack",
                        "type": "Stack",
                        "name": "Built on OP Stack",
                        "description": "The project is built on the OP Stack"
                    },
                    {
                        "id": "Superchain",
                        "type": "Infra",
                        "name": "Part of the Superchain",
                        "description": "The project is part of the Superchain, meaning it's included in the Superchain registry or uses the Superchain config"
                    }
                ],
                "stage": "Stage 0",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "Self sequence",
                        "sentiment": "good",
                        "description": "In the event of a sequencer failure, users can force transactions to be included in the project's chain by sending them to L1. There can be up to a 12h delay on this operation."
                    },
                    {
                        "name": "State Validation",
                        "value": "Fraud proofs (INT, ZK)",
                        "sentiment": "bad",
                        "description": "Fraud proofs allow actors watching the chain to prove that the state is incorrect. Interactive proofs (INT) require multiple transactions over time to resolve. ZK proofs are used to adjudicate the correctness of the last step. The challenge protocol can fail under certain conditions. The current system doesn't use posted L2 txs batches on L1 as inputs to prove a fault (for the zkEVM prover path), meaning that DA is not always enforced."
                    },
                    {
                        "name": "Data Availability",
                        "value": "Onchain",
                        "sentiment": "good",
                        "description": "All of the data needed for proof construction is published on Ethereum L1."
                    },
                    {
                        "name": "Exit Window",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "There is no window for users to exit in case of an unwanted regular upgrade since contracts are instantly upgradable."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Self propose",
                        "sentiment": "good",
                        "description": "Anyone can be a Proposer and propose new roots to the L1 bridge."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 6412344.04,
                        "ether": 1790826.12,
                        "stablecoin": 509179.39,
                        "associated": 1343486.37
                    },
                    "change7d": -0.21975343012491444,
                    "associatedTokens": [
                        "KRO"
                    ]
                }
            },
            "sanko": {
                "id": "sanko",
                "name": "Sanko",
                "slug": "sanko",
                "type": "layer3",
                "hostChain": "Arbitrum One",
                "category": "Optimium",
                "provider": "Arbitrum",
                "purposes": [
                    "Universal",
                    "Gaming",
                    "Social"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": false,
                "badges": [
                    {
                        "id": "EVM",
                        "type": "VM",
                        "name": "EVM",
                        "description": "This project uses the Ethereum Virtual Machine to run its smart contracts and supports the Solidity programming language"
                    },
                    {
                        "id": "DAC",
                        "type": "DA",
                        "name": "Data Availability Committee",
                        "description": "There is a Data Availability Committee that provides/attests to data availability"
                    },
                    {
                        "id": "Orbit",
                        "type": "Stack",
                        "name": "Built on Arbitrum Orbit",
                        "description": "The project is built on Arbitrum Orbit"
                    },
                    {
                        "id": "Arbitrum",
                        "type": "L3ParentChain",
                        "name": "Built on top of Arbitrum",
                        "description": "The project has Arbitrum as its host chain"
                    },
                    {
                        "id": "Caldera",
                        "type": "RaaS",
                        "name": "Caldera",
                        "description": "This project was deployed via the rollup-as-a-service provider Caldera"
                    }
                ],
                "stage": "Not applicable",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "Self sequence",
                        "sentiment": "good",
                        "description": "In the event of a sequencer failure, users can force transactions to be included in the project's chain by sending them to L1. There can be up to a 2d delay on this operation."
                    },
                    {
                        "name": "State Validation",
                        "value": "Fraud proofs (INT)",
                        "sentiment": "bad",
                        "description": "Fraud proofs only allow 3 WHITELISTED actors watching the chain to prove that the state is incorrect. Interactive proofs (INT) require multiple transactions over time to resolve. The challenge protocol can be subject to delay attacks. There is a 6d 8h challenge period."
                    },
                    {
                        "name": "Data Availability",
                        "value": "External (DAC)",
                        "sentiment": "bad",
                        "description": "Proof construction relies fully on data that is NOT published onchain. There exists a Data Availability Committee (DAC) with a threshold of 2/3 that is tasked with protecting and supplying the data."
                    },
                    {
                        "name": "Exit Window",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "There is no window for users to exit in case of an unwanted regular upgrade since contracts are instantly upgradable."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Self propose",
                        "sentiment": "good",
                        "description": "Anyone can become a Proposer after 12d 17h of inactivity from the currently whitelisted Proposers."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 5749439.5,
                        "ether": 29391.84,
                        "stablecoin": 87545.37,
                        "associated": 4418663.83
                    },
                    "change7d": -0.20468062061858117,
                    "associatedTokens": [
                        "DMT"
                    ]
                }
            },
            "zeronetwork": {
                "id": "zeronetwork",
                "name": "ZERO Network",
                "slug": "zeronetwork",
                "type": "layer2",
                "hostChain": "Ethereum",
                "category": "ZK Rollup",
                "provider": "ZK Stack",
                "purposes": [
                    "Universal"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": false,
                "badges": [
                    {
                        "id": "EVM",
                        "type": "VM",
                        "name": "EVM",
                        "description": "This project uses the Ethereum Virtual Machine to run its smart contracts and supports the Solidity programming language"
                    },
                    {
                        "id": "EthereumBlobs",
                        "type": "DA",
                        "name": "Ethereum with blobs",
                        "description": "This project is posting its data to Ethereum as blobs"
                    },
                    {
                        "id": "ZKStack",
                        "type": "Stack",
                        "name": "Built on the ZK Stack",
                        "description": "The project is built on the ZK Stack"
                    },
                    {
                        "id": "ElasticChain",
                        "type": "Infra",
                        "name": "Part of the Elastic Chain",
                        "description": "The project is part of the Elastic Chain, meaning it's based on the ZK stack and uses the shared contracts"
                    },
                    {
                        "id": "Caldera",
                        "type": "RaaS",
                        "name": "Caldera",
                        "description": "This project was deployed via the rollup-as-a-service provider Caldera"
                    }
                ],
                "stage": "Stage 0",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "Enqueue via L1",
                        "sentiment": "warning",
                        "description": "Users can submit transactions to an L1 queue, but can't force them. The sequencers cannot selectively skip transactions but can stop processing the queue entirely. In other words, if the sequencers censor or are down, they are so for everyone."
                    },
                    {
                        "name": "State Validation",
                        "value": "ZK proofs (ST, SN)",
                        "sentiment": "good",
                        "description": "STARKs and SNARKs are zero knowledge proofs that ensure state correctness. STARKs proofs are wrapped in SNARKs proofs for efficiency. SNARKs require a trusted setup."
                    },
                    {
                        "name": "Data Availability",
                        "value": "Onchain (SD)",
                        "sentiment": "good",
                        "description": "All of the data (SD = state diffs) needed for proof construction is published onchain."
                    },
                    {
                        "name": "Exit Window",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "There is no window for users to exit in case of an unwanted standard upgrade because the central operator can censor withdrawal transactions by implementing a TransactionFilterer with no delay. The standard upgrade delay is 4d 3h."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Cannot withdraw",
                        "sentiment": "warning",
                        "description": "Only the whitelisted proposers can publish state roots on L1, so in the event of failure the withdrawals are frozen. There is a decentralized Governance system that can attempt changing Proposers with an upgrade."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 4733963.14,
                        "ether": 3537787.53,
                        "stablecoin": 1119574.93,
                        "associated": 0
                    },
                    "change7d": -0.12328334639655636,
                    "associatedTokens": []
                }
            },
            "corn": {
                "id": "corn",
                "name": "Corn",
                "slug": "corn",
                "type": "layer2",
                "hostChain": "Ethereum",
                "category": "Optimium",
                "provider": "Arbitrum",
                "purposes": [
                    "Universal",
                    "Bitcoin DApps"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": false,
                "badges": [
                    {
                        "id": "EVM",
                        "type": "VM",
                        "name": "EVM",
                        "description": "This project uses the Ethereum Virtual Machine to run its smart contracts and supports the Solidity programming language"
                    },
                    {
                        "id": "DAC",
                        "type": "DA",
                        "name": "Data Availability Committee",
                        "description": "There is a Data Availability Committee that provides/attests to data availability"
                    },
                    {
                        "id": "Orbit",
                        "type": "Stack",
                        "name": "Built on Arbitrum Orbit",
                        "description": "The project is built on Arbitrum Orbit"
                    },
                    {
                        "id": "Conduit",
                        "type": "RaaS",
                        "name": "Conduit",
                        "description": "This project was deployed via the rollup-as-a-service provider Conduit"
                    }
                ],
                "stage": "Not applicable",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "Self sequence",
                        "sentiment": "good",
                        "description": "In the event of a sequencer failure, users can force transactions to be included in the project's chain by sending them to L1. There can be up to a 1d delay on this operation."
                    },
                    {
                        "name": "State Validation",
                        "value": "Fraud proofs (INT)",
                        "sentiment": "bad",
                        "description": "No actor outside of the single Proposer can submit fraud proofs. Interactive proofs (INT) require multiple transactions over time to resolve. The challenge protocol can be subject to delay attacks. There is a 5d 14h challenge period."
                    },
                    {
                        "name": "Data Availability",
                        "value": "External (DAC)",
                        "sentiment": "bad",
                        "description": "Proof construction relies fully on data that is NOT published onchain. There exists a Data Availability Committee (DAC) with a threshold of 1/1 that is tasked with protecting and supplying the data."
                    },
                    {
                        "name": "Exit Window",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "There is no window for users to exit in case of an unwanted regular upgrade since contracts are instantly upgradable."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Self propose",
                        "sentiment": "good",
                        "description": "Anyone can become a Proposer after 11d 23h of inactivity from the currently whitelisted Proposers."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 4195708.66,
                        "ether": 81394.55,
                        "stablecoin": 217538.2,
                        "associated": 0
                    },
                    "change7d": -0.8016990176821894,
                    "associatedTokens": []
                }
            },
            "winr": {
                "id": "winr",
                "name": "WINR",
                "slug": "winr",
                "type": "layer3",
                "hostChain": "Arbitrum One",
                "category": "Optimium",
                "provider": "Arbitrum",
                "purposes": [
                    "Universal",
                    "Gaming"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": false,
                "badges": [
                    {
                        "id": "EVM",
                        "type": "VM",
                        "name": "EVM",
                        "description": "This project uses the Ethereum Virtual Machine to run its smart contracts and supports the Solidity programming language"
                    },
                    {
                        "id": "DAC",
                        "type": "DA",
                        "name": "Data Availability Committee",
                        "description": "There is a Data Availability Committee that provides/attests to data availability"
                    },
                    {
                        "id": "Orbit",
                        "type": "Stack",
                        "name": "Built on Arbitrum Orbit",
                        "description": "The project is built on Arbitrum Orbit"
                    },
                    {
                        "id": "Arbitrum",
                        "type": "L3ParentChain",
                        "name": "Built on top of Arbitrum",
                        "description": "The project has Arbitrum as its host chain"
                    },
                    {
                        "id": "Conduit",
                        "type": "RaaS",
                        "name": "Conduit",
                        "description": "This project was deployed via the rollup-as-a-service provider Conduit"
                    }
                ],
                "stage": "Not applicable",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "Self sequence",
                        "sentiment": "good",
                        "description": "In the event of a sequencer failure, users can force transactions to be included in the project's chain by sending them to L1. There can be up to a 2d delay on this operation."
                    },
                    {
                        "name": "State Validation",
                        "value": "Fraud proofs (INT)",
                        "sentiment": "bad",
                        "description": "Fraud proofs only allow 2 WHITELISTED actors watching the chain to prove that the state is incorrect. Interactive proofs (INT) require multiple transactions over time to resolve. The challenge protocol can be subject to delay attacks. There is a 1h challenge period."
                    },
                    {
                        "name": "Data Availability",
                        "value": "External (DAC)",
                        "sentiment": "bad",
                        "description": "Proof construction relies fully on data that is NOT published onchain. There exists a Data Availability Committee (DAC) with a threshold of 1/1 that is tasked with protecting and supplying the data."
                    },
                    {
                        "name": "Exit Window",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "There is no window for users to exit in case of an unwanted regular upgrade since contracts are instantly upgradable."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Self propose",
                        "sentiment": "good",
                        "description": "Anyone can become a Proposer after 6d 9h of inactivity from the currently whitelisted Proposers."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 3481154.32,
                        "ether": 140899.67,
                        "stablecoin": 130456.02,
                        "associated": 3122692.3
                    },
                    "change7d": -0.1746973764731019,
                    "associatedTokens": [
                        "WINR"
                    ]
                }
            },
            "aztec": {
                "id": "aztec",
                "name": "Zk.Money v1 (Aztec v1)",
                "shortName": "Zk.Money v1",
                "slug": "aztecv1",
                "type": "layer2",
                "hostChain": "Ethereum",
                "category": "ZK Rollup",
                "purposes": [
                    "Payments",
                    "Privacy"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": false,
                "badges": [],
                "stage": "Stage 2",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "Self sequence",
                        "sentiment": "good",
                        "description": "In the event of a sequencer failure, users can force transactions to be included in the project's chain by sending them to L1. Proposing new blocks requires creating ZK proofs."
                    },
                    {
                        "name": "State Validation",
                        "value": "ZK proofs (SN)",
                        "sentiment": "good",
                        "description": "SNARKs are zero knowledge proofs that ensure state correctness, but require trusted setup."
                    },
                    {
                        "name": "Data Availability",
                        "value": "Onchain",
                        "sentiment": "good",
                        "description": "All of the data needed for proof construction is published on Ethereum L1."
                    },
                    {
                        "name": "Exit Window",
                        "value": "∞",
                        "sentiment": "good",
                        "description": "Users can exit funds at any time because contracts are not upgradeable."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Self propose",
                        "sentiment": "good",
                        "description": "If the Proposer fails, users can leverage the source available prover to submit proofs to the L1 bridge."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 2702992.3,
                        "ether": 2540270.11,
                        "stablecoin": 153952.58,
                        "associated": 0
                    },
                    "change7d": -0.10355183789443567,
                    "associatedTokens": []
                }
            },
            "shibarium": {
                "id": "shibarium",
                "name": "Shibarium",
                "slug": "shibarium",
                "type": "layer2",
                "hostChain": "Ethereum",
                "category": "Other",
                "purposes": [
                    "Universal"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": true,
                "badges": [
                    {
                        "id": "EVM",
                        "type": "VM",
                        "name": "EVM",
                        "description": "This project uses the Ethereum Virtual Machine to run its smart contracts and supports the Solidity programming language"
                    },
                    {
                        "id": "CustomDA",
                        "type": "DA",
                        "name": "Custom DA solution",
                        "description": "This project is using a custom DA solution"
                    }
                ],
                "stage": "Not applicable",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "Under Review",
                        "sentiment": "UnderReview",
                        "description": "This risk is currently under review."
                    },
                    {
                        "name": "State Validation",
                        "value": "Under Review",
                        "sentiment": "UnderReview",
                        "description": "This risk is currently under review."
                    },
                    {
                        "name": "Data Availability",
                        "value": "Under Review",
                        "sentiment": "UnderReview",
                        "description": "This risk is currently under review."
                    },
                    {
                        "name": "Exit Window",
                        "value": "Under Review",
                        "sentiment": "UnderReview",
                        "description": "This risk is currently under review."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Under Review",
                        "sentiment": "UnderReview",
                        "description": "This risk is currently under review."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 2690254.79,
                        "ether": 528361.8,
                        "stablecoin": 44352.03,
                        "associated": 1678578.65
                    },
                    "change7d": -0.07289371035912584,
                    "associatedTokens": [
                        "SHIB",
                        "BONE",
                        "LEASH"
                    ]
                }
            },
            "ancient": {
                "id": "ancient",
                "name": "Ancient8",
                "slug": "ancient8",
                "type": "layer2",
                "hostChain": "Ethereum",
                "category": "Optimium",
                "provider": "OP Stack",
                "purposes": [
                    "Universal",
                    "Gaming"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": false,
                "badges": [
                    {
                        "id": "EVM",
                        "type": "VM",
                        "name": "EVM",
                        "description": "This project uses the Ethereum Virtual Machine to run its smart contracts and supports the Solidity programming language"
                    },
                    {
                        "id": "Celestia",
                        "type": "DA",
                        "name": "Celestia",
                        "description": "This project is posting its data to Celestia"
                    },
                    {
                        "id": "OPStack",
                        "type": "Stack",
                        "name": "Built on OP Stack",
                        "description": "The project is built on the OP Stack"
                    },
                    {
                        "id": "Conduit",
                        "type": "RaaS",
                        "name": "Conduit",
                        "description": "This project was deployed via the rollup-as-a-service provider Conduit"
                    }
                ],
                "stage": "Not applicable",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "Self sequence",
                        "sentiment": "good",
                        "description": "In the event of a sequencer failure, users can force transactions to be included in the project's chain by sending them to L1. There can be up to a 12h delay on this operation."
                    },
                    {
                        "name": "State Validation",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "Currently the system permits invalid state roots. More details in project overview."
                    },
                    {
                        "name": "Data Availability",
                        "value": "External",
                        "sentiment": "bad",
                        "description": "Proof construction and state derivation fully rely on data that is posted on Celestia. Sequencer tx roots are not checked against the Blobstream bridge data roots onchain, but L2 nodes can verify data availability by running a Celestia light client."
                    },
                    {
                        "name": "Exit Window",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "There is no window for users to exit in case of an unwanted regular upgrade since contracts are instantly upgradable."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Cannot withdraw",
                        "sentiment": "bad",
                        "description": "Only the whitelisted proposers can publish state roots on L1, so in the event of failure the withdrawals are frozen."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 2485514.2,
                        "ether": 450022.92,
                        "stablecoin": 0,
                        "associated": 2035491.28
                    },
                    "change7d": -0.16041680691307802,
                    "associatedTokens": [
                        "A8"
                    ]
                }
            },
            "soon": {
                "id": "soon",
                "name": "Soon Alpha Mainnet",
                "shortName": "Soon",
                "slug": "soon",
                "type": "layer2",
                "hostChain": "Ethereum",
                "category": "Optimium",
                "provider": "OP Stack",
                "purposes": [
                    "Universal"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": false,
                "badges": [
                    {
                        "id": "SolanaVM",
                        "type": "VM",
                        "name": "SolanaVM",
                        "description": "This project uses the Solana Virtual Machine to run its smart contracts"
                    },
                    {
                        "id": "EigenDA",
                        "type": "DA",
                        "name": "EigenDA",
                        "description": "This project is posting its data to EigenDA"
                    },
                    {
                        "id": "OPStack",
                        "type": "Stack",
                        "name": "Built on OP Stack",
                        "description": "The project is built on the OP Stack"
                    },
                    {
                        "id": "Superchain",
                        "type": "Infra",
                        "name": "Part of the Superchain",
                        "description": "The project is part of the Superchain, meaning it's included in the Superchain registry or uses the Superchain config"
                    }
                ],
                "stage": "Not applicable",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "Self sequence",
                        "sentiment": "good",
                        "description": "In the event of a sequencer failure, users can force transactions to be included in the project's chain by sending them to L1. There can be up to a 12h delay on this operation."
                    },
                    {
                        "name": "State Validation",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "Currently the system permits invalid state roots. More details in project overview."
                    },
                    {
                        "name": "Data Availability",
                        "value": "External",
                        "sentiment": "bad",
                        "description": "Proof construction and state derivation fully rely on data that is posted on EigenDA. Sequencer transaction data roots are not checked against the ServiceManager DA bridge data roots onchain."
                    },
                    {
                        "name": "Exit Window",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "There is no window for users to exit in case of an unwanted regular upgrade since contracts are instantly upgradable."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Cannot withdraw",
                        "sentiment": "bad",
                        "description": "Only the whitelisted proposers can publish state roots on L1, so in the event of failure the withdrawals are frozen."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 2299517.48,
                        "ether": 1801507.19,
                        "stablecoin": 497799.43,
                        "associated": 0
                    },
                    "change7d": 0.02207589365412055,
                    "associatedTokens": []
                }
            },
            "degen": {
                "id": "degen",
                "name": "Degen Chain",
                "slug": "degen",
                "type": "layer3",
                "hostChain": "Base",
                "category": "Optimium",
                "provider": "Arbitrum",
                "purposes": [
                    "Universal",
                    "Social"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": false,
                "badges": [
                    {
                        "id": "EVM",
                        "type": "VM",
                        "name": "EVM",
                        "description": "This project uses the Ethereum Virtual Machine to run its smart contracts and supports the Solidity programming language"
                    },
                    {
                        "id": "DAC",
                        "type": "DA",
                        "name": "Data Availability Committee",
                        "description": "There is a Data Availability Committee that provides/attests to data availability"
                    },
                    {
                        "id": "Orbit",
                        "type": "Stack",
                        "name": "Built on Arbitrum Orbit",
                        "description": "The project is built on Arbitrum Orbit"
                    },
                    {
                        "id": "Base",
                        "type": "L3ParentChain",
                        "name": "Built on top of Base",
                        "description": "The project has Base as its host chain"
                    },
                    {
                        "id": "Alchemy",
                        "type": "RaaS",
                        "name": "Alchemy",
                        "description": "This project was deployed via the rollup-as-a-service provider Alchemy"
                    }
                ],
                "stage": "Not applicable",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "Self sequence",
                        "sentiment": "good",
                        "description": "In the event of a sequencer failure, users can force transactions to be included in the project's chain by sending them to L1. There can be up to a 4d 12h delay on this operation."
                    },
                    {
                        "name": "State Validation",
                        "value": "Fraud proofs (INT)",
                        "sentiment": "bad",
                        "description": "Fraud proofs only allow 2 WHITELISTED actors watching the chain to prove that the state is incorrect. Interactive proofs (INT) require multiple transactions over time to resolve. The challenge protocol can be subject to delay attacks. There is a 5d 14h challenge period."
                    },
                    {
                        "name": "Data Availability",
                        "value": "External (DAC)",
                        "sentiment": "bad",
                        "description": "Proof construction relies fully on data that is NOT published onchain. There exists a Data Availability Committee (DAC) with a threshold of 2/3 that is tasked with protecting and supplying the data."
                    },
                    {
                        "name": "Exit Window",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "There is no window for users to exit in case of an unwanted regular upgrade since contracts are instantly upgradable."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Self propose",
                        "sentiment": "good",
                        "description": "Anyone can become a Proposer after 6d 15h of inactivity from the currently whitelisted Proposers."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 2286519.23,
                        "ether": 78318.91,
                        "stablecoin": 30626.72,
                        "associated": 2177573.6
                    },
                    "change7d": -0.034309489494127376,
                    "associatedTokens": [
                        "DEGEN"
                    ]
                }
            },
            "mint": {
                "id": "mint",
                "name": "Mint",
                "slug": "mint",
                "type": "layer2",
                "hostChain": "Ethereum",
                "category": "Optimistic Rollup",
                "provider": "OP Stack",
                "purposes": [
                    "Universal",
                    "NFT"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": false,
                "badges": [
                    {
                        "id": "EVM",
                        "type": "VM",
                        "name": "EVM",
                        "description": "This project uses the Ethereum Virtual Machine to run its smart contracts and supports the Solidity programming language"
                    },
                    {
                        "id": "EthereumBlobs",
                        "type": "DA",
                        "name": "Ethereum with blobs",
                        "description": "This project is posting its data to Ethereum as blobs"
                    },
                    {
                        "id": "OPStack",
                        "type": "Stack",
                        "name": "Built on OP Stack",
                        "description": "The project is built on the OP Stack"
                    },
                    {
                        "id": "Conduit",
                        "type": "RaaS",
                        "name": "Conduit",
                        "description": "This project was deployed via the rollup-as-a-service provider Conduit"
                    }
                ],
                "stage": "Stage 0",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "Self sequence",
                        "sentiment": "good",
                        "description": "In the event of a sequencer failure, users can force transactions to be included in the project's chain by sending them to L1. There can be up to a 12h delay on this operation."
                    },
                    {
                        "name": "State Validation",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "Currently the system permits invalid state roots. More details in project overview."
                    },
                    {
                        "name": "Data Availability",
                        "value": "Onchain",
                        "sentiment": "good",
                        "description": "All of the data needed for proof construction is published on Ethereum L1."
                    },
                    {
                        "name": "Exit Window",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "There is no window for users to exit in case of an unwanted regular upgrade since contracts are instantly upgradable."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Cannot withdraw",
                        "sentiment": "bad",
                        "description": "Only the whitelisted proposers can publish state roots on L1, so in the event of failure the withdrawals are frozen."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 1858470.76,
                        "ether": 1409153.74,
                        "stablecoin": 332416.63,
                        "associated": 0
                    },
                    "change7d": -0.13744419463890734,
                    "associatedTokens": []
                }
            },
            "hychain": {
                "id": "hychain",
                "name": "HYCHAIN",
                "slug": "hychain",
                "type": "layer2",
                "hostChain": "Ethereum",
                "category": "Optimium",
                "provider": "Arbitrum",
                "purposes": [
                    "Universal",
                    "Gaming"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": false,
                "badges": [
                    {
                        "id": "EVM",
                        "type": "VM",
                        "name": "EVM",
                        "description": "This project uses the Ethereum Virtual Machine to run its smart contracts and supports the Solidity programming language"
                    },
                    {
                        "id": "DAC",
                        "type": "DA",
                        "name": "Data Availability Committee",
                        "description": "There is a Data Availability Committee that provides/attests to data availability"
                    },
                    {
                        "id": "Orbit",
                        "type": "Stack",
                        "name": "Built on Arbitrum Orbit",
                        "description": "The project is built on Arbitrum Orbit"
                    },
                    {
                        "id": "Caldera",
                        "type": "RaaS",
                        "name": "Caldera",
                        "description": "This project was deployed via the rollup-as-a-service provider Caldera"
                    }
                ],
                "stage": "Not applicable",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "Self sequence",
                        "sentiment": "good",
                        "description": "In the event of a sequencer failure, users can force transactions to be included in the project's chain by sending them to L1. There can be up to a 1d delay on this operation."
                    },
                    {
                        "name": "State Validation",
                        "value": "Fraud proofs (INT)",
                        "sentiment": "bad",
                        "description": "Fraud proofs only allow 2 WHITELISTED actors watching the chain to prove that the state is incorrect. Interactive proofs (INT) require multiple transactions over time to resolve. The challenge protocol can be subject to delay attacks. There is a 6d 8h challenge period."
                    },
                    {
                        "name": "Data Availability",
                        "value": "External (DAC)",
                        "sentiment": "bad",
                        "description": "Proof construction relies fully on data that is NOT published onchain. There exists a Data Availability Committee (DAC) with a threshold of 1/1 that is tasked with protecting and supplying the data."
                    },
                    {
                        "name": "Exit Window",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "There is no window for users to exit in case of an unwanted regular upgrade since contracts are instantly upgradable."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Self propose",
                        "sentiment": "good",
                        "description": "Anyone can become a Proposer after 12d 17h of inactivity from the currently whitelisted Proposers."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 1574544.2,
                        "ether": 0,
                        "stablecoin": 0,
                        "associated": 1574544.2
                    },
                    "change7d": 0.053209661829389354,
                    "associatedTokens": [
                        "TOPIA"
                    ]
                }
            },
            "xai": {
                "id": "xai",
                "name": "Xai",
                "slug": "xai",
                "type": "layer3",
                "hostChain": "Arbitrum One",
                "category": "Optimium",
                "provider": "Arbitrum",
                "purposes": [
                    "Universal",
                    "Gaming"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": false,
                "badges": [
                    {
                        "id": "EVM",
                        "type": "VM",
                        "name": "EVM",
                        "description": "This project uses the Ethereum Virtual Machine to run its smart contracts and supports the Solidity programming language"
                    },
                    {
                        "id": "DAC",
                        "type": "DA",
                        "name": "Data Availability Committee",
                        "description": "There is a Data Availability Committee that provides/attests to data availability"
                    },
                    {
                        "id": "Orbit",
                        "type": "Stack",
                        "name": "Built on Arbitrum Orbit",
                        "description": "The project is built on Arbitrum Orbit"
                    },
                    {
                        "id": "Arbitrum",
                        "type": "L3ParentChain",
                        "name": "Built on top of Arbitrum",
                        "description": "The project has Arbitrum as its host chain"
                    }
                ],
                "stage": "Not applicable",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "Self sequence",
                        "sentiment": "good",
                        "description": "In the event of a sequencer failure, users can force transactions to be included in the project's chain by sending them to L1. There can be up to a 2d delay on this operation."
                    },
                    {
                        "name": "State Validation",
                        "value": "Fraud proofs (INT)",
                        "sentiment": "bad",
                        "description": "Fraud proofs only allow 2 WHITELISTED actors watching the chain to prove that the state is incorrect. Interactive proofs (INT) require multiple transactions over time to resolve. The challenge protocol can be subject to delay attacks. There is a 6d 8h challenge period."
                    },
                    {
                        "name": "Data Availability",
                        "value": "External (DAC)",
                        "sentiment": "bad",
                        "description": "Proof construction relies fully on data that is NOT published onchain. There exists a Data Availability Committee (DAC) with a threshold of 4/6 that is tasked with protecting and supplying the data."
                    },
                    {
                        "name": "Exit Window",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "There is no window for users to exit in case of an unwanted regular upgrade since contracts are instantly upgradable."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Self propose",
                        "sentiment": "good",
                        "description": "Anyone can become a Proposer after 12d 17h of inactivity from the currently whitelisted Proposers."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 1314002,
                        "ether": 119916.3,
                        "stablecoin": 112008.12,
                        "associated": 1082046.01
                    },
                    "change7d": -0.09202288452641028,
                    "associatedTokens": [
                        "XAI"
                    ]
                }
            },
            "redstone": {
                "id": "redstone",
                "name": "Redstone",
                "slug": "redstone",
                "type": "layer2",
                "hostChain": "Ethereum",
                "category": "Optimium",
                "provider": "OP Stack",
                "purposes": [
                    "Universal",
                    "Gaming"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": false,
                "badges": [
                    {
                        "id": "EVM",
                        "type": "VM",
                        "name": "EVM",
                        "description": "This project uses the Ethereum Virtual Machine to run its smart contracts and supports the Solidity programming language"
                    },
                    {
                        "id": "DAC",
                        "type": "DA",
                        "name": "Data Availability Committee",
                        "description": "There is a Data Availability Committee that provides/attests to data availability"
                    },
                    {
                        "id": "OPStack",
                        "type": "Stack",
                        "name": "Built on OP Stack",
                        "description": "The project is built on the OP Stack"
                    },
                    {
                        "id": "Superchain",
                        "type": "Infra",
                        "name": "Part of the Superchain",
                        "description": "The project is part of the Superchain, meaning it's included in the Superchain registry or uses the Superchain config"
                    }
                ],
                "stage": "Not applicable",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "Self sequence",
                        "sentiment": "good",
                        "description": "In the event of a sequencer failure, users can force transactions to be included in the project's chain by sending them to L1. There can be up to a 12h delay on this operation."
                    },
                    {
                        "name": "State Validation",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "Currently the system permits invalid state roots. More details in project overview."
                    },
                    {
                        "name": "Data Availability",
                        "value": "External",
                        "sentiment": "bad",
                        "description": "Proof construction and state derivation rely fully on data that is NOT published onchain. A custom data availability (DA) provider without attestations is used, but data unavailability can be challenged."
                    },
                    {
                        "name": "Exit Window",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "There is no window for users to exit in case of an unwanted regular upgrade since contracts are instantly upgradable."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Cannot withdraw",
                        "sentiment": "bad",
                        "description": "Only the whitelisted proposers can publish state roots on L1, so in the event of failure the withdrawals are frozen."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 1179941.62,
                        "ether": 1150820.3,
                        "stablecoin": 28968.21,
                        "associated": 0
                    },
                    "change7d": -0.10706822554235729,
                    "associatedTokens": []
                }
            },
            "brine": {
                "id": "brine",
                "name": "tanX",
                "slug": "tanx",
                "type": "layer2",
                "hostChain": "Ethereum",
                "category": "Validium",
                "provider": "StarkEx",
                "purposes": [
                    "Exchange"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": false,
                "badges": [
                    {
                        "id": "AppChain",
                        "type": "VM",
                        "name": "Application-specific chain",
                        "description": "This project is built to operate a specific application"
                    },
                    {
                        "id": "DAC",
                        "type": "DA",
                        "name": "Data Availability Committee",
                        "description": "There is a Data Availability Committee that provides/attests to data availability"
                    },
                    {
                        "id": "StarkEx",
                        "type": "Stack",
                        "name": "StarkEx",
                        "description": "This project was deployed utilizing the StarkEx technology from StarkWare"
                    },
                    {
                        "id": "SHARP",
                        "type": "Infra",
                        "name": "Uses SHARP",
                        "description": "The project uses a shared prover contract - SHARP"
                    }
                ],
                "stage": "Not applicable",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "Force via L1",
                        "sentiment": "good",
                        "description": "Users can force the sequencer to include a withdrawal transaction by submitting a request through L1. If the sequencer censors or is down for  for more than 7d, users can use the exit hatch to withdraw their funds."
                    },
                    {
                        "name": "State Validation",
                        "value": "ZK proofs (ST)",
                        "sentiment": "good",
                        "description": "STARKs are zero knowledge proofs that ensure state correctness."
                    },
                    {
                        "name": "Data Availability",
                        "value": "External (DAC)",
                        "sentiment": "bad",
                        "description": "Proof construction relies fully on data that is NOT published onchain. There exists a Data Availability Committee (DAC) with a threshold of 2/4 that is tasked with protecting and supplying the data."
                    },
                    {
                        "name": "Exit Window",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "There is no window for users to exit in case of an unwanted regular upgrade since contracts are instantly upgradable."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Use escape hatch",
                        "sentiment": "good",
                        "description": "Users are able to trustlessly exit by submitting a Merkle proof of funds."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 1151152.73,
                        "ether": 112022.8,
                        "stablecoin": 837103.99,
                        "associated": 0
                    },
                    "change7d": -0.06684152541554012,
                    "associatedTokens": []
                }
            },
            "alephzero": {
                "id": "alephzero",
                "name": "Aleph Zero EVM",
                "slug": "aleph-zero",
                "type": "layer2",
                "hostChain": "Ethereum",
                "category": "Optimium",
                "provider": "Arbitrum",
                "purposes": [
                    "Universal",
                    "Privacy"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": false,
                "badges": [
                    {
                        "id": "EVM",
                        "type": "VM",
                        "name": "EVM",
                        "description": "This project uses the Ethereum Virtual Machine to run its smart contracts and supports the Solidity programming language"
                    },
                    {
                        "id": "DAC",
                        "type": "DA",
                        "name": "Data Availability Committee",
                        "description": "There is a Data Availability Committee that provides/attests to data availability"
                    },
                    {
                        "id": "Orbit",
                        "type": "Stack",
                        "name": "Built on Arbitrum Orbit",
                        "description": "The project is built on Arbitrum Orbit"
                    },
                    {
                        "id": "Gelato",
                        "type": "RaaS",
                        "name": "Gelato",
                        "description": "This project was deployed via the rollup-as-a-service provider Gelato"
                    }
                ],
                "stage": "Not applicable",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "Self sequence",
                        "sentiment": "good",
                        "description": "In the event of a sequencer failure, users can force transactions to be included in the project's chain by sending them to L1. There can be up to a 4d delay on this operation."
                    },
                    {
                        "name": "State Validation",
                        "value": "Fraud proofs (INT)",
                        "sentiment": "bad",
                        "description": "Fraud proofs allow 6 WHITELISTED actors watching the chain to prove that the state is incorrect. There are fewer than 5 Challengers external to the Operator among these. Interactive proofs (INT) require multiple transactions over time to resolve. There is a 6d 8h challenge period."
                    },
                    {
                        "name": "Data Availability",
                        "value": "External (DAC)",
                        "sentiment": "bad",
                        "description": "Proof construction relies fully on data that is NOT published onchain. There exists a Data Availability Committee (DAC) with a threshold of 1/2 that is tasked with protecting and supplying the data."
                    },
                    {
                        "name": "Exit Window",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "There is no window for users to exit in case of an unwanted regular upgrade since contracts are instantly upgradable."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Self propose",
                        "sentiment": "good",
                        "description": "Anyone can become a Proposer after 12d 17h of inactivity from the currently whitelisted Proposers."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 1129491.03,
                        "ether": 76878.54,
                        "stablecoin": 61781.18,
                        "associated": 990831.23
                    },
                    "change7d": -0.08581350981683833,
                    "associatedTokens": [
                        "AZERO"
                    ]
                }
            },
            "shape": {
                "id": "shape",
                "name": "Shape",
                "slug": "shape",
                "type": "layer2",
                "hostChain": "Ethereum",
                "category": "Optimistic Rollup",
                "provider": "OP Stack",
                "purposes": [
                    "Universal"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": false,
                "badges": [
                    {
                        "id": "EVM",
                        "type": "VM",
                        "name": "EVM",
                        "description": "This project uses the Ethereum Virtual Machine to run its smart contracts and supports the Solidity programming language"
                    },
                    {
                        "id": "EthereumBlobs",
                        "type": "DA",
                        "name": "Ethereum with blobs",
                        "description": "This project is posting its data to Ethereum as blobs"
                    },
                    {
                        "id": "OPStack",
                        "type": "Stack",
                        "name": "Built on OP Stack",
                        "description": "The project is built on the OP Stack"
                    },
                    {
                        "id": "Superchain",
                        "type": "Infra",
                        "name": "Part of the Superchain",
                        "description": "The project is part of the Superchain, meaning it's included in the Superchain registry or uses the Superchain config"
                    },
                    {
                        "id": "Alchemy",
                        "type": "RaaS",
                        "name": "Alchemy",
                        "description": "This project was deployed via the rollup-as-a-service provider Alchemy"
                    }
                ],
                "stage": "Stage 0",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "Self sequence",
                        "sentiment": "good",
                        "description": "In the event of a sequencer failure, users can force transactions to be included in the project's chain by sending them to L1. There can be up to a 12h delay on this operation."
                    },
                    {
                        "name": "State Validation",
                        "value": "Fraud proofs (INT)",
                        "sentiment": "bad",
                        "description": "Fraud proofs allow actors watching the chain to prove that the state is incorrect. Interactive proofs (INT) require multiple transactions over time to resolve. Only one entity is currently allowed to propose and submit challenges, as only permissioned games are currently allowed."
                    },
                    {
                        "name": "Data Availability",
                        "value": "Onchain",
                        "sentiment": "good",
                        "description": "All of the data needed for proof construction is published on Ethereum L1."
                    },
                    {
                        "name": "Exit Window",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "There is no window for users to exit in case of an unwanted regular upgrade since contracts are instantly upgradable."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Cannot withdraw",
                        "sentiment": "bad",
                        "description": "Only the whitelisted proposers can publish state roots on L1, so in the event of failure the withdrawals are frozen."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 1025257.41,
                        "ether": 1025257.41,
                        "stablecoin": 0,
                        "associated": 0
                    },
                    "change7d": -0.10627032806245118,
                    "associatedTokens": []
                }
            },
            "fluence": {
                "id": "fluence",
                "name": "Fluence",
                "slug": "fluence",
                "type": "layer2",
                "hostChain": "Ethereum",
                "category": "Optimium",
                "provider": "Arbitrum",
                "purposes": [
                    "Universal"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": false,
                "badges": [
                    {
                        "id": "EVM",
                        "type": "VM",
                        "name": "EVM",
                        "description": "This project uses the Ethereum Virtual Machine to run its smart contracts and supports the Solidity programming language"
                    },
                    {
                        "id": "DAC",
                        "type": "DA",
                        "name": "Data Availability Committee",
                        "description": "There is a Data Availability Committee that provides/attests to data availability"
                    },
                    {
                        "id": "Orbit",
                        "type": "Stack",
                        "name": "Built on Arbitrum Orbit",
                        "description": "The project is built on Arbitrum Orbit"
                    },
                    {
                        "id": "Gelato",
                        "type": "RaaS",
                        "name": "Gelato",
                        "description": "This project was deployed via the rollup-as-a-service provider Gelato"
                    }
                ],
                "stage": "Not applicable",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "Self sequence",
                        "sentiment": "good",
                        "description": "In the event of a sequencer failure, users can force transactions to be included in the project's chain by sending them to L1. There can be up to a 40d delay on this operation."
                    },
                    {
                        "name": "State Validation",
                        "value": "Fraud proofs (INT)",
                        "sentiment": "bad",
                        "description": "Fraud proofs allow 5 WHITELISTED actors watching the chain to prove that the state is incorrect. There are fewer than 5 Challengers external to the Operator among these. Interactive proofs (INT) require multiple transactions over time to resolve. There is a 6d 8h challenge period."
                    },
                    {
                        "name": "Data Availability",
                        "value": "External (DAC)",
                        "sentiment": "bad",
                        "description": "Proof construction relies fully on data that is NOT published onchain. There exists a Data Availability Committee (DAC) with a threshold of 1/2 that is tasked with protecting and supplying the data."
                    },
                    {
                        "name": "Exit Window",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "There is no window for users to exit in case of an unwanted regular upgrade since contracts are instantly upgradable."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Self propose",
                        "sentiment": "good",
                        "description": "Anyone can become a Proposer after 12d 17h of inactivity from the currently whitelisted Proposers."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 1018212.21,
                        "ether": 0,
                        "stablecoin": 27633.03,
                        "associated": 990579.18
                    },
                    "change7d": -0.0157267140282491,
                    "associatedTokens": [
                        "FLT"
                    ]
                }
            },
            "facet": {
                "id": "facet",
                "name": "Facet",
                "slug": "facet",
                "type": "layer2",
                "hostChain": "Ethereum",
                "category": "Optimistic Rollup",
                "provider": "OP Stack",
                "purposes": [
                    "Universal"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": false,
                "badges": [
                    {
                        "id": "EVM",
                        "type": "VM",
                        "name": "EVM",
                        "description": "This project uses the Ethereum Virtual Machine to run its smart contracts and supports the Solidity programming language"
                    },
                    {
                        "id": "EthereumCalldata",
                        "type": "DA",
                        "name": "Ethereum with calldata",
                        "description": "This project is posting its data to Ethereum as calldata"
                    },
                    {
                        "id": "OPStack",
                        "type": "Stack",
                        "name": "Built on OP Stack",
                        "description": "The project is built on the OP Stack"
                    },
                    {
                        "id": "Superchain",
                        "type": "Infra",
                        "name": "Part of the Superchain",
                        "description": "The project is part of the Superchain, meaning it's included in the Superchain registry or uses the Superchain config"
                    },
                    {
                        "id": "BasedSequencing",
                        "type": "Other",
                        "name": "Based Sequencing",
                        "description": "This project is ordering its transactions through Ethereum block proposers"
                    }
                ],
                "stage": "Stage 0",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "Self sequence",
                        "sentiment": "good",
                        "description": "Users can self sequence transactions by sending them on L1. There is no privileged operator."
                    },
                    {
                        "name": "State Validation",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "Currently the system permits invalid state roots. More details in project overview."
                    },
                    {
                        "name": "Data Availability",
                        "value": "Onchain",
                        "sentiment": "good",
                        "description": "All of the data needed for proof construction is published on Ethereum L1."
                    },
                    {
                        "name": "Exit Window",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "There is no window for users to exit in case of an unwanted regular upgrade since contracts are instantly upgradable."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Cannot withdraw",
                        "sentiment": "bad",
                        "description": "Only the whitelisted proposers can publish state roots on L1, so in the event of failure the withdrawals are frozen."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 935290.28,
                        "ether": 935290.28,
                        "stablecoin": 0,
                        "associated": 0
                    },
                    "change7d": -0.11984835148508521,
                    "associatedTokens": []
                }
            },
            "superposition": {
                "id": "superposition",
                "name": "Superposition",
                "slug": "superposition",
                "type": "layer3",
                "hostChain": "Arbitrum One",
                "category": "Optimium",
                "provider": "Arbitrum",
                "purposes": [
                    "Universal"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": true,
                "badges": [],
                "stage": "Not applicable",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "Under Review",
                        "sentiment": "UnderReview",
                        "description": "This risk is currently under review."
                    },
                    {
                        "name": "State Validation",
                        "value": "Under Review",
                        "sentiment": "UnderReview",
                        "description": "This risk is currently under review."
                    },
                    {
                        "name": "Data Availability",
                        "value": "Under Review",
                        "sentiment": "UnderReview",
                        "description": "This risk is currently under review."
                    },
                    {
                        "name": "Exit Window",
                        "value": "Under Review",
                        "sentiment": "UnderReview",
                        "description": "This risk is currently under review."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Under Review",
                        "sentiment": "UnderReview",
                        "description": "This risk is currently under review."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 840205.32,
                        "ether": 731331.07,
                        "stablecoin": 35.02,
                        "associated": 0
                    },
                    "change7d": 0.0044171000534038996,
                    "associatedTokens": []
                }
            },
            "metal": {
                "id": "metal",
                "name": "Metal",
                "slug": "metal",
                "type": "layer2",
                "hostChain": "Ethereum",
                "category": "Optimistic Rollup",
                "provider": "OP Stack",
                "purposes": [
                    "Universal"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": false,
                "badges": [
                    {
                        "id": "EVM",
                        "type": "VM",
                        "name": "EVM",
                        "description": "This project uses the Ethereum Virtual Machine to run its smart contracts and supports the Solidity programming language"
                    },
                    {
                        "id": "EthereumBlobs",
                        "type": "DA",
                        "name": "Ethereum with blobs",
                        "description": "This project is posting its data to Ethereum as blobs"
                    },
                    {
                        "id": "OPStack",
                        "type": "Stack",
                        "name": "Built on OP Stack",
                        "description": "The project is built on the OP Stack"
                    },
                    {
                        "id": "Superchain",
                        "type": "Infra",
                        "name": "Part of the Superchain",
                        "description": "The project is part of the Superchain, meaning it's included in the Superchain registry or uses the Superchain config"
                    },
                    {
                        "id": "Conduit",
                        "type": "RaaS",
                        "name": "Conduit",
                        "description": "This project was deployed via the rollup-as-a-service provider Conduit"
                    }
                ],
                "stage": "Stage 0",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "Self sequence",
                        "sentiment": "good",
                        "description": "In the event of a sequencer failure, users can force transactions to be included in the project's chain by sending them to L1. There can be up to a 12h delay on this operation."
                    },
                    {
                        "name": "State Validation",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "Currently the system permits invalid state roots. More details in project overview."
                    },
                    {
                        "name": "Data Availability",
                        "value": "Onchain",
                        "sentiment": "good",
                        "description": "All of the data needed for proof construction is published on Ethereum L1."
                    },
                    {
                        "name": "Exit Window",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "There is no window for users to exit in case of an unwanted regular upgrade since contracts are instantly upgradable."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Cannot withdraw",
                        "sentiment": "bad",
                        "description": "Only the whitelisted proposers can publish state roots on L1, so in the event of failure the withdrawals are frozen."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 658944.45,
                        "ether": 657891.33,
                        "stablecoin": 1053.12,
                        "associated": 0
                    },
                    "change7d": -0.051466894080455794,
                    "associatedTokens": [
                        "MTL"
                    ]
                }
            },
            "astarzkevm": {
                "id": "astarzkevm",
                "name": "Astar zkEVM",
                "slug": "astarzkevm",
                "type": "layer2",
                "hostChain": "Ethereum",
                "category": "Validium",
                "provider": "Polygon",
                "purposes": [
                    "Universal"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": false,
                "badges": [
                    {
                        "id": "EVM",
                        "type": "VM",
                        "name": "EVM",
                        "description": "This project uses the Ethereum Virtual Machine to run its smart contracts and supports the Solidity programming language"
                    },
                    {
                        "id": "DAC",
                        "type": "DA",
                        "name": "Data Availability Committee",
                        "description": "There is a Data Availability Committee that provides/attests to data availability"
                    },
                    {
                        "id": "PolygonCDK",
                        "type": "Stack",
                        "name": "Built on the Polygon CDK stack",
                        "description": "The project is built on the Polygon CDK stack"
                    },
                    {
                        "id": "AggLayer",
                        "type": "Infra",
                        "name": "Part of the AggLayer",
                        "description": "The project is part of the AggLayer"
                    },
                    {
                        "id": "Gelato",
                        "type": "RaaS",
                        "name": "Gelato",
                        "description": "This project was deployed via the rollup-as-a-service provider Gelato"
                    }
                ],
                "stage": "Not applicable",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "No mechanism",
                        "sentiment": "bad",
                        "description": "There is no mechanism to have transactions be included if the sequencer is down or censoring. Although the functionality exists in the code, it is currently disabled."
                    },
                    {
                        "name": "State Validation",
                        "value": "ZK proofs (ST, SN)",
                        "sentiment": "good",
                        "description": "STARKs and SNARKs are zero knowledge proofs that ensure state correctness. STARKs proofs are wrapped in SNARKs proofs for efficiency. SNARKs require a trusted setup."
                    },
                    {
                        "name": "Data Availability",
                        "value": "External (DAC)",
                        "sentiment": "bad",
                        "description": "Proof construction relies fully on data that is NOT published onchain. There exists a Data Availability Committee (DAC) with a threshold of 3/5 that is tasked with protecting and supplying the data."
                    },
                    {
                        "name": "Exit Window",
                        "value": "None",
                        "sentiment": "bad",
                        "warning": {
                            "value": "The Security Council can remove the delay on upgrades.",
                            "sentiment": "bad"
                        },
                        "description": "Even though there is a 3d Timelock for upgrades, forced transactions are disabled."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Cannot withdraw",
                        "sentiment": "bad",
                        "description": "Only the whitelisted proposers can publish state roots on L1, so in the event of failure the withdrawals are frozen."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 657717.03,
                        "ether": 597131.45,
                        "stablecoin": 60334.63,
                        "associated": 0
                    },
                    "change7d": -0.1467419065921024,
                    "associatedTokens": []
                }
            },
            "funki": {
                "id": "funki",
                "name": "Funki",
                "slug": "funki",
                "type": "layer2",
                "hostChain": "Ethereum",
                "category": "Optimium",
                "provider": "OP Stack",
                "purposes": [
                    "Universal"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": true,
                "badges": [],
                "stage": "Not applicable",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "Under Review",
                        "sentiment": "UnderReview",
                        "description": "This risk is currently under review."
                    },
                    {
                        "name": "State Validation",
                        "value": "Under Review",
                        "sentiment": "UnderReview",
                        "description": "This risk is currently under review."
                    },
                    {
                        "name": "Data Availability",
                        "value": "Under Review",
                        "sentiment": "UnderReview",
                        "description": "This risk is currently under review."
                    },
                    {
                        "name": "Exit Window",
                        "value": "Under Review",
                        "sentiment": "UnderReview",
                        "description": "This risk is currently under review."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Under Review",
                        "sentiment": "UnderReview",
                        "description": "This risk is currently under review."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 600703.53,
                        "ether": 172695.98,
                        "stablecoin": 66.38,
                        "associated": 0
                    },
                    "change7d": -0.1291904798159803,
                    "associatedTokens": []
                }
            },
            "zkspace": {
                "id": "zkspace",
                "name": "ZKBase",
                "slug": "zkspace",
                "type": "layer2",
                "hostChain": "Ethereum",
                "category": "ZK Rollup",
                "provider": "ZKsync Lite",
                "purposes": [
                    "NFT",
                    "Exchange",
                    "Payments"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": false,
                "badges": [
                    {
                        "id": "AppChain",
                        "type": "VM",
                        "name": "Application-specific chain",
                        "description": "This project is built to operate a specific application"
                    },
                    {
                        "id": "EthereumCalldata",
                        "type": "DA",
                        "name": "Ethereum with calldata",
                        "description": "This project is posting its data to Ethereum as calldata"
                    },
                    {
                        "id": "ZKsyncLiteFork",
                        "type": "Fork",
                        "name": "Fork of ZKsync Lite",
                        "description": "The project is fork of ZKsync Lite"
                    }
                ],
                "stage": "Stage 0",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "Force via L1",
                        "sentiment": "good",
                        "description": "Users can force the sequencer to include a withdrawal transaction by submitting a request through L1. If the sequencer censors or is down for  for more than 3d, users can use the exit hatch to withdraw their funds."
                    },
                    {
                        "name": "State Validation",
                        "value": "ZK proofs (SN)",
                        "sentiment": "good",
                        "description": "SNARKs are zero knowledge proofs that ensure state correctness, but require trusted setup."
                    },
                    {
                        "name": "Data Availability",
                        "value": "Onchain",
                        "sentiment": "good",
                        "description": "All of the data needed for proof construction is published on Ethereum L1."
                    },
                    {
                        "name": "Exit Window",
                        "value": "5d",
                        "sentiment": "bad",
                        "description": "Users have 5d to exit funds in case of an unwanted regular upgrade. There is a 8d delay before a regular upgrade is applied, and withdrawals can take up to 3d to be processed."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Use escape hatch",
                        "sentiment": "good",
                        "description": "Users are able to trustlessly exit by submitting a zero knowledge proof of funds."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 596107.74,
                        "ether": 96508.75,
                        "stablecoin": 22731.84,
                        "associated": 395710.52
                    },
                    "change7d": 0.08650662145283028,
                    "associatedTokens": [
                        "ZKS"
                    ]
                }
            },
            "rari": {
                "id": "rari",
                "name": "RARI Chain",
                "slug": "rari",
                "type": "layer3",
                "hostChain": "Arbitrum One",
                "category": "Optimium",
                "provider": "Arbitrum",
                "purposes": [
                    "Universal",
                    "NFT"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": false,
                "badges": [
                    {
                        "id": "EVM",
                        "type": "VM",
                        "name": "EVM",
                        "description": "This project uses the Ethereum Virtual Machine to run its smart contracts and supports the Solidity programming language"
                    },
                    {
                        "id": "CelestiaBlobstream",
                        "type": "DA",
                        "name": "Celestia with Blobstream",
                        "description": "This project utilizes Celestia and has Blobstream enabled, facilitating the bridging of data availability commitments between Celestia and Ethereum."
                    },
                    {
                        "id": "Orbit",
                        "type": "Stack",
                        "name": "Built on Arbitrum Orbit",
                        "description": "The project is built on Arbitrum Orbit"
                    },
                    {
                        "id": "Arbitrum",
                        "type": "L3ParentChain",
                        "name": "Built on top of Arbitrum",
                        "description": "The project has Arbitrum as its host chain"
                    },
                    {
                        "id": "EspressoPreconfs",
                        "type": "Other",
                        "name": "Espresso Preconfs",
                        "description": "The project integrates with Espresso preconfirmations. The chain batch poster publishes blocks to Espresso Network and runs in a Trusted Execution Environment (TEE) programmed to verify that only Espresso-validated batches reach the host chain."
                    },
                    {
                        "id": "Caldera",
                        "type": "RaaS",
                        "name": "Caldera",
                        "description": "This project was deployed via the rollup-as-a-service provider Caldera"
                    }
                ],
                "stage": "Not applicable",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "Self sequence",
                        "sentiment": "good",
                        "description": "In the event of a sequencer failure, users can force transactions to be included in the project's chain by sending them to L1. There can be up to a 2d delay on this operation."
                    },
                    {
                        "name": "State Validation",
                        "value": "Fraud proofs (INT)",
                        "sentiment": "bad",
                        "description": "No actor outside of the single Proposer can submit fraud proofs. Interactive proofs (INT) require multiple transactions over time to resolve. The challenge protocol can be subject to delay attacks. There is a 6d 8h challenge period."
                    },
                    {
                        "name": "Data Availability",
                        "value": "External",
                        "sentiment": "warning",
                        "description": "Proof construction and state derivation fully rely on data that is posted on Celestia. Sequencer tx roots are checked against the Blobstream bridge data roots, signed off by Celestia validators."
                    },
                    {
                        "name": "Exit Window",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "There is no window for users to exit in case of an unwanted regular upgrade since contracts are instantly upgradable."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Self propose",
                        "sentiment": "good",
                        "description": "Anyone can become a Proposer after 12d 17h of inactivity from the currently whitelisted Proposers."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 588478.95,
                        "ether": 540860.11,
                        "stablecoin": 47553.29,
                        "associated": 0
                    },
                    "change7d": -0.09830860853576351,
                    "associatedTokens": []
                }
            },
            "popapex": {
                "id": "popapex",
                "name": "Proof of Play Apex",
                "shortName": "PoP Apex",
                "slug": "popapex",
                "type": "layer3",
                "hostChain": "Arbitrum One",
                "category": "Optimium",
                "provider": "Arbitrum",
                "purposes": [
                    "Universal",
                    "Gaming"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": false,
                "badges": [
                    {
                        "id": "EVM",
                        "type": "VM",
                        "name": "EVM",
                        "description": "This project uses the Ethereum Virtual Machine to run its smart contracts and supports the Solidity programming language"
                    },
                    {
                        "id": "DAC",
                        "type": "DA",
                        "name": "Data Availability Committee",
                        "description": "There is a Data Availability Committee that provides/attests to data availability"
                    },
                    {
                        "id": "Orbit",
                        "type": "Stack",
                        "name": "Built on Arbitrum Orbit",
                        "description": "The project is built on Arbitrum Orbit"
                    },
                    {
                        "id": "Arbitrum",
                        "type": "L3ParentChain",
                        "name": "Built on top of Arbitrum",
                        "description": "The project has Arbitrum as its host chain"
                    },
                    {
                        "id": "Conduit",
                        "type": "RaaS",
                        "name": "Conduit",
                        "description": "This project was deployed via the rollup-as-a-service provider Conduit"
                    }
                ],
                "stage": "Not applicable",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "Self sequence",
                        "sentiment": "good",
                        "description": "In the event of a sequencer failure, users can force transactions to be included in the project's chain by sending them to L1. There can be up to a 1001d delay on this operation."
                    },
                    {
                        "name": "State Validation",
                        "value": "Fraud proofs (INT)",
                        "sentiment": "bad",
                        "description": "No actor outside of the single Proposer can submit fraud proofs. Interactive proofs (INT) require multiple transactions over time to resolve. The challenge protocol can be subject to delay attacks. There is a 5d 14h challenge period."
                    },
                    {
                        "name": "Data Availability",
                        "value": "External (DAC)",
                        "sentiment": "bad",
                        "description": "Proof construction relies fully on data that is NOT published onchain. There exists a Data Availability Committee (DAC) with a threshold of 1/1 that is tasked with protecting and supplying the data."
                    },
                    {
                        "name": "Exit Window",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "There is no window for users to exit in case of an unwanted regular upgrade since contracts are instantly upgradable."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Self propose",
                        "sentiment": "good",
                        "description": "Anyone can become a Proposer after 11d 23h of inactivity from the currently whitelisted Proposers."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 588340.81,
                        "ether": 588340.81,
                        "stablecoin": 0,
                        "associated": 0
                    },
                    "change7d": -0.10940912190621366,
                    "associatedTokens": []
                }
            },
            "dbk": {
                "id": "dbk",
                "name": "DeBank Chain",
                "slug": "dbk",
                "type": "layer2",
                "hostChain": "Ethereum",
                "category": "Optimistic Rollup",
                "provider": "OP Stack",
                "purposes": [
                    "Universal"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": false,
                "badges": [
                    {
                        "id": "EVM",
                        "type": "VM",
                        "name": "EVM",
                        "description": "This project uses the Ethereum Virtual Machine to run its smart contracts and supports the Solidity programming language"
                    },
                    {
                        "id": "EthereumBlobs",
                        "type": "DA",
                        "name": "Ethereum with blobs",
                        "description": "This project is posting its data to Ethereum as blobs"
                    },
                    {
                        "id": "OPStack",
                        "type": "Stack",
                        "name": "Built on OP Stack",
                        "description": "The project is built on the OP Stack"
                    },
                    {
                        "id": "Superchain",
                        "type": "Infra",
                        "name": "Part of the Superchain",
                        "description": "The project is part of the Superchain, meaning it's included in the Superchain registry or uses the Superchain config"
                    }
                ],
                "stage": "Stage 0",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "Self sequence",
                        "sentiment": "good",
                        "description": "In the event of a sequencer failure, users can force transactions to be included in the project's chain by sending them to L1. There can be up to a 12h delay on this operation."
                    },
                    {
                        "name": "State Validation",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "Currently the system permits invalid state roots. More details in project overview."
                    },
                    {
                        "name": "Data Availability",
                        "value": "Onchain",
                        "sentiment": "good",
                        "description": "All of the data needed for proof construction is published on Ethereum L1."
                    },
                    {
                        "name": "Exit Window",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "There is no window for users to exit in case of an unwanted regular upgrade since contracts are instantly upgradable."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Cannot withdraw",
                        "sentiment": "bad",
                        "description": "Only the whitelisted proposers can publish state roots on L1, so in the event of failure the withdrawals are frozen."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 582124.6,
                        "ether": 582124.6,
                        "stablecoin": 0,
                        "associated": 0
                    },
                    "change7d": -0.11768720197150762,
                    "associatedTokens": []
                }
            },
            "alienx": {
                "id": "alienx",
                "name": "AlienX",
                "slug": "alienx",
                "type": "layer2",
                "hostChain": "Ethereum",
                "category": "Optimium",
                "provider": "Arbitrum",
                "purposes": [
                    "Universal",
                    "Gaming",
                    "AI",
                    "NFT"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": false,
                "badges": [
                    {
                        "id": "EVM",
                        "type": "VM",
                        "name": "EVM",
                        "description": "This project uses the Ethereum Virtual Machine to run its smart contracts and supports the Solidity programming language"
                    },
                    {
                        "id": "DAC",
                        "type": "DA",
                        "name": "Data Availability Committee",
                        "description": "There is a Data Availability Committee that provides/attests to data availability"
                    },
                    {
                        "id": "Orbit",
                        "type": "Stack",
                        "name": "Built on Arbitrum Orbit",
                        "description": "The project is built on Arbitrum Orbit"
                    },
                    {
                        "id": "Caldera",
                        "type": "RaaS",
                        "name": "Caldera",
                        "description": "This project was deployed via the rollup-as-a-service provider Caldera"
                    }
                ],
                "stage": "Not applicable",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "Self sequence",
                        "sentiment": "good",
                        "description": "In the event of a sequencer failure, users can force transactions to be included in the project's chain by sending them to L1. There can be up to a 1d delay on this operation."
                    },
                    {
                        "name": "State Validation",
                        "value": "Fraud proofs (INT)",
                        "sentiment": "bad",
                        "description": "No actor outside of the single Proposer can submit fraud proofs. Interactive proofs (INT) require multiple transactions over time to resolve. The challenge protocol can be subject to delay attacks. There is a 6d 8h challenge period."
                    },
                    {
                        "name": "Data Availability",
                        "value": "External (DAC)",
                        "sentiment": "bad",
                        "description": "Proof construction relies fully on data that is NOT published onchain. There exists a Data Availability Committee (DAC) with a threshold of 1/1 that is tasked with protecting and supplying the data."
                    },
                    {
                        "name": "Exit Window",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "There is no window for users to exit in case of an unwanted regular upgrade since contracts are instantly upgradable."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Self propose",
                        "sentiment": "good",
                        "description": "Anyone can become a Proposer after 12d 17h of inactivity from the currently whitelisted Proposers."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 561404.6,
                        "ether": 535264.7,
                        "stablecoin": 24433.89,
                        "associated": 0
                    },
                    "change7d": -0.10407078874350617,
                    "associatedTokens": []
                }
            },
            "ham": {
                "id": "ham",
                "name": "Ham",
                "slug": "ham",
                "type": "layer3",
                "hostChain": "Base",
                "category": "Optimium",
                "provider": "OP Stack",
                "purposes": [
                    "Universal",
                    "Social"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": false,
                "badges": [
                    {
                        "id": "EVM",
                        "type": "VM",
                        "name": "EVM",
                        "description": "This project uses the Ethereum Virtual Machine to run its smart contracts and supports the Solidity programming language"
                    },
                    {
                        "id": "Celestia",
                        "type": "DA",
                        "name": "Celestia",
                        "description": "This project is posting its data to Celestia"
                    },
                    {
                        "id": "OPStack",
                        "type": "Stack",
                        "name": "Built on OP Stack",
                        "description": "The project is built on the OP Stack"
                    },
                    {
                        "id": "Superchain",
                        "type": "Infra",
                        "name": "Part of the Superchain",
                        "description": "The project is part of the Superchain, meaning it's included in the Superchain registry or uses the Superchain config"
                    },
                    {
                        "id": "Base",
                        "type": "L3ParentChain",
                        "name": "Built on top of Base",
                        "description": "The project has Base as its host chain"
                    },
                    {
                        "id": "Caldera",
                        "type": "RaaS",
                        "name": "Caldera",
                        "description": "This project was deployed via the rollup-as-a-service provider Caldera"
                    }
                ],
                "stage": "Not applicable",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "Self sequence",
                        "sentiment": "good",
                        "description": "In the event of a sequencer failure, users can force transactions to be included in the project's chain by sending them to L1. There can be up to a 1d delay on this operation."
                    },
                    {
                        "name": "State Validation",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "Currently the system permits invalid state roots. More details in project overview."
                    },
                    {
                        "name": "Data Availability",
                        "value": "External",
                        "sentiment": "bad",
                        "description": "Proof construction and state derivation fully rely on data that is posted on Celestia. Sequencer tx roots are not checked against the Blobstream bridge data roots onchain, but L2 nodes can verify data availability by running a Celestia light client."
                    },
                    {
                        "name": "Exit Window",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "There is no window for users to exit in case of an unwanted regular upgrade since contracts are instantly upgradable."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Cannot withdraw",
                        "sentiment": "bad",
                        "description": "Only the whitelisted proposers can publish state roots on L1, so in the event of failure the withdrawals are frozen."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 470177.82,
                        "ether": 183203.14,
                        "stablecoin": 94.78,
                        "associated": 0
                    },
                    "change7d": -0.15709395814202198,
                    "associatedTokens": []
                }
            },
            "everclear": {
                "id": "everclear",
                "name": "Everclear Hub",
                "slug": "everclear",
                "type": "layer2",
                "hostChain": "Ethereum",
                "category": "Optimium",
                "provider": "Arbitrum",
                "purposes": [
                    "Universal",
                    "Interoperability"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": false,
                "badges": [
                    {
                        "id": "EVM",
                        "type": "VM",
                        "name": "EVM",
                        "description": "This project uses the Ethereum Virtual Machine to run its smart contracts and supports the Solidity programming language"
                    },
                    {
                        "id": "DAC",
                        "type": "DA",
                        "name": "Data Availability Committee",
                        "description": "There is a Data Availability Committee that provides/attests to data availability"
                    },
                    {
                        "id": "Orbit",
                        "type": "Stack",
                        "name": "Built on Arbitrum Orbit",
                        "description": "The project is built on Arbitrum Orbit"
                    },
                    {
                        "id": "Gelato",
                        "type": "RaaS",
                        "name": "Gelato",
                        "description": "This project was deployed via the rollup-as-a-service provider Gelato"
                    }
                ],
                "stage": "Not applicable",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "Self sequence",
                        "sentiment": "good",
                        "description": "In the event of a sequencer failure, users can force transactions to be included in the project's chain by sending them to L1. There can be up to a 4d delay on this operation."
                    },
                    {
                        "name": "State Validation",
                        "value": "Fraud proofs (INT)",
                        "sentiment": "bad",
                        "description": "Fraud proofs allow 6 WHITELISTED actors watching the chain to prove that the state is incorrect. There are fewer than 5 Challengers external to the Operator among these. Interactive proofs (INT) require multiple transactions over time to resolve. There is a 6d 8h challenge period."
                    },
                    {
                        "name": "Data Availability",
                        "value": "External (DAC)",
                        "sentiment": "bad",
                        "description": "Proof construction relies fully on data that is NOT published onchain. There exists a Data Availability Committee (DAC) with a threshold of 1/2 that is tasked with protecting and supplying the data."
                    },
                    {
                        "name": "Exit Window",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "There is no window for users to exit in case of an unwanted regular upgrade since contracts are instantly upgradable."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Self propose",
                        "sentiment": "good",
                        "description": "Anyone can become a Proposer after 12d 17h of inactivity from the currently whitelisted Proposers."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 428200.73,
                        "ether": 77006.77,
                        "stablecoin": 0,
                        "associated": 351193.96
                    },
                    "change7d": -0.11815656318890688,
                    "associatedTokens": [
                        "NEXT",
                        "CLEAR"
                    ]
                }
            },
            "optopia": {
                "id": "optopia",
                "name": "Optopia",
                "slug": "optopia",
                "type": "layer2",
                "hostChain": "Ethereum",
                "category": "Optimistic Rollup",
                "provider": "OP Stack",
                "purposes": [
                    "Universal",
                    "AI"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": false,
                "badges": [
                    {
                        "id": "EVM",
                        "type": "VM",
                        "name": "EVM",
                        "description": "This project uses the Ethereum Virtual Machine to run its smart contracts and supports the Solidity programming language"
                    },
                    {
                        "id": "EthereumBlobs",
                        "type": "DA",
                        "name": "Ethereum with blobs",
                        "description": "This project is posting its data to Ethereum as blobs"
                    },
                    {
                        "id": "OPStack",
                        "type": "Stack",
                        "name": "Built on OP Stack",
                        "description": "The project is built on the OP Stack"
                    },
                    {
                        "id": "Superchain",
                        "type": "Infra",
                        "name": "Part of the Superchain",
                        "description": "The project is part of the Superchain, meaning it's included in the Superchain registry or uses the Superchain config"
                    }
                ],
                "stage": "Stage 0",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "Self sequence",
                        "sentiment": "good",
                        "description": "In the event of a sequencer failure, users can force transactions to be included in the project's chain by sending them to L1. There can be up to a 12h delay on this operation."
                    },
                    {
                        "name": "State Validation",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "Currently the system permits invalid state roots. More details in project overview."
                    },
                    {
                        "name": "Data Availability",
                        "value": "Onchain",
                        "sentiment": "good",
                        "description": "All of the data needed for proof construction is published on Ethereum L1."
                    },
                    {
                        "name": "Exit Window",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "There is no window for users to exit in case of an unwanted regular upgrade since contracts are instantly upgradable."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Cannot withdraw",
                        "sentiment": "bad",
                        "description": "Only the whitelisted proposers can publish state roots on L1, so in the event of failure the withdrawals are frozen."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 316254.2,
                        "ether": 233913.71,
                        "stablecoin": 28218.83,
                        "associated": 54121.66
                    },
                    "change7d": -0.13907480013529616,
                    "associatedTokens": [
                        "OPAI"
                    ]
                }
            },
            "b3": {
                "id": "b3",
                "name": "B3",
                "slug": "b3",
                "type": "layer3",
                "hostChain": "Base",
                "category": "Optimium",
                "provider": "OP Stack",
                "purposes": [
                    "Universal",
                    "Gaming"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": false,
                "badges": [
                    {
                        "id": "EVM",
                        "type": "VM",
                        "name": "EVM",
                        "description": "This project uses the Ethereum Virtual Machine to run its smart contracts and supports the Solidity programming language"
                    },
                    {
                        "id": "Celestia",
                        "type": "DA",
                        "name": "Celestia",
                        "description": "This project is posting its data to Celestia"
                    },
                    {
                        "id": "OPStack",
                        "type": "Stack",
                        "name": "Built on OP Stack",
                        "description": "The project is built on the OP Stack"
                    },
                    {
                        "id": "Superchain",
                        "type": "Infra",
                        "name": "Part of the Superchain",
                        "description": "The project is part of the Superchain, meaning it's included in the Superchain registry or uses the Superchain config"
                    },
                    {
                        "id": "Base",
                        "type": "L3ParentChain",
                        "name": "Built on top of Base",
                        "description": "The project has Base as its host chain"
                    },
                    {
                        "id": "Caldera",
                        "type": "RaaS",
                        "name": "Caldera",
                        "description": "This project was deployed via the rollup-as-a-service provider Caldera"
                    }
                ],
                "stage": "Not applicable",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "Self sequence",
                        "sentiment": "good",
                        "description": "In the event of a sequencer failure, users can force transactions to be included in the project's chain by sending them to L1. There can be up to a 1d delay on this operation."
                    },
                    {
                        "name": "State Validation",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "Currently the system permits invalid state roots. More details in project overview."
                    },
                    {
                        "name": "Data Availability",
                        "value": "External",
                        "sentiment": "bad",
                        "description": "Proof construction and state derivation fully rely on data that is posted on Celestia. Sequencer tx roots are not checked against the Blobstream bridge data roots onchain, but L2 nodes can verify data availability by running a Celestia light client."
                    },
                    {
                        "name": "Exit Window",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "There is no window for users to exit in case of an unwanted regular upgrade since contracts are instantly upgradable."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Cannot withdraw",
                        "sentiment": "bad",
                        "description": "Only the whitelisted proposers can publish state roots on L1, so in the event of failure the withdrawals are frozen."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 315778.84,
                        "ether": 310463.77,
                        "stablecoin": 5315.07,
                        "associated": 0
                    },
                    "change7d": -0.1338582098354001,
                    "associatedTokens": []
                }
            },
            "ternoa": {
                "id": "ternoa",
                "name": "Ternoa",
                "slug": "ternoa",
                "type": "layer2",
                "hostChain": "Ethereum",
                "category": "Validium",
                "provider": "Polygon",
                "purposes": [
                    "Universal",
                    "Payments"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": false,
                "badges": [
                    {
                        "id": "EVM",
                        "type": "VM",
                        "name": "EVM",
                        "description": "This project uses the Ethereum Virtual Machine to run its smart contracts and supports the Solidity programming language"
                    },
                    {
                        "id": "DAC",
                        "type": "DA",
                        "name": "Data Availability Committee",
                        "description": "There is a Data Availability Committee that provides/attests to data availability"
                    },
                    {
                        "id": "PolygonCDK",
                        "type": "Stack",
                        "name": "Built on the Polygon CDK stack",
                        "description": "The project is built on the Polygon CDK stack"
                    },
                    {
                        "id": "AggLayer",
                        "type": "Infra",
                        "name": "Part of the AggLayer",
                        "description": "The project is part of the AggLayer"
                    },
                    {
                        "id": "Zeeve",
                        "type": "RaaS",
                        "name": "Zeeve",
                        "description": "This project was deployed via the rollup-as-a-service provider Zeeve"
                    }
                ],
                "stage": "Not applicable",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "No mechanism",
                        "sentiment": "bad",
                        "description": "There is no mechanism to have transactions be included if the sequencer is down or censoring. Although the functionality exists in the code, it is currently disabled."
                    },
                    {
                        "name": "State Validation",
                        "value": "ZK proofs (ST, SN)",
                        "sentiment": "good",
                        "description": "STARKs and SNARKs are zero knowledge proofs that ensure state correctness. STARKs proofs are wrapped in SNARKs proofs for efficiency. SNARKs require a trusted setup."
                    },
                    {
                        "name": "Data Availability",
                        "value": "External (DAC)",
                        "sentiment": "bad",
                        "description": "Proof construction relies fully on data that is NOT published onchain. There exists a Data Availability Committee (DAC) with a threshold of 1/1 that is tasked with protecting and supplying the data."
                    },
                    {
                        "name": "Exit Window",
                        "value": "None",
                        "sentiment": "bad",
                        "warning": {
                            "value": "The Security Council can remove the delay on upgrades.",
                            "sentiment": "bad"
                        },
                        "description": "Even though there is a 3d Timelock for upgrades, forced transactions are disabled."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Cannot withdraw",
                        "sentiment": "bad",
                        "description": "Only the whitelisted proposers can publish state roots on L1, so in the event of failure the withdrawals are frozen."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 311331.06,
                        "ether": 322.78,
                        "stablecoin": 332.21,
                        "associated": 310484.57
                    },
                    "change7d": -0.05979914384725149,
                    "associatedTokens": [
                        "CAPS"
                    ]
                }
            },
            "river": {
                "id": "river",
                "name": "Towns",
                "slug": "towns",
                "type": "layer2",
                "hostChain": "Ethereum",
                "category": "Optimium",
                "provider": "OP Stack",
                "purposes": [
                    "Universal"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": false,
                "badges": [
                    {
                        "id": "EVM",
                        "type": "VM",
                        "name": "EVM",
                        "description": "This project uses the Ethereum Virtual Machine to run its smart contracts and supports the Solidity programming language"
                    },
                    {
                        "id": "Celestia",
                        "type": "DA",
                        "name": "Celestia",
                        "description": "This project is posting its data to Celestia"
                    },
                    {
                        "id": "OPStack",
                        "type": "Stack",
                        "name": "Built on OP Stack",
                        "description": "The project is built on the OP Stack"
                    },
                    {
                        "id": "Superchain",
                        "type": "Infra",
                        "name": "Part of the Superchain",
                        "description": "The project is part of the Superchain, meaning it's included in the Superchain registry or uses the Superchain config"
                    },
                    {
                        "id": "Caldera",
                        "type": "RaaS",
                        "name": "Caldera",
                        "description": "This project was deployed via the rollup-as-a-service provider Caldera"
                    }
                ],
                "stage": "Not applicable",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "Self sequence",
                        "sentiment": "good",
                        "description": "In the event of a sequencer failure, users can force transactions to be included in the project's chain by sending them to L1. There can be up to a 12h delay on this operation."
                    },
                    {
                        "name": "State Validation",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "Currently the system permits invalid state roots. More details in project overview."
                    },
                    {
                        "name": "Data Availability",
                        "value": "External",
                        "sentiment": "bad",
                        "description": "Proof construction and state derivation fully rely on data that is posted on Celestia. Sequencer tx roots are not checked against the Blobstream bridge data roots onchain, but L2 nodes can verify data availability by running a Celestia light client."
                    },
                    {
                        "name": "Exit Window",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "There is no window for users to exit in case of an unwanted regular upgrade since contracts are instantly upgradable."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Cannot withdraw",
                        "sentiment": "bad",
                        "description": "Only the whitelisted proposers can publish state roots on L1, so in the event of failure the withdrawals are frozen."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 204947.44,
                        "ether": 204947.44,
                        "stablecoin": 0,
                        "associated": 0
                    },
                    "change7d": -0.10335448486513898,
                    "associatedTokens": []
                }
            },
            "popboss": {
                "id": "popboss",
                "name": "Proof of Play Boss",
                "shortName": "PoP Boss",
                "slug": "popboss",
                "type": "layer3",
                "hostChain": "Arbitrum One",
                "category": "Optimium",
                "provider": "Arbitrum",
                "purposes": [
                    "Universal",
                    "Gaming"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": false,
                "badges": [
                    {
                        "id": "EVM",
                        "type": "VM",
                        "name": "EVM",
                        "description": "This project uses the Ethereum Virtual Machine to run its smart contracts and supports the Solidity programming language"
                    },
                    {
                        "id": "DAC",
                        "type": "DA",
                        "name": "Data Availability Committee",
                        "description": "There is a Data Availability Committee that provides/attests to data availability"
                    },
                    {
                        "id": "Orbit",
                        "type": "Stack",
                        "name": "Built on Arbitrum Orbit",
                        "description": "The project is built on Arbitrum Orbit"
                    },
                    {
                        "id": "Arbitrum",
                        "type": "L3ParentChain",
                        "name": "Built on top of Arbitrum",
                        "description": "The project has Arbitrum as its host chain"
                    },
                    {
                        "id": "Conduit",
                        "type": "RaaS",
                        "name": "Conduit",
                        "description": "This project was deployed via the rollup-as-a-service provider Conduit"
                    }
                ],
                "stage": "Not applicable",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "Self sequence",
                        "sentiment": "good",
                        "description": "In the event of a sequencer failure, users can force transactions to be included in the project's chain by sending them to L1. There can be up to a 2d delay on this operation."
                    },
                    {
                        "name": "State Validation",
                        "value": "Fraud proofs (INT)",
                        "sentiment": "bad",
                        "description": "No actor outside of the single Proposer can submit fraud proofs. Interactive proofs (INT) require multiple transactions over time to resolve. The challenge protocol can be subject to delay attacks. There is a 5d 14h challenge period."
                    },
                    {
                        "name": "Data Availability",
                        "value": "External (DAC)",
                        "sentiment": "bad",
                        "description": "Proof construction relies fully on data that is NOT published onchain. There exists a Data Availability Committee (DAC) with a threshold of 1/1 that is tasked with protecting and supplying the data."
                    },
                    {
                        "name": "Exit Window",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "There is no window for users to exit in case of an unwanted regular upgrade since contracts are instantly upgradable."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Self propose",
                        "sentiment": "good",
                        "description": "Anyone can become a Proposer after 11d 23h of inactivity from the currently whitelisted Proposers."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 175716.46,
                        "ether": 175716.46,
                        "stablecoin": 0,
                        "associated": 0
                    },
                    "change7d": -0.10944837445966904,
                    "associatedTokens": []
                }
            },
            "superlumio": {
                "id": "superlumio",
                "name": "SuperLumio",
                "slug": "superlumio",
                "type": "layer2",
                "hostChain": "Ethereum",
                "category": "Optimistic Rollup",
                "provider": "OP Stack",
                "purposes": [
                    "Universal"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": false,
                "badges": [
                    {
                        "id": "EVM",
                        "type": "VM",
                        "name": "EVM",
                        "description": "This project uses the Ethereum Virtual Machine to run its smart contracts and supports the Solidity programming language"
                    },
                    {
                        "id": "EthereumBlobs",
                        "type": "DA",
                        "name": "Ethereum with blobs",
                        "description": "This project is posting its data to Ethereum as blobs"
                    },
                    {
                        "id": "OPStack",
                        "type": "Stack",
                        "name": "Built on OP Stack",
                        "description": "The project is built on the OP Stack"
                    },
                    {
                        "id": "Conduit",
                        "type": "RaaS",
                        "name": "Conduit",
                        "description": "This project was deployed via the rollup-as-a-service provider Conduit"
                    }
                ],
                "stage": "Stage 0",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "Self sequence",
                        "sentiment": "good",
                        "description": "In the event of a sequencer failure, users can force transactions to be included in the project's chain by sending them to L1. There can be up to a 12h delay on this operation."
                    },
                    {
                        "name": "State Validation",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "Currently the system permits invalid state roots. More details in project overview."
                    },
                    {
                        "name": "Data Availability",
                        "value": "Onchain",
                        "sentiment": "good",
                        "description": "All of the data needed for proof construction is published on Ethereum L1."
                    },
                    {
                        "name": "Exit Window",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "There is no window for users to exit in case of an unwanted regular upgrade since contracts are instantly upgradable."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Cannot withdraw",
                        "sentiment": "bad",
                        "description": "Only the whitelisted proposers can publish state roots on L1, so in the event of failure the withdrawals are frozen."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 155558.18,
                        "ether": 149879.74,
                        "stablecoin": 5136.9,
                        "associated": 0
                    },
                    "change7d": -0.11343568153092687,
                    "associatedTokens": []
                }
            },
            "swan": {
                "id": "swan",
                "name": "Swan Chain",
                "slug": "swan",
                "type": "layer2",
                "hostChain": "Ethereum",
                "category": "Optimistic Rollup",
                "provider": "OP Stack",
                "purposes": [
                    "Universal",
                    "AI",
                    "Storage"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": false,
                "badges": [
                    {
                        "id": "EVM",
                        "type": "VM",
                        "name": "EVM",
                        "description": "This project uses the Ethereum Virtual Machine to run its smart contracts and supports the Solidity programming language"
                    },
                    {
                        "id": "EthereumBlobs",
                        "type": "DA",
                        "name": "Ethereum with blobs",
                        "description": "This project is posting its data to Ethereum as blobs"
                    },
                    {
                        "id": "OPStack",
                        "type": "Stack",
                        "name": "Built on OP Stack",
                        "description": "The project is built on the OP Stack"
                    },
                    {
                        "id": "Superchain",
                        "type": "Infra",
                        "name": "Part of the Superchain",
                        "description": "The project is part of the Superchain, meaning it's included in the Superchain registry or uses the Superchain config"
                    }
                ],
                "stage": "Stage 0",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "Self sequence",
                        "sentiment": "good",
                        "description": "In the event of a sequencer failure, users can force transactions to be included in the project's chain by sending them to L1. There can be up to a 12h delay on this operation."
                    },
                    {
                        "name": "State Validation",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "Currently the system permits invalid state roots. More details in project overview."
                    },
                    {
                        "name": "Data Availability",
                        "value": "Onchain",
                        "sentiment": "good",
                        "description": "All of the data needed for proof construction is published on Ethereum L1."
                    },
                    {
                        "name": "Exit Window",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "There is no window for users to exit in case of an unwanted regular upgrade since contracts are instantly upgradable."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Cannot withdraw",
                        "sentiment": "bad",
                        "description": "Only the whitelisted proposers can publish state roots on L1, so in the event of failure the withdrawals are frozen."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 151694.26,
                        "ether": 151694.26,
                        "stablecoin": 0,
                        "associated": 0
                    },
                    "change7d": -0.12001668840990276,
                    "associatedTokens": []
                }
            },
            "honeypot": {
                "id": "honeypot",
                "name": "Honeypot (Cartesi)",
                "shortName": "Honeypot",
                "slug": "cartesi-honeypot",
                "type": "layer2",
                "hostChain": "Ethereum",
                "category": "Optimistic Rollup",
                "provider": "Cartesi Rollups",
                "purposes": [
                    "Bug bounty"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": false,
                "badges": [
                    {
                        "id": "AppChain",
                        "type": "VM",
                        "name": "Application-specific chain",
                        "description": "This project is built to operate a specific application"
                    },
                    {
                        "id": "CartesiVM",
                        "type": "VM",
                        "name": "CartesiVM",
                        "description": "This project uses the Cartesi Machine to run its smart contracts and supports any programming language that can be ported to RISC-V architecture"
                    },
                    {
                        "id": "EthereumCalldata",
                        "type": "DA",
                        "name": "Ethereum with calldata",
                        "description": "This project is posting its data to Ethereum as calldata"
                    },
                    {
                        "id": "Cartesi",
                        "type": "Stack",
                        "name": "Built on the Cartesi stack",
                        "description": "The project is built on the Cartesi stack"
                    }
                ],
                "stage": "Stage 0",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "Self sequence",
                        "sentiment": "good",
                        "description": "In the event of a sequencer failure, users can force transactions to be included in the project's chain by sending them to L1. There is no delay on this operation."
                    },
                    {
                        "name": "State Validation",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "Currently the system permits invalid state roots. More details in project overview."
                    },
                    {
                        "name": "Data Availability",
                        "value": "Onchain",
                        "sentiment": "good",
                        "description": "All of the data needed for proof construction is published on Ethereum L1."
                    },
                    {
                        "name": "Exit Window",
                        "value": "∞",
                        "sentiment": "good",
                        "description": "Users can exit funds at any time because contracts are not upgradeable."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Cannot withdraw",
                        "sentiment": "bad",
                        "description": "Only the whitelisted proposers can publish state roots on L1, so in the event of failure the withdrawals are frozen."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 142093.3,
                        "ether": 0,
                        "stablecoin": 0,
                        "associated": 0
                    },
                    "change7d": -0.09908560168195524,
                    "associatedTokens": []
                }
            },
            "termstructure": {
                "id": "termstructure",
                "name": "Term Structure",
                "slug": "termstructure",
                "type": "layer2",
                "hostChain": "Ethereum",
                "category": "ZK Rollup",
                "provider": "ZKsync Lite",
                "purposes": [
                    "Payments",
                    "Exchange",
                    "Lending"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": false,
                "badges": [
                    {
                        "id": "AppChain",
                        "type": "VM",
                        "name": "Application-specific chain",
                        "description": "This project is built to operate a specific application"
                    },
                    {
                        "id": "EthereumCalldata",
                        "type": "DA",
                        "name": "Ethereum with calldata",
                        "description": "This project is posting its data to Ethereum as calldata"
                    },
                    {
                        "id": "ZKsyncLiteFork",
                        "type": "Fork",
                        "name": "Fork of ZKsync Lite",
                        "description": "The project is fork of ZKsync Lite"
                    }
                ],
                "stage": "Stage 0",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "Force via L1",
                        "sentiment": "good",
                        "description": "Users can force the sequencer to include a withdrawal transaction by submitting a request through L1. If the sequencer censors or is down for  for more than 14d, users can use the exit hatch to withdraw their funds."
                    },
                    {
                        "name": "State Validation",
                        "value": "ZK proofs (SN)",
                        "sentiment": "good",
                        "description": "SNARKs are zero knowledge proofs that ensure state correctness, but require trusted setup."
                    },
                    {
                        "name": "Data Availability",
                        "value": "Onchain",
                        "sentiment": "good",
                        "description": "All of the data needed for proof construction is published on Ethereum L1."
                    },
                    {
                        "name": "Exit Window",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "There is no window for users to exit in case of an unwanted regular upgrade since contracts are instantly upgradable."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Use escape hatch",
                        "sentiment": "good",
                        "description": "Users are able to trustlessly exit by submitting a zero knowledge proof of funds."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 137040.07,
                        "ether": 30773.76,
                        "stablecoin": 76767.55,
                        "associated": 0
                    },
                    "change7d": -0.027139624418158204,
                    "associatedTokens": []
                }
            },
            "wirex": {
                "id": "wirex",
                "name": "Pay Chain",
                "slug": "wirex",
                "type": "layer2",
                "hostChain": "Ethereum",
                "category": "Validium",
                "provider": "Polygon",
                "purposes": [
                    "Universal",
                    "Payments"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": false,
                "badges": [
                    {
                        "id": "EVM",
                        "type": "VM",
                        "name": "EVM",
                        "description": "This project uses the Ethereum Virtual Machine to run its smart contracts and supports the Solidity programming language"
                    },
                    {
                        "id": "DAC",
                        "type": "DA",
                        "name": "Data Availability Committee",
                        "description": "There is a Data Availability Committee that provides/attests to data availability"
                    },
                    {
                        "id": "PolygonCDK",
                        "type": "Stack",
                        "name": "Built on the Polygon CDK stack",
                        "description": "The project is built on the Polygon CDK stack"
                    },
                    {
                        "id": "AggLayer",
                        "type": "Infra",
                        "name": "Part of the AggLayer",
                        "description": "The project is part of the AggLayer"
                    },
                    {
                        "id": "Gateway",
                        "type": "RaaS",
                        "name": "Gateway",
                        "description": "This project was deployed via the rollup-as-a-service provider Gateway"
                    }
                ],
                "stage": "Not applicable",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "No mechanism",
                        "sentiment": "bad",
                        "description": "There is no mechanism to have transactions be included if the sequencer is down or censoring. Although the functionality exists in the code, it is currently disabled."
                    },
                    {
                        "name": "State Validation",
                        "value": "ZK proofs (ST, SN)",
                        "sentiment": "good",
                        "description": "STARKs and SNARKs are zero knowledge proofs that ensure state correctness. STARKs proofs are wrapped in SNARKs proofs for efficiency. SNARKs require a trusted setup."
                    },
                    {
                        "name": "Data Availability",
                        "value": "External (DAC)",
                        "sentiment": "bad",
                        "description": "Proof construction relies fully on data that is NOT published onchain. There exists a Data Availability Committee (DAC) with a threshold of 1/2 that is tasked with protecting and supplying the data."
                    },
                    {
                        "name": "Exit Window",
                        "value": "None",
                        "sentiment": "bad",
                        "warning": {
                            "value": "The Security Council can remove the delay on upgrades.",
                            "sentiment": "bad"
                        },
                        "description": "Even though there is a 3d Timelock for upgrades, forced transactions are disabled."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Cannot withdraw",
                        "sentiment": "bad",
                        "description": "Only the whitelisted proposers can publish state roots on L1, so in the event of failure the withdrawals are frozen."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 128167.99,
                        "ether": 1884.04,
                        "stablecoin": 126283.95,
                        "associated": 0
                    },
                    "change7d": 0.023063715590691425,
                    "associatedTokens": []
                }
            },
            "myria": {
                "id": "myria",
                "name": "Myria",
                "slug": "myria",
                "type": "layer2",
                "hostChain": "Ethereum",
                "category": "Validium",
                "provider": "StarkEx",
                "purposes": [
                    "NFT",
                    "Exchange",
                    "Gaming"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": false,
                "badges": [
                    {
                        "id": "AppChain",
                        "type": "VM",
                        "name": "Application-specific chain",
                        "description": "This project is built to operate a specific application"
                    },
                    {
                        "id": "DAC",
                        "type": "DA",
                        "name": "Data Availability Committee",
                        "description": "There is a Data Availability Committee that provides/attests to data availability"
                    },
                    {
                        "id": "StarkEx",
                        "type": "Stack",
                        "name": "StarkEx",
                        "description": "This project was deployed utilizing the StarkEx technology from StarkWare"
                    },
                    {
                        "id": "SHARP",
                        "type": "Infra",
                        "name": "Uses SHARP",
                        "description": "The project uses a shared prover contract - SHARP"
                    }
                ],
                "stage": "Not applicable",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "Force via L1",
                        "sentiment": "good",
                        "description": "Users can force the sequencer to include a withdrawal transaction by submitting a request through L1. If the sequencer censors or is down for  for more than 7d, users can use the exit hatch to withdraw their funds."
                    },
                    {
                        "name": "State Validation",
                        "value": "ZK proofs (ST)",
                        "sentiment": "good",
                        "description": "STARKs are zero knowledge proofs that ensure state correctness."
                    },
                    {
                        "name": "Data Availability",
                        "value": "External (DAC)",
                        "sentiment": "bad",
                        "description": "Proof construction relies fully on data that is NOT published onchain. There exists a Data Availability Committee (DAC) with a threshold of 2/5 that is tasked with protecting and supplying the data."
                    },
                    {
                        "name": "Exit Window",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "There is no window for users to exit in case of an unwanted regular upgrade since contracts are instantly upgradable."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Use escape hatch",
                        "sentiment": "good",
                        "description": "Users are able to trustlessly exit by submitting a Merkle proof of funds. NFTs will be minted on L1 to exit."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 117530.18,
                        "ether": 117530.18,
                        "stablecoin": 0,
                        "associated": 0
                    },
                    "change7d": -0.1104717739268195,
                    "associatedTokens": [
                        "MYRIA"
                    ]
                }
            },
            "form": {
                "id": "form",
                "name": "Form",
                "slug": "form",
                "type": "layer2",
                "hostChain": "Ethereum",
                "category": "Optimium",
                "provider": "OP Stack",
                "purposes": [
                    "Universal",
                    "Social"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": false,
                "badges": [
                    {
                        "id": "EVM",
                        "type": "VM",
                        "name": "EVM",
                        "description": "This project uses the Ethereum Virtual Machine to run its smart contracts and supports the Solidity programming language"
                    },
                    {
                        "id": "Celestia",
                        "type": "DA",
                        "name": "Celestia",
                        "description": "This project is posting its data to Celestia"
                    },
                    {
                        "id": "OPStack",
                        "type": "Stack",
                        "name": "Built on OP Stack",
                        "description": "The project is built on the OP Stack"
                    },
                    {
                        "id": "Superchain",
                        "type": "Infra",
                        "name": "Part of the Superchain",
                        "description": "The project is part of the Superchain, meaning it's included in the Superchain registry or uses the Superchain config"
                    },
                    {
                        "id": "Caldera",
                        "type": "RaaS",
                        "name": "Caldera",
                        "description": "This project was deployed via the rollup-as-a-service provider Caldera"
                    }
                ],
                "stage": "Not applicable",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "Self sequence",
                        "sentiment": "good",
                        "description": "In the event of a sequencer failure, users can force transactions to be included in the project's chain by sending them to L1. There can be up to a 12h delay on this operation."
                    },
                    {
                        "name": "State Validation",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "Currently the system permits invalid state roots. More details in project overview."
                    },
                    {
                        "name": "Data Availability",
                        "value": "External",
                        "sentiment": "bad",
                        "description": "Proof construction and state derivation fully rely on data that is posted on Celestia. Sequencer tx roots are not checked against the Blobstream bridge data roots onchain, but L2 nodes can verify data availability by running a Celestia light client."
                    },
                    {
                        "name": "Exit Window",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "There is no window for users to exit in case of an unwanted regular upgrade since contracts are instantly upgradable."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Cannot withdraw",
                        "sentiment": "bad",
                        "description": "Only the whitelisted proposers can publish state roots on L1, so in the event of failure the withdrawals are frozen."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 84032.11,
                        "ether": 67413.45,
                        "stablecoin": 16618.66,
                        "associated": 0
                    },
                    "change7d": -0.0163967219665766,
                    "associatedTokens": []
                }
            },
            "geist": {
                "id": "geist",
                "name": "Geist",
                "slug": "geist",
                "type": "layer3",
                "hostChain": "Base",
                "category": "Optimium",
                "provider": "Arbitrum",
                "purposes": [
                    "Universal",
                    "Gaming",
                    "NFT"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": false,
                "badges": [
                    {
                        "id": "EVM",
                        "type": "VM",
                        "name": "EVM",
                        "description": "This project uses the Ethereum Virtual Machine to run its smart contracts and supports the Solidity programming language"
                    },
                    {
                        "id": "DAC",
                        "type": "DA",
                        "name": "Data Availability Committee",
                        "description": "There is a Data Availability Committee that provides/attests to data availability"
                    },
                    {
                        "id": "Orbit",
                        "type": "Stack",
                        "name": "Built on Arbitrum Orbit",
                        "description": "The project is built on Arbitrum Orbit"
                    },
                    {
                        "id": "Base",
                        "type": "L3ParentChain",
                        "name": "Built on top of Base",
                        "description": "The project has Base as its host chain"
                    },
                    {
                        "id": "Alchemy",
                        "type": "RaaS",
                        "name": "Alchemy",
                        "description": "This project was deployed via the rollup-as-a-service provider Alchemy"
                    }
                ],
                "stage": "Not applicable",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "Self sequence",
                        "sentiment": "good",
                        "description": "In the event of a sequencer failure, users can force transactions to be included in the project's chain by sending them to L1. There can be up to a 4d 12h delay on this operation."
                    },
                    {
                        "name": "State Validation",
                        "value": "Fraud proofs (INT)",
                        "sentiment": "bad",
                        "description": "Fraud proofs only allow 2 WHITELISTED actors watching the chain to prove that the state is incorrect. Interactive proofs (INT) require multiple transactions over time to resolve. The challenge protocol can be subject to delay attacks. There is a 38d 4h challenge period."
                    },
                    {
                        "name": "Data Availability",
                        "value": "External (DAC)",
                        "sentiment": "bad",
                        "description": "Proof construction relies fully on data that is NOT published onchain. There exists a Data Availability Committee (DAC) with a threshold of 2/3 that is tasked with protecting and supplying the data."
                    },
                    {
                        "name": "Exit Window",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "There is no window for users to exit in case of an unwanted regular upgrade since contracts are instantly upgradable."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Self propose",
                        "sentiment": "good",
                        "description": "Anyone can become a Proposer after 44d 13h of inactivity from the currently whitelisted Proposers."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 82967.45,
                        "ether": 0,
                        "stablecoin": 0,
                        "associated": 82967.45
                    },
                    "change7d": -0.09401640429971603,
                    "associatedTokens": [
                        "GHST"
                    ]
                }
            },
            "oevnetwork": {
                "id": "oevnetwork",
                "name": "OEV Network",
                "slug": "oev",
                "type": "layer2",
                "hostChain": "Ethereum",
                "category": "Optimium",
                "provider": "Arbitrum",
                "purposes": [
                    "Universal",
                    "Oracles"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": false,
                "badges": [
                    {
                        "id": "EVM",
                        "type": "VM",
                        "name": "EVM",
                        "description": "This project uses the Ethereum Virtual Machine to run its smart contracts and supports the Solidity programming language"
                    },
                    {
                        "id": "DAC",
                        "type": "DA",
                        "name": "Data Availability Committee",
                        "description": "There is a Data Availability Committee that provides/attests to data availability"
                    },
                    {
                        "id": "Orbit",
                        "type": "Stack",
                        "name": "Built on Arbitrum Orbit",
                        "description": "The project is built on Arbitrum Orbit"
                    },
                    {
                        "id": "Caldera",
                        "type": "RaaS",
                        "name": "Caldera",
                        "description": "This project was deployed via the rollup-as-a-service provider Caldera"
                    }
                ],
                "stage": "Not applicable",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "Self sequence",
                        "sentiment": "good",
                        "description": "In the event of a sequencer failure, users can force transactions to be included in the project's chain by sending them to L1. There can be up to a 1d delay on this operation."
                    },
                    {
                        "name": "State Validation",
                        "value": "Fraud proofs (INT)",
                        "sentiment": "bad",
                        "description": "No actor outside of the single Proposer can submit fraud proofs. Interactive proofs (INT) require multiple transactions over time to resolve. The challenge protocol can be subject to delay attacks. There is a 6d 8h challenge period."
                    },
                    {
                        "name": "Data Availability",
                        "value": "External (DAC)",
                        "sentiment": "bad",
                        "description": "Proof construction relies fully on data that is NOT published onchain. There exists a Data Availability Committee (DAC) with a threshold of 1/1 that is tasked with protecting and supplying the data."
                    },
                    {
                        "name": "Exit Window",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "There is no window for users to exit in case of an unwanted regular upgrade since contracts are instantly upgradable."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Self propose",
                        "sentiment": "good",
                        "description": "Anyone can become a Proposer after 12d 17h of inactivity from the currently whitelisted Proposers."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 63634.05,
                        "ether": 63634.05,
                        "stablecoin": 0,
                        "associated": 0
                    },
                    "change7d": -0.1094368494740372,
                    "associatedTokens": []
                }
            },
            "ebichain": {
                "id": "ebichain",
                "name": "Ebi Chain",
                "slug": "ebichain",
                "type": "layer2",
                "hostChain": "Ethereum",
                "category": "Optimium",
                "provider": "Arbitrum",
                "purposes": [
                    "Universal",
                    "Exchange"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": false,
                "badges": [
                    {
                        "id": "EVM",
                        "type": "VM",
                        "name": "EVM",
                        "description": "This project uses the Ethereum Virtual Machine to run its smart contracts and supports the Solidity programming language"
                    },
                    {
                        "id": "DAC",
                        "type": "DA",
                        "name": "Data Availability Committee",
                        "description": "There is a Data Availability Committee that provides/attests to data availability"
                    },
                    {
                        "id": "Orbit",
                        "type": "Stack",
                        "name": "Built on Arbitrum Orbit",
                        "description": "The project is built on Arbitrum Orbit"
                    },
                    {
                        "id": "Conduit",
                        "type": "RaaS",
                        "name": "Conduit",
                        "description": "This project was deployed via the rollup-as-a-service provider Conduit"
                    }
                ],
                "stage": "Not applicable",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "Self sequence",
                        "sentiment": "good",
                        "description": "In the event of a sequencer failure, users can force transactions to be included in the project's chain by sending them to L1. There can be up to a 1d delay on this operation."
                    },
                    {
                        "name": "State Validation",
                        "value": "Fraud proofs (INT)",
                        "sentiment": "bad",
                        "description": "No actor outside of the single Proposer can submit fraud proofs. Interactive proofs (INT) require multiple transactions over time to resolve. The challenge protocol can be subject to delay attacks. There is a 5d 14h challenge period."
                    },
                    {
                        "name": "Data Availability",
                        "value": "External (DAC)",
                        "sentiment": "bad",
                        "description": "Proof construction relies fully on data that is NOT published onchain. There exists a Data Availability Committee (DAC) with a threshold of 1/1 that is tasked with protecting and supplying the data."
                    },
                    {
                        "name": "Exit Window",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "There is no window for users to exit in case of an unwanted regular upgrade since contracts are instantly upgradable."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Self propose",
                        "sentiment": "good",
                        "description": "Anyone can become a Proposer after 11d 23h of inactivity from the currently whitelisted Proposers."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 48919.7,
                        "ether": 48919.7,
                        "stablecoin": 0,
                        "associated": 0
                    },
                    "change7d": -0.12788164504066113,
                    "associatedTokens": []
                }
            },
            "superseed": {
                "id": "superseed",
                "name": "Superseed",
                "slug": "superseed",
                "type": "layer2",
                "hostChain": "Ethereum",
                "category": "Optimistic Rollup",
                "provider": "OP Stack",
                "purposes": [
                    "Universal"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": true,
                "badges": [
                    {
                        "id": "EVM",
                        "type": "VM",
                        "name": "EVM",
                        "description": "This project uses the Ethereum Virtual Machine to run its smart contracts and supports the Solidity programming language"
                    },
                    {
                        "id": "EthereumBlobs",
                        "type": "DA",
                        "name": "Ethereum with blobs",
                        "description": "This project is posting its data to Ethereum as blobs"
                    },
                    {
                        "id": "OPStack",
                        "type": "Stack",
                        "name": "Built on OP Stack",
                        "description": "The project is built on the OP Stack"
                    },
                    {
                        "id": "Superchain",
                        "type": "Infra",
                        "name": "Part of the Superchain",
                        "description": "The project is part of the Superchain, meaning it's included in the Superchain registry or uses the Superchain config"
                    }
                ],
                "stage": "Under review",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "Under Review",
                        "sentiment": "UnderReview",
                        "description": "This risk is currently under review."
                    },
                    {
                        "name": "State Validation",
                        "value": "Under Review",
                        "sentiment": "UnderReview",
                        "description": "This risk is currently under review."
                    },
                    {
                        "name": "Data Availability",
                        "value": "Under Review",
                        "sentiment": "UnderReview",
                        "description": "This risk is currently under review."
                    },
                    {
                        "name": "Exit Window",
                        "value": "Under Review",
                        "sentiment": "UnderReview",
                        "description": "This risk is currently under review."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Under Review",
                        "sentiment": "UnderReview",
                        "description": "This risk is currently under review."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 45926.23,
                        "ether": 45926.23,
                        "stablecoin": 0,
                        "associated": 0
                    },
                    "change7d": -0.1708168945527605,
                    "associatedTokens": []
                }
            },
            "arenaz": {
                "id": "arenaz",
                "name": "Arena-Z",
                "slug": "arenaz",
                "type": "layer2",
                "hostChain": "Ethereum",
                "category": "Optimistic Rollup",
                "provider": "OP Stack",
                "purposes": [
                    "Universal",
                    "Gaming"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": false,
                "badges": [
                    {
                        "id": "EVM",
                        "type": "VM",
                        "name": "EVM",
                        "description": "This project uses the Ethereum Virtual Machine to run its smart contracts and supports the Solidity programming language"
                    },
                    {
                        "id": "EthereumBlobs",
                        "type": "DA",
                        "name": "Ethereum with blobs",
                        "description": "This project is posting its data to Ethereum as blobs"
                    },
                    {
                        "id": "OPStack",
                        "type": "Stack",
                        "name": "Built on OP Stack",
                        "description": "The project is built on the OP Stack"
                    },
                    {
                        "id": "Superchain",
                        "type": "Infra",
                        "name": "Part of the Superchain",
                        "description": "The project is part of the Superchain, meaning it's included in the Superchain registry or uses the Superchain config"
                    },
                    {
                        "id": "Gelato",
                        "type": "RaaS",
                        "name": "Gelato",
                        "description": "This project was deployed via the rollup-as-a-service provider Gelato"
                    }
                ],
                "stage": "Stage 0",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "Self sequence",
                        "sentiment": "good",
                        "description": "In the event of a sequencer failure, users can force transactions to be included in the project's chain by sending them to L1. There can be up to a 12h delay on this operation."
                    },
                    {
                        "name": "State Validation",
                        "value": "Fraud proofs (INT)",
                        "sentiment": "bad",
                        "description": "Fraud proofs allow actors watching the chain to prove that the state is incorrect. Interactive proofs (INT) require multiple transactions over time to resolve. Only one entity is currently allowed to propose and submit challenges, as only permissioned games are currently allowed."
                    },
                    {
                        "name": "Data Availability",
                        "value": "Onchain",
                        "sentiment": "good",
                        "description": "All of the data needed for proof construction is published on Ethereum L1."
                    },
                    {
                        "name": "Exit Window",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "There is no window for users to exit in case of an unwanted regular upgrade since contracts are instantly upgradable."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Cannot withdraw",
                        "sentiment": "bad",
                        "description": "Only the whitelisted proposers can publish state roots on L1, so in the event of failure the withdrawals are frozen."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 44470.59,
                        "ether": 21848.06,
                        "stablecoin": 1,
                        "associated": 0
                    },
                    "change7d": -0.02341875322951592,
                    "associatedTokens": []
                }
            },
            "gmnetwork": {
                "id": "gmnetwork",
                "name": "GM Network",
                "slug": "gmnetwork",
                "type": "layer2",
                "hostChain": "Ethereum",
                "category": "Optimium",
                "provider": "OP Stack",
                "purposes": [
                    "Universal",
                    "AI"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": false,
                "badges": [
                    {
                        "id": "EVM",
                        "type": "VM",
                        "name": "EVM",
                        "description": "This project uses the Ethereum Virtual Machine to run its smart contracts and supports the Solidity programming language"
                    },
                    {
                        "id": "DAC",
                        "type": "DA",
                        "name": "Data Availability Committee",
                        "description": "There is a Data Availability Committee that provides/attests to data availability"
                    },
                    {
                        "id": "OPStack",
                        "type": "Stack",
                        "name": "Built on OP Stack",
                        "description": "The project is built on the OP Stack"
                    },
                    {
                        "id": "Superchain",
                        "type": "Infra",
                        "name": "Part of the Superchain",
                        "description": "The project is part of the Superchain, meaning it's included in the Superchain registry or uses the Superchain config"
                    },
                    {
                        "id": "AltLayer",
                        "type": "RaaS",
                        "name": "AltLayer",
                        "description": "This project was deployed via the rollup-as-a-service provider AltLayer"
                    }
                ],
                "stage": "Not applicable",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "Self sequence",
                        "sentiment": "good",
                        "description": "In the event of a sequencer failure, users can force transactions to be included in the project's chain by sending them to L1. There can be up to a 12h delay on this operation."
                    },
                    {
                        "name": "State Validation",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "Currently the system permits invalid state roots. More details in project overview."
                    },
                    {
                        "name": "Data Availability",
                        "value": "External",
                        "sentiment": "bad",
                        "description": "Proof construction and state derivation rely fully on data that is NOT published onchain. A custom data availability (DA) provider without attestations is used, but data unavailability can be challenged."
                    },
                    {
                        "name": "Exit Window",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "There is no window for users to exit in case of an unwanted regular upgrade since contracts are instantly upgradable."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Cannot withdraw",
                        "sentiment": "bad",
                        "description": "Only the whitelisted proposers can publish state roots on L1, so in the event of failure the withdrawals are frozen."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 39638.58,
                        "ether": 39638.58,
                        "stablecoin": 0,
                        "associated": 0
                    },
                    "change7d": -0.1220741585984223,
                    "associatedTokens": []
                }
            },
            "molten": {
                "id": "molten",
                "name": "Molten Network",
                "shortName": "Molten",
                "slug": "molten",
                "type": "layer3",
                "hostChain": "Arbitrum One",
                "category": "Optimium",
                "provider": "Arbitrum",
                "purposes": [
                    "Universal"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": false,
                "badges": [
                    {
                        "id": "EVM",
                        "type": "VM",
                        "name": "EVM",
                        "description": "This project uses the Ethereum Virtual Machine to run its smart contracts and supports the Solidity programming language"
                    },
                    {
                        "id": "DAC",
                        "type": "DA",
                        "name": "Data Availability Committee",
                        "description": "There is a Data Availability Committee that provides/attests to data availability"
                    },
                    {
                        "id": "Orbit",
                        "type": "Stack",
                        "name": "Built on Arbitrum Orbit",
                        "description": "The project is built on Arbitrum Orbit"
                    },
                    {
                        "id": "Arbitrum",
                        "type": "L3ParentChain",
                        "name": "Built on top of Arbitrum",
                        "description": "The project has Arbitrum as its host chain"
                    },
                    {
                        "id": "Caldera",
                        "type": "RaaS",
                        "name": "Caldera",
                        "description": "This project was deployed via the rollup-as-a-service provider Caldera"
                    }
                ],
                "stage": "Not applicable",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "Self sequence",
                        "sentiment": "good",
                        "description": "In the event of a sequencer failure, users can force transactions to be included in the project's chain by sending them to L1. There can be up to a 2d delay on this operation."
                    },
                    {
                        "name": "State Validation",
                        "value": "Fraud proofs (INT)",
                        "sentiment": "bad",
                        "description": "No actor outside of the single Proposer can submit fraud proofs. Interactive proofs (INT) require multiple transactions over time to resolve. The challenge protocol can be subject to delay attacks. There is a 6d 8h challenge period."
                    },
                    {
                        "name": "Data Availability",
                        "value": "External (DAC)",
                        "sentiment": "bad",
                        "description": "Proof construction relies fully on data that is NOT published onchain. There exists a Data Availability Committee (DAC) with a threshold of 1/1 that is tasked with protecting and supplying the data."
                    },
                    {
                        "name": "Exit Window",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "There is no window for users to exit in case of an unwanted regular upgrade since contracts are instantly upgradable."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Self propose",
                        "sentiment": "good",
                        "description": "Anyone can become a Proposer after 12d 17h of inactivity from the currently whitelisted Proposers."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 38076.88,
                        "ether": 17.26,
                        "stablecoin": 4017.22,
                        "associated": 34042.4
                    },
                    "change7d": -0.02768515458978893,
                    "associatedTokens": [
                        "MOLTEN"
                    ]
                }
            },
            "xchain": {
                "id": "xchain",
                "name": "XCHAIN",
                "slug": "xchain",
                "type": "layer2",
                "hostChain": "Ethereum",
                "category": "Optimium",
                "provider": "Arbitrum",
                "purposes": [
                    "Universal"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": false,
                "badges": [
                    {
                        "id": "EVM",
                        "type": "VM",
                        "name": "EVM",
                        "description": "This project uses the Ethereum Virtual Machine to run its smart contracts and supports the Solidity programming language"
                    },
                    {
                        "id": "DAC",
                        "type": "DA",
                        "name": "Data Availability Committee",
                        "description": "There is a Data Availability Committee that provides/attests to data availability"
                    },
                    {
                        "id": "Orbit",
                        "type": "Stack",
                        "name": "Built on Arbitrum Orbit",
                        "description": "The project is built on Arbitrum Orbit"
                    },
                    {
                        "id": "Conduit",
                        "type": "RaaS",
                        "name": "Conduit",
                        "description": "This project was deployed via the rollup-as-a-service provider Conduit"
                    }
                ],
                "stage": "Not applicable",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "Self sequence",
                        "sentiment": "good",
                        "description": "In the event of a sequencer failure, users can force transactions to be included in the project's chain by sending them to L1. There can be up to a 1d delay on this operation."
                    },
                    {
                        "name": "State Validation",
                        "value": "Fraud proofs (INT)",
                        "sentiment": "bad",
                        "description": "No actor outside of the single Proposer can submit fraud proofs. Interactive proofs (INT) require multiple transactions over time to resolve. The challenge protocol can be subject to delay attacks. There is a 5d 14h challenge period."
                    },
                    {
                        "name": "Data Availability",
                        "value": "External (DAC)",
                        "sentiment": "bad",
                        "description": "Proof construction relies fully on data that is NOT published onchain. There exists a Data Availability Committee (DAC) with a threshold of 1/1 that is tasked with protecting and supplying the data."
                    },
                    {
                        "name": "Exit Window",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "There is no window for users to exit in case of an unwanted regular upgrade since contracts are instantly upgradable."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Self propose",
                        "sentiment": "good",
                        "description": "Anyone can become a Proposer after 11d 23h of inactivity from the currently whitelisted Proposers."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 29455.12,
                        "ether": 25670.77,
                        "stablecoin": 0,
                        "associated": 0
                    },
                    "change7d": -0.13812881520187692,
                    "associatedTokens": []
                }
            },
            "edgeless": {
                "id": "edgeless",
                "name": "Edgeless",
                "slug": "edgeless",
                "type": "layer2",
                "hostChain": "Ethereum",
                "category": "Optimium",
                "provider": "Arbitrum",
                "purposes": [
                    "Universal"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": false,
                "badges": [
                    {
                        "id": "EVM",
                        "type": "VM",
                        "name": "EVM",
                        "description": "This project uses the Ethereum Virtual Machine to run its smart contracts and supports the Solidity programming language"
                    },
                    {
                        "id": "CustomDA",
                        "type": "DA",
                        "name": "Custom DA solution",
                        "description": "This project is using a custom DA solution"
                    },
                    {
                        "id": "Orbit",
                        "type": "Stack",
                        "name": "Built on Arbitrum Orbit",
                        "description": "The project is built on Arbitrum Orbit"
                    },
                    {
                        "id": "Caldera",
                        "type": "RaaS",
                        "name": "Caldera",
                        "description": "This project was deployed via the rollup-as-a-service provider Caldera"
                    }
                ],
                "stage": "Not applicable",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "Self sequence",
                        "sentiment": "good",
                        "description": "In the event of a sequencer failure, users can force transactions to be included in the project's chain by sending them to L1. There can be up to a 1d delay on this operation."
                    },
                    {
                        "name": "State Validation",
                        "value": "Fraud proofs (INT)",
                        "sentiment": "bad",
                        "description": "No actor outside of the single Proposer can submit fraud proofs. Interactive proofs (INT) require multiple transactions over time to resolve. The challenge protocol can be subject to delay attacks. There is a 6d 8h challenge period."
                    },
                    {
                        "name": "Data Availability",
                        "value": "External (DAC)",
                        "sentiment": "bad",
                        "description": "Proof construction relies fully on data that is NOT published onchain. There exists a Data Availability Committee (DAC) with a threshold of 1/1 that is tasked with protecting and supplying the data."
                    },
                    {
                        "name": "Exit Window",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "There is no window for users to exit in case of an unwanted regular upgrade since contracts are instantly upgradable."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Self propose",
                        "sentiment": "good",
                        "description": "Anyone can become a Proposer after 12d 17h of inactivity from the currently whitelisted Proposers."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 25077.34,
                        "ether": 25077.34,
                        "stablecoin": 0,
                        "associated": 0
                    },
                    "change7d": -0.10947894731235108,
                    "associatedTokens": []
                }
            },
            "cheese": {
                "id": "cheese",
                "name": "CheeseChain",
                "slug": "cheese",
                "type": "layer3",
                "hostChain": "Arbitrum One",
                "category": "Optimium",
                "provider": "Arbitrum",
                "purposes": [
                    "Universal"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": true,
                "badges": [
                    {
                        "id": "EVM",
                        "type": "VM",
                        "name": "EVM",
                        "description": "This project uses the Ethereum Virtual Machine to run its smart contracts and supports the Solidity programming language"
                    },
                    {
                        "id": "Celestia",
                        "type": "DA",
                        "name": "Celestia",
                        "description": "This project is posting its data to Celestia"
                    },
                    {
                        "id": "Orbit",
                        "type": "Stack",
                        "name": "Built on Arbitrum Orbit",
                        "description": "The project is built on Arbitrum Orbit"
                    },
                    {
                        "id": "Arbitrum",
                        "type": "L3ParentChain",
                        "name": "Built on top of Arbitrum",
                        "description": "The project has Arbitrum as its host chain"
                    },
                    {
                        "id": "Caldera",
                        "type": "RaaS",
                        "name": "Caldera",
                        "description": "This project was deployed via the rollup-as-a-service provider Caldera"
                    }
                ],
                "stage": "Not applicable",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "Under Review",
                        "sentiment": "UnderReview",
                        "description": "This risk is currently under review."
                    },
                    {
                        "name": "State Validation",
                        "value": "Under Review",
                        "sentiment": "UnderReview",
                        "description": "This risk is currently under review."
                    },
                    {
                        "name": "Data Availability",
                        "value": "Under Review",
                        "sentiment": "UnderReview",
                        "description": "This risk is currently under review."
                    },
                    {
                        "name": "Exit Window",
                        "value": "Under Review",
                        "sentiment": "UnderReview",
                        "description": "This risk is currently under review."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Under Review",
                        "sentiment": "UnderReview",
                        "description": "This risk is currently under review."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 23804.67,
                        "ether": 0,
                        "stablecoin": 0,
                        "associated": 23804.67
                    },
                    "change7d": 0.21618755041973237,
                    "associatedTokens": [
                        "CHEESE"
                    ]
                }
            },
            "muster": {
                "id": "muster",
                "name": "Muster",
                "slug": "muster",
                "type": "layer3",
                "hostChain": "Arbitrum One",
                "category": "Optimium",
                "provider": "Arbitrum",
                "purposes": [
                    "Universal",
                    "Gaming"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": false,
                "badges": [
                    {
                        "id": "EVM",
                        "type": "VM",
                        "name": "EVM",
                        "description": "This project uses the Ethereum Virtual Machine to run its smart contracts and supports the Solidity programming language"
                    },
                    {
                        "id": "DAC",
                        "type": "DA",
                        "name": "Data Availability Committee",
                        "description": "There is a Data Availability Committee that provides/attests to data availability"
                    },
                    {
                        "id": "Orbit",
                        "type": "Stack",
                        "name": "Built on Arbitrum Orbit",
                        "description": "The project is built on Arbitrum Orbit"
                    },
                    {
                        "id": "AltLayer",
                        "type": "RaaS",
                        "name": "AltLayer",
                        "description": "This project was deployed via the rollup-as-a-service provider AltLayer"
                    }
                ],
                "stage": "Not applicable",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "Self sequence",
                        "sentiment": "good",
                        "description": "In the event of a sequencer failure, users can force transactions to be included in the project's chain by sending them to L1. There can be up to a 2d delay on this operation."
                    },
                    {
                        "name": "State Validation",
                        "value": "Fraud proofs (INT)",
                        "sentiment": "bad",
                        "description": "No actor outside of the single Proposer can submit fraud proofs. Interactive proofs (INT) require multiple transactions over time to resolve. The challenge protocol can be subject to delay attacks. There is a 1d challenge period."
                    },
                    {
                        "name": "Data Availability",
                        "value": "External (DAC)",
                        "sentiment": "bad",
                        "description": "Proof construction relies fully on data that is NOT published onchain. There exists a Data Availability Committee (DAC) with a threshold of 1/1 that is tasked with protecting and supplying the data."
                    },
                    {
                        "name": "Exit Window",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "There is no window for users to exit in case of an unwanted regular upgrade since contracts are instantly upgradable."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Self propose",
                        "sentiment": "good",
                        "description": "Anyone can become a Proposer after 7d 8h of inactivity from the currently whitelisted Proposers."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 18259.12,
                        "ether": 18259.12,
                        "stablecoin": 0,
                        "associated": 0
                    },
                    "change7d": -0.11670889027457354,
                    "associatedTokens": []
                }
            },
            "xterio": {
                "id": "xterio",
                "name": "Xterio Chain",
                "slug": "xterio",
                "type": "layer2",
                "hostChain": "Ethereum",
                "category": "Optimium",
                "provider": "OP Stack",
                "purposes": [
                    "Universal",
                    "Gaming"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": false,
                "badges": [
                    {
                        "id": "EVM",
                        "type": "VM",
                        "name": "EVM",
                        "description": "This project uses the Ethereum Virtual Machine to run its smart contracts and supports the Solidity programming language"
                    },
                    {
                        "id": "CustomDA",
                        "type": "DA",
                        "name": "Custom DA solution",
                        "description": "This project is using a custom DA solution"
                    },
                    {
                        "id": "OPStack",
                        "type": "Stack",
                        "name": "Built on OP Stack",
                        "description": "The project is built on the OP Stack"
                    },
                    {
                        "id": "Superchain",
                        "type": "Infra",
                        "name": "Part of the Superchain",
                        "description": "The project is part of the Superchain, meaning it's included in the Superchain registry or uses the Superchain config"
                    },
                    {
                        "id": "AltLayer",
                        "type": "RaaS",
                        "name": "AltLayer",
                        "description": "This project was deployed via the rollup-as-a-service provider AltLayer"
                    }
                ],
                "stage": "Not applicable",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "Self sequence",
                        "sentiment": "good",
                        "description": "In the event of a sequencer failure, users can force transactions to be included in the project's chain by sending them to L1. There can be up to a 12h delay on this operation."
                    },
                    {
                        "name": "State Validation",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "Currently the system permits invalid state roots. More details in project overview."
                    },
                    {
                        "name": "Data Availability",
                        "value": "External",
                        "sentiment": "bad",
                        "description": "Proof construction and state derivation rely fully on data that is NOT published onchain. A custom data availability (DA) provider without attestations is used, but data unavailability can be challenged."
                    },
                    {
                        "name": "Exit Window",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "There is no window for users to exit in case of an unwanted regular upgrade since contracts are instantly upgradable."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Cannot withdraw",
                        "sentiment": "bad",
                        "description": "Only the whitelisted proposers can publish state roots on L1, so in the event of failure the withdrawals are frozen."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 17249.36,
                        "ether": 17249.36,
                        "stablecoin": 0,
                        "associated": 0
                    },
                    "change7d": -0.10941581188924954,
                    "associatedTokens": []
                }
            },
            "syndicateframe": {
                "id": "syndicateframe",
                "name": "Syndicate Frame Chain",
                "shortName": "Frame Chain",
                "slug": "syndicateframe",
                "type": "layer3",
                "hostChain": "Base",
                "category": "Optimistic Rollup",
                "provider": "OP Stack",
                "purposes": [
                    "Universal",
                    "Social"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": false,
                "badges": [
                    {
                        "id": "EVM",
                        "type": "VM",
                        "name": "EVM",
                        "description": "This project uses the Ethereum Virtual Machine to run its smart contracts and supports the Solidity programming language"
                    },
                    {
                        "id": "EthereumBlobs",
                        "type": "DA",
                        "name": "Ethereum with blobs",
                        "description": "This project is posting its data to Ethereum as blobs"
                    },
                    {
                        "id": "OPStack",
                        "type": "Stack",
                        "name": "Built on OP Stack",
                        "description": "The project is built on the OP Stack"
                    },
                    {
                        "id": "Base",
                        "type": "L3ParentChain",
                        "name": "Built on top of Base",
                        "description": "The project has Base as its host chain"
                    },
                    {
                        "id": "Caldera",
                        "type": "RaaS",
                        "name": "Caldera",
                        "description": "This project was deployed via the rollup-as-a-service provider Caldera"
                    }
                ],
                "stage": "Stage 0",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "Self sequence",
                        "sentiment": "good",
                        "description": "In the event of a sequencer failure, users can force transactions to be included in the project's chain by sending them to L1. There can be up to a 1d delay on this operation."
                    },
                    {
                        "name": "State Validation",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "Currently the system permits invalid state roots. More details in project overview."
                    },
                    {
                        "name": "Data Availability",
                        "value": "Onchain",
                        "sentiment": "good",
                        "description": "All of the data needed for proof construction is published on Ethereum L1."
                    },
                    {
                        "name": "Exit Window",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "There is no window for users to exit in case of an unwanted regular upgrade since contracts are instantly upgradable."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Cannot withdraw",
                        "sentiment": "bad",
                        "description": "Only the whitelisted proposers can publish state roots on L1, so in the event of failure the withdrawals are frozen."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 14312.71,
                        "ether": 14312.71,
                        "stablecoin": 0,
                        "associated": 0
                    },
                    "change7d": -0.1064859583792439,
                    "associatedTokens": []
                }
            },
            "race": {
                "id": "race",
                "name": "Race Network",
                "slug": "race",
                "type": "layer2",
                "hostChain": "Ethereum",
                "category": "Optimistic Rollup",
                "provider": "OP Stack",
                "purposes": [
                    "Universal",
                    "RWA"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": false,
                "badges": [
                    {
                        "id": "EVM",
                        "type": "VM",
                        "name": "EVM",
                        "description": "This project uses the Ethereum Virtual Machine to run its smart contracts and supports the Solidity programming language"
                    },
                    {
                        "id": "EthereumBlobs",
                        "type": "DA",
                        "name": "Ethereum with blobs",
                        "description": "This project is posting its data to Ethereum as blobs"
                    },
                    {
                        "id": "OPStack",
                        "type": "Stack",
                        "name": "Built on OP Stack",
                        "description": "The project is built on the OP Stack"
                    },
                    {
                        "id": "Superchain",
                        "type": "Infra",
                        "name": "Part of the Superchain",
                        "description": "The project is part of the Superchain, meaning it's included in the Superchain registry or uses the Superchain config"
                    }
                ],
                "stage": "Stage 0",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "Self sequence",
                        "sentiment": "good",
                        "description": "In the event of a sequencer failure, users can force transactions to be included in the project's chain by sending them to L1. There can be up to a 12h delay on this operation."
                    },
                    {
                        "name": "State Validation",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "Currently the system permits invalid state roots. More details in project overview."
                    },
                    {
                        "name": "Data Availability",
                        "value": "Onchain",
                        "sentiment": "good",
                        "description": "All of the data needed for proof construction is published on Ethereum L1."
                    },
                    {
                        "name": "Exit Window",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "There is no window for users to exit in case of an unwanted regular upgrade since contracts are instantly upgradable."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Cannot withdraw",
                        "sentiment": "bad",
                        "description": "Only the whitelisted proposers can publish state roots on L1, so in the event of failure the withdrawals are frozen."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 12803.13,
                        "ether": 11922.76,
                        "stablecoin": 876.02,
                        "associated": 0
                    },
                    "change7d": -0.10235804774147506,
                    "associatedTokens": []
                }
            },
            "snaxchain": {
                "id": "snaxchain",
                "name": "SNAXchain",
                "slug": "snaxchain",
                "type": "layer2",
                "hostChain": "Ethereum",
                "category": "Optimistic Rollup",
                "provider": "OP Stack",
                "purposes": [
                    "Universal"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": true,
                "badges": [
                    {
                        "id": "EVM",
                        "type": "VM",
                        "name": "EVM",
                        "description": "This project uses the Ethereum Virtual Machine to run its smart contracts and supports the Solidity programming language"
                    },
                    {
                        "id": "OPStack",
                        "type": "Stack",
                        "name": "Built on OP Stack",
                        "description": "The project is built on the OP Stack"
                    },
                    {
                        "id": "Conduit",
                        "type": "RaaS",
                        "name": "Conduit",
                        "description": "This project was deployed via the rollup-as-a-service provider Conduit"
                    }
                ],
                "stage": "Under review",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "Under Review",
                        "sentiment": "UnderReview",
                        "description": "This risk is currently under review."
                    },
                    {
                        "name": "State Validation",
                        "value": "Under Review",
                        "sentiment": "UnderReview",
                        "description": "This risk is currently under review."
                    },
                    {
                        "name": "Data Availability",
                        "value": "Under Review",
                        "sentiment": "UnderReview",
                        "description": "This risk is currently under review."
                    },
                    {
                        "name": "Exit Window",
                        "value": "Under Review",
                        "sentiment": "UnderReview",
                        "description": "This risk is currently under review."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Under Review",
                        "sentiment": "UnderReview",
                        "description": "This risk is currently under review."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 12413.09,
                        "ether": 12413.09,
                        "stablecoin": 0,
                        "associated": 0
                    },
                    "change7d": -0.10926094955983612,
                    "associatedTokens": []
                }
            },
            "deri": {
                "id": "deri",
                "name": "Deri",
                "slug": "deri",
                "type": "layer3",
                "hostChain": "Arbitrum One",
                "category": "Optimistic Rollup",
                "provider": "Arbitrum",
                "purposes": [
                    "Universal"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": false,
                "badges": [
                    {
                        "id": "EVM",
                        "type": "VM",
                        "name": "EVM",
                        "description": "This project uses the Ethereum Virtual Machine to run its smart contracts and supports the Solidity programming language"
                    },
                    {
                        "id": "EthereumBlobs",
                        "type": "DA",
                        "name": "Ethereum with blobs",
                        "description": "This project is posting its data to Ethereum as blobs"
                    },
                    {
                        "id": "Orbit",
                        "type": "Stack",
                        "name": "Built on Arbitrum Orbit",
                        "description": "The project is built on Arbitrum Orbit"
                    },
                    {
                        "id": "Arbitrum",
                        "type": "L3ParentChain",
                        "name": "Built on top of Arbitrum",
                        "description": "The project has Arbitrum as its host chain"
                    }
                ],
                "stage": "Stage 0",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "Self sequence",
                        "sentiment": "good",
                        "description": "In the event of a sequencer failure, users can force transactions to be included in the project's chain by sending them to L1. There can be up to a 2d delay on this operation."
                    },
                    {
                        "name": "State Validation",
                        "value": "Fraud proofs (INT)",
                        "sentiment": "bad",
                        "description": "No actor outside of the single Proposer can submit fraud proofs. Interactive proofs (INT) require multiple transactions over time to resolve. The challenge protocol can be subject to delay attacks. There is a 1d challenge period."
                    },
                    {
                        "name": "Data Availability",
                        "value": "Onchain",
                        "sentiment": "good",
                        "description": "All of the data needed for proof construction is published on Ethereum L1."
                    },
                    {
                        "name": "Exit Window",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "There is no window for users to exit in case of an unwanted regular upgrade since contracts are instantly upgradable."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Self propose",
                        "sentiment": "good",
                        "description": "Anyone can become a Proposer after 7d 8h of inactivity from the currently whitelisted Proposers."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 12387.39,
                        "ether": 12387.39,
                        "stablecoin": 0,
                        "associated": 0
                    },
                    "change7d": -0.10941544062668951,
                    "associatedTokens": []
                }
            },
            "ethernity": {
                "id": "ethernity",
                "name": "Ethernity",
                "slug": "ethernity",
                "type": "layer2",
                "hostChain": "Ethereum",
                "category": "Optimistic Rollup",
                "provider": "OP Stack",
                "purposes": [
                    "Universal",
                    "AI"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": false,
                "badges": [
                    {
                        "id": "EVM",
                        "type": "VM",
                        "name": "EVM",
                        "description": "This project uses the Ethereum Virtual Machine to run its smart contracts and supports the Solidity programming language"
                    },
                    {
                        "id": "EthereumBlobs",
                        "type": "DA",
                        "name": "Ethereum with blobs",
                        "description": "This project is posting its data to Ethereum as blobs"
                    },
                    {
                        "id": "OPStack",
                        "type": "Stack",
                        "name": "Built on OP Stack",
                        "description": "The project is built on the OP Stack"
                    },
                    {
                        "id": "Superchain",
                        "type": "Infra",
                        "name": "Part of the Superchain",
                        "description": "The project is part of the Superchain, meaning it's included in the Superchain registry or uses the Superchain config"
                    },
                    {
                        "id": "Gelato",
                        "type": "RaaS",
                        "name": "Gelato",
                        "description": "This project was deployed via the rollup-as-a-service provider Gelato"
                    }
                ],
                "stage": "Stage 0",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "Self sequence",
                        "sentiment": "good",
                        "description": "In the event of a sequencer failure, users can force transactions to be included in the project's chain by sending them to L1. There can be up to a 12h delay on this operation."
                    },
                    {
                        "name": "State Validation",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "Currently the system permits invalid state roots. More details in project overview."
                    },
                    {
                        "name": "Data Availability",
                        "value": "Onchain",
                        "sentiment": "good",
                        "description": "All of the data needed for proof construction is published on Ethereum L1."
                    },
                    {
                        "name": "Exit Window",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "There is no window for users to exit in case of an unwanted regular upgrade since contracts are instantly upgradable."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Cannot withdraw",
                        "sentiment": "bad",
                        "description": "Only the whitelisted proposers can publish state roots on L1, so in the event of failure the withdrawals are frozen."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 8397.06,
                        "ether": 8304.62,
                        "stablecoin": 23.62,
                        "associated": 34.49
                    },
                    "change7d": -0.10781192890596447,
                    "associatedTokens": [
                        "ERN"
                    ]
                }
            },
            "huddle01": {
                "id": "huddle01",
                "name": "Huddle01",
                "slug": "huddle01",
                "type": "layer3",
                "hostChain": "Arbitrum One",
                "category": "Optimium",
                "provider": "Arbitrum",
                "purposes": [
                    "Information"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": true,
                "badges": [
                    {
                        "id": "EVM",
                        "type": "VM",
                        "name": "EVM",
                        "description": "This project uses the Ethereum Virtual Machine to run its smart contracts and supports the Solidity programming language"
                    },
                    {
                        "id": "DAC",
                        "type": "DA",
                        "name": "Data Availability Committee",
                        "description": "There is a Data Availability Committee that provides/attests to data availability"
                    },
                    {
                        "id": "Orbit",
                        "type": "Stack",
                        "name": "Built on Arbitrum Orbit",
                        "description": "The project is built on Arbitrum Orbit"
                    },
                    {
                        "id": "Arbitrum",
                        "type": "L3ParentChain",
                        "name": "Built on top of Arbitrum",
                        "description": "The project has Arbitrum as its host chain"
                    },
                    {
                        "id": "Caldera",
                        "type": "RaaS",
                        "name": "Caldera",
                        "description": "This project was deployed via the rollup-as-a-service provider Caldera"
                    }
                ],
                "stage": "Not applicable",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "Under Review",
                        "sentiment": "UnderReview",
                        "description": "This risk is currently under review."
                    },
                    {
                        "name": "State Validation",
                        "value": "Under Review",
                        "sentiment": "UnderReview",
                        "description": "This risk is currently under review."
                    },
                    {
                        "name": "Data Availability",
                        "value": "Under Review",
                        "sentiment": "UnderReview",
                        "description": "This risk is currently under review."
                    },
                    {
                        "name": "Exit Window",
                        "value": "Under Review",
                        "sentiment": "UnderReview",
                        "description": "This risk is currently under review."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Under Review",
                        "sentiment": "UnderReview",
                        "description": "This risk is currently under review."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 4919.54,
                        "ether": 4919.54,
                        "stablecoin": 0,
                        "associated": 0
                    },
                    "change7d": -0.09511222945096498,
                    "associatedTokens": []
                }
            },
            "automata": {
                "id": "automata",
                "name": "Automata",
                "slug": "automata",
                "type": "layer2",
                "hostChain": "Ethereum",
                "category": "Optimium",
                "provider": "OP Stack",
                "purposes": [
                    "Universal"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": false,
                "badges": [
                    {
                        "id": "EVM",
                        "type": "VM",
                        "name": "EVM",
                        "description": "This project uses the Ethereum Virtual Machine to run its smart contracts and supports the Solidity programming language"
                    },
                    {
                        "id": "DAC",
                        "type": "DA",
                        "name": "Data Availability Committee",
                        "description": "There is a Data Availability Committee that provides/attests to data availability"
                    },
                    {
                        "id": "OPStack",
                        "type": "Stack",
                        "name": "Built on OP Stack",
                        "description": "The project is built on the OP Stack"
                    },
                    {
                        "id": "Superchain",
                        "type": "Infra",
                        "name": "Part of the Superchain",
                        "description": "The project is part of the Superchain, meaning it's included in the Superchain registry or uses the Superchain config"
                    },
                    {
                        "id": "AltLayer",
                        "type": "RaaS",
                        "name": "AltLayer",
                        "description": "This project was deployed via the rollup-as-a-service provider AltLayer"
                    }
                ],
                "stage": "Not applicable",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "Self sequence",
                        "sentiment": "good",
                        "description": "In the event of a sequencer failure, users can force transactions to be included in the project's chain by sending them to L1. There can be up to a 12h delay on this operation."
                    },
                    {
                        "name": "State Validation",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "Currently the system permits invalid state roots. More details in project overview."
                    },
                    {
                        "name": "Data Availability",
                        "value": "External",
                        "sentiment": "bad",
                        "description": "Proof construction and state derivation rely fully on data that is NOT published onchain. A custom data availability (DA) provider without attestations is used, but data unavailability can be challenged."
                    },
                    {
                        "name": "Exit Window",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "There is no window for users to exit in case of an unwanted regular upgrade since contracts are instantly upgradable."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Cannot withdraw",
                        "sentiment": "bad",
                        "description": "Only the whitelisted proposers can publish state roots on L1, so in the event of failure the withdrawals are frozen."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 4363.38,
                        "ether": 0,
                        "stablecoin": 0,
                        "associated": 4363.38
                    },
                    "change7d": -0.07486711516403088,
                    "associatedTokens": [
                        "ATA"
                    ]
                }
            },
            "l3x": {
                "id": "l3x",
                "name": "L3X",
                "slug": "l3x",
                "type": "layer3",
                "hostChain": "Arbitrum One",
                "category": "Optimium",
                "provider": "Arbitrum",
                "purposes": [
                    "Universal"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": false,
                "badges": [
                    {
                        "id": "EVM",
                        "type": "VM",
                        "name": "EVM",
                        "description": "This project uses the Ethereum Virtual Machine to run its smart contracts and supports the Solidity programming language"
                    },
                    {
                        "id": "DAC",
                        "type": "DA",
                        "name": "Data Availability Committee",
                        "description": "There is a Data Availability Committee that provides/attests to data availability"
                    },
                    {
                        "id": "Orbit",
                        "type": "Stack",
                        "name": "Built on Arbitrum Orbit",
                        "description": "The project is built on Arbitrum Orbit"
                    },
                    {
                        "id": "Arbitrum",
                        "type": "L3ParentChain",
                        "name": "Built on top of Arbitrum",
                        "description": "The project has Arbitrum as its host chain"
                    }
                ],
                "stage": "Not applicable",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "Self sequence",
                        "sentiment": "good",
                        "description": "In the event of a sequencer failure, users can force transactions to be included in the project's chain by sending them to L1. There can be up to a 2d delay on this operation."
                    },
                    {
                        "name": "State Validation",
                        "value": "Fraud proofs (INT)",
                        "sentiment": "bad",
                        "description": "No actor outside of the single Proposer can submit fraud proofs. Interactive proofs (INT) require multiple transactions over time to resolve. The challenge protocol can be subject to delay attacks. There is a 1d challenge period."
                    },
                    {
                        "name": "Data Availability",
                        "value": "External (DAC)",
                        "sentiment": "bad",
                        "description": "Proof construction relies fully on data that is NOT published onchain. There exists a Data Availability Committee (DAC) with a threshold of 1/1 that is tasked with protecting and supplying the data."
                    },
                    {
                        "name": "Exit Window",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "There is no window for users to exit in case of an unwanted regular upgrade since contracts are instantly upgradable."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Self propose",
                        "sentiment": "good",
                        "description": "Anyone can become a Proposer after 7d 8h of inactivity from the currently whitelisted Proposers."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 3111.04,
                        "ether": 3109.03,
                        "stablecoin": 2.01,
                        "associated": 0
                    },
                    "change7d": -0.1094725030628485,
                    "associatedTokens": []
                }
            },
            "stack": {
                "id": "stack",
                "name": "Stack",
                "slug": "stack",
                "type": "layer3",
                "hostChain": "Base",
                "category": "Optimium",
                "provider": "OP Stack",
                "purposes": [
                    "Universal",
                    "Social"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": false,
                "badges": [
                    {
                        "id": "EVM",
                        "type": "VM",
                        "name": "EVM",
                        "description": "This project uses the Ethereum Virtual Machine to run its smart contracts and supports the Solidity programming language"
                    },
                    {
                        "id": "Celestia",
                        "type": "DA",
                        "name": "Celestia",
                        "description": "This project is posting its data to Celestia"
                    },
                    {
                        "id": "OPStack",
                        "type": "Stack",
                        "name": "Built on OP Stack",
                        "description": "The project is built on the OP Stack"
                    },
                    {
                        "id": "Base",
                        "type": "L3ParentChain",
                        "name": "Built on top of Base",
                        "description": "The project has Base as its host chain"
                    },
                    {
                        "id": "Conduit",
                        "type": "RaaS",
                        "name": "Conduit",
                        "description": "This project was deployed via the rollup-as-a-service provider Conduit"
                    }
                ],
                "stage": "Not applicable",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "Self sequence",
                        "sentiment": "good",
                        "description": "In the event of a sequencer failure, users can force transactions to be included in the project's chain by sending them to L1. There can be up to a 1d delay on this operation."
                    },
                    {
                        "name": "State Validation",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "Currently the system permits invalid state roots. More details in project overview."
                    },
                    {
                        "name": "Data Availability",
                        "value": "External",
                        "sentiment": "bad",
                        "description": "Proof construction and state derivation fully rely on data that is posted on Celestia. Sequencer tx roots are not checked against the Blobstream bridge data roots onchain, but L2 nodes can verify data availability by running a Celestia light client."
                    },
                    {
                        "name": "Exit Window",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "There is no window for users to exit in case of an unwanted regular upgrade since contracts are instantly upgradable."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Cannot withdraw",
                        "sentiment": "bad",
                        "description": "Only the whitelisted proposers can publish state roots on L1, so in the event of failure the withdrawals are frozen."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 2362.67,
                        "ether": 2362.67,
                        "stablecoin": 0,
                        "associated": 0
                    },
                    "change7d": -0.10941781790082739,
                    "associatedTokens": []
                }
            },
            "phala": {
                "id": "phala",
                "name": "Phala",
                "slug": "phala",
                "type": "layer2",
                "hostChain": "Ethereum",
                "category": "ZK Rollup",
                "purposes": [
                    "Universal"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": false,
                "badges": [
                    {
                        "id": "EVM",
                        "type": "VM",
                        "name": "EVM",
                        "description": "This project uses the Ethereum Virtual Machine to run its smart contracts and supports the Solidity programming language"
                    },
                    {
                        "id": "EthereumBlobs",
                        "type": "DA",
                        "name": "Ethereum with blobs",
                        "description": "This project is posting its data to Ethereum as blobs"
                    },
                    {
                        "id": "Conduit",
                        "type": "RaaS",
                        "name": "Conduit",
                        "description": "This project was deployed via the rollup-as-a-service provider Conduit"
                    }
                ],
                "stage": "Stage 0",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "Self sequence",
                        "sentiment": "good",
                        "description": "In the event of a sequencer failure, users can force transactions to be included in the project's chain by sending them to L1. There can be up to a 12h delay on this operation."
                    },
                    {
                        "name": "State Validation",
                        "value": "ZK proofs (SN)",
                        "sentiment": "good",
                        "description": "SNARKs are zero knowledge proofs that ensure state correctness, but require trusted setup."
                    },
                    {
                        "name": "Data Availability",
                        "value": "Onchain",
                        "sentiment": "good",
                        "description": "All of the data needed for proof construction is published on Ethereum L1."
                    },
                    {
                        "name": "Exit Window",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "There is no window for users to exit in case of an unwanted regular upgrade since contracts are instantly upgradable."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Cannot withdraw",
                        "sentiment": "bad",
                        "description": "Only the whitelisted proposers can publish state roots on L1, so in the event of failure the withdrawals are frozen."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 2227.28,
                        "ether": 2227.28,
                        "stablecoin": 0,
                        "associated": 0
                    },
                    "change7d": -0.10941573500951651,
                    "associatedTokens": []
                }
            },
            "kontos": {
                "id": "kontos",
                "name": "Kontos",
                "slug": "kontos",
                "type": "layer2",
                "hostChain": "Ethereum",
                "category": "ZK Rollup",
                "purposes": [
                    "Universal"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": true,
                "badges": [],
                "stage": "Under review",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "Under Review",
                        "sentiment": "UnderReview",
                        "description": "This risk is currently under review."
                    },
                    {
                        "name": "State Validation",
                        "value": "Under Review",
                        "sentiment": "UnderReview",
                        "description": "This risk is currently under review."
                    },
                    {
                        "name": "Data Availability",
                        "value": "Under Review",
                        "sentiment": "UnderReview",
                        "description": "This risk is currently under review."
                    },
                    {
                        "name": "Exit Window",
                        "value": "Under Review",
                        "sentiment": "UnderReview",
                        "description": "This risk is currently under review."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Under Review",
                        "sentiment": "UnderReview",
                        "description": "This risk is currently under review."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 1973.64,
                        "ether": 921.68,
                        "stablecoin": 1026.34,
                        "associated": 0
                    },
                    "change7d": -0.05510046774834465,
                    "associatedTokens": []
                }
            },
            "donatuz": {
                "id": "donatuz",
                "name": "Donatuz",
                "slug": "donatuz",
                "type": "layer3",
                "hostChain": "Base",
                "category": "Optimium",
                "provider": "OP Stack",
                "purposes": [
                    "Universal",
                    "Social"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": false,
                "badges": [
                    {
                        "id": "EVM",
                        "type": "VM",
                        "name": "EVM",
                        "description": "This project uses the Ethereum Virtual Machine to run its smart contracts and supports the Solidity programming language"
                    },
                    {
                        "id": "EigenDA",
                        "type": "DA",
                        "name": "EigenDA",
                        "description": "This project is posting its data to EigenDA"
                    },
                    {
                        "id": "OPStack",
                        "type": "Stack",
                        "name": "Built on OP Stack",
                        "description": "The project is built on the OP Stack"
                    },
                    {
                        "id": "Base",
                        "type": "L3ParentChain",
                        "name": "Built on top of Base",
                        "description": "The project has Base as its host chain"
                    },
                    {
                        "id": "Conduit",
                        "type": "RaaS",
                        "name": "Conduit",
                        "description": "This project was deployed via the rollup-as-a-service provider Conduit"
                    }
                ],
                "stage": "Not applicable",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "Self sequence",
                        "sentiment": "good",
                        "description": "In the event of a sequencer failure, users can force transactions to be included in the project's chain by sending them to L1. There can be up to a 1d delay on this operation."
                    },
                    {
                        "name": "State Validation",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "Currently the system permits invalid state roots. More details in project overview."
                    },
                    {
                        "name": "Data Availability",
                        "value": "External",
                        "sentiment": "bad",
                        "description": "Proof construction and state derivation fully rely on data that is posted on EigenDA. Sequencer transaction data roots are not checked against the ServiceManager DA bridge data roots onchain."
                    },
                    {
                        "name": "Exit Window",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "There is no window for users to exit in case of an unwanted regular upgrade since contracts are instantly upgradable."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Cannot withdraw",
                        "sentiment": "bad",
                        "description": "Only the whitelisted proposers can publish state roots on L1, so in the event of failure the withdrawals are frozen."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 1638.49,
                        "ether": 1638.49,
                        "stablecoin": 0,
                        "associated": 0
                    },
                    "change7d": -0.09902285861968474,
                    "associatedTokens": []
                }
            },
            "clique": {
                "id": "clique",
                "name": "Clique",
                "slug": "clique",
                "type": "layer3",
                "hostChain": "Base",
                "category": "Optimium",
                "provider": "OP Stack",
                "purposes": [
                    "AI",
                    "Gaming"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": true,
                "badges": [
                    {
                        "id": "EVM",
                        "type": "VM",
                        "name": "EVM",
                        "description": "This project uses the Ethereum Virtual Machine to run its smart contracts and supports the Solidity programming language"
                    },
                    {
                        "id": "Celestia",
                        "type": "DA",
                        "name": "Celestia",
                        "description": "This project is posting its data to Celestia"
                    },
                    {
                        "id": "OPStack",
                        "type": "Stack",
                        "name": "Built on OP Stack",
                        "description": "The project is built on the OP Stack"
                    },
                    {
                        "id": "Base",
                        "type": "L3ParentChain",
                        "name": "Built on top of Base",
                        "description": "The project has Base as its host chain"
                    },
                    {
                        "id": "Conduit",
                        "type": "RaaS",
                        "name": "Conduit",
                        "description": "This project was deployed via the rollup-as-a-service provider Conduit"
                    }
                ],
                "stage": "Not applicable",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "Under Review",
                        "sentiment": "UnderReview",
                        "description": "This risk is currently under review."
                    },
                    {
                        "name": "State Validation",
                        "value": "Under Review",
                        "sentiment": "UnderReview",
                        "description": "This risk is currently under review."
                    },
                    {
                        "name": "Data Availability",
                        "value": "Under Review",
                        "sentiment": "UnderReview",
                        "description": "This risk is currently under review."
                    },
                    {
                        "name": "Exit Window",
                        "value": "Under Review",
                        "sentiment": "UnderReview",
                        "description": "This risk is currently under review."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Under Review",
                        "sentiment": "UnderReview",
                        "description": "This risk is currently under review."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 1419.03,
                        "ether": 1419.03,
                        "stablecoin": 0,
                        "associated": 0
                    },
                    "change7d": -0.12272881827455107,
                    "associatedTokens": []
                }
            },
            "henez": {
                "id": "henez",
                "name": "Henez",
                "slug": "henez",
                "type": "layer3",
                "hostChain": "Arbitrum One",
                "category": "Optimium",
                "provider": "Arbitrum",
                "purposes": [
                    "Universal"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": true,
                "badges": [
                    {
                        "id": "EVM",
                        "type": "VM",
                        "name": "EVM",
                        "description": "This project uses the Ethereum Virtual Machine to run its smart contracts and supports the Solidity programming language"
                    },
                    {
                        "id": "DAC",
                        "type": "DA",
                        "name": "Data Availability Committee",
                        "description": "There is a Data Availability Committee that provides/attests to data availability"
                    },
                    {
                        "id": "Orbit",
                        "type": "Stack",
                        "name": "Built on Arbitrum Orbit",
                        "description": "The project is built on Arbitrum Orbit"
                    },
                    {
                        "id": "Arbitrum",
                        "type": "L3ParentChain",
                        "name": "Built on top of Arbitrum",
                        "description": "The project has Arbitrum as its host chain"
                    },
                    {
                        "id": "Caldera",
                        "type": "RaaS",
                        "name": "Caldera",
                        "description": "This project was deployed via the rollup-as-a-service provider Caldera"
                    }
                ],
                "stage": "Not applicable",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "Under Review",
                        "sentiment": "UnderReview",
                        "description": "This risk is currently under review."
                    },
                    {
                        "name": "State Validation",
                        "value": "Under Review",
                        "sentiment": "UnderReview",
                        "description": "This risk is currently under review."
                    },
                    {
                        "name": "Data Availability",
                        "value": "Under Review",
                        "sentiment": "UnderReview",
                        "description": "This risk is currently under review."
                    },
                    {
                        "name": "Exit Window",
                        "value": "Under Review",
                        "sentiment": "UnderReview",
                        "description": "This risk is currently under review."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Under Review",
                        "sentiment": "UnderReview",
                        "description": "This risk is currently under review."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 1217.9,
                        "ether": 1217.9,
                        "stablecoin": 0,
                        "associated": 0
                    },
                    "change7d": -0.04113687359760654,
                    "associatedTokens": []
                }
            },
            "forta": {
                "id": "forta",
                "name": "Forta",
                "slug": "forta",
                "type": "layer3",
                "hostChain": "Arbitrum One",
                "category": "Optimistic Rollup",
                "provider": "Arbitrum",
                "purposes": [
                    "Universal"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": true,
                "badges": [],
                "stage": "Under review",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "Under Review",
                        "sentiment": "UnderReview",
                        "description": "This risk is currently under review."
                    },
                    {
                        "name": "State Validation",
                        "value": "Under Review",
                        "sentiment": "UnderReview",
                        "description": "This risk is currently under review."
                    },
                    {
                        "name": "Data Availability",
                        "value": "Under Review",
                        "sentiment": "UnderReview",
                        "description": "This risk is currently under review."
                    },
                    {
                        "name": "Exit Window",
                        "value": "Under Review",
                        "sentiment": "UnderReview",
                        "description": "This risk is currently under review."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Under Review",
                        "sentiment": "UnderReview",
                        "description": "This risk is currently under review."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 888.63,
                        "ether": 0,
                        "stablecoin": 0,
                        "associated": 0
                    },
                    "change7d": -0.04012832422389767,
                    "associatedTokens": []
                }
            },
            "fuelv1": {
                "id": "fuelv1",
                "name": "Fuel v1",
                "slug": "fuelv1",
                "type": "layer2",
                "hostChain": "Ethereum",
                "category": "Optimistic Rollup",
                "purposes": [
                    "Payments"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": false,
                "badges": [
                    {
                        "id": "AppChain",
                        "type": "VM",
                        "name": "Application-specific chain",
                        "description": "This project is built to operate a specific application"
                    },
                    {
                        "id": "EthereumCalldata",
                        "type": "DA",
                        "name": "Ethereum with calldata",
                        "description": "This project is posting its data to Ethereum as calldata"
                    }
                ],
                "stage": "Stage 2",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "Self sequence",
                        "sentiment": "good",
                        "description": "In the event of a sequencer failure, users can force transactions to be included in the project's chain by sending them to L1."
                    },
                    {
                        "name": "State Validation",
                        "value": "Fraud proofs (1R)",
                        "sentiment": "good",
                        "description": "Fraud proofs allow actors watching the chain to prove that the state is incorrect. Single round proofs (1R) only require a single transaction to resolve."
                    },
                    {
                        "name": "Data Availability",
                        "value": "Onchain",
                        "sentiment": "good",
                        "description": "All of the data needed for proof construction is published on Ethereum L1."
                    },
                    {
                        "name": "Exit Window",
                        "value": "∞",
                        "sentiment": "good",
                        "description": "Users can exit funds at any time because contracts are not upgradeable."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Self propose",
                        "sentiment": "good",
                        "description": "Anyone can be a Proposer and propose new roots to the L1 bridge."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 558.93,
                        "ether": 540.95,
                        "stablecoin": 17.98,
                        "associated": 0
                    },
                    "change7d": -0.10626968771486589,
                    "associatedTokens": []
                }
            },
            "pmon": {
                "id": "pmon",
                "name": "PMON Chain",
                "slug": "pmon",
                "type": "layer3",
                "hostChain": "Arbitrum One",
                "category": "Optimium",
                "provider": "Arbitrum",
                "purposes": [
                    "Gaming",
                    "NFT"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": true,
                "badges": [
                    {
                        "id": "EVM",
                        "type": "VM",
                        "name": "EVM",
                        "description": "This project uses the Ethereum Virtual Machine to run its smart contracts and supports the Solidity programming language"
                    },
                    {
                        "id": "Celestia",
                        "type": "DA",
                        "name": "Celestia",
                        "description": "This project is posting its data to Celestia"
                    },
                    {
                        "id": "Orbit",
                        "type": "Stack",
                        "name": "Built on Arbitrum Orbit",
                        "description": "The project is built on Arbitrum Orbit"
                    },
                    {
                        "id": "Arbitrum",
                        "type": "L3ParentChain",
                        "name": "Built on top of Arbitrum",
                        "description": "The project has Arbitrum as its host chain"
                    },
                    {
                        "id": "AltLayer",
                        "type": "RaaS",
                        "name": "AltLayer",
                        "description": "This project was deployed via the rollup-as-a-service provider AltLayer"
                    }
                ],
                "stage": "Not applicable",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "Under Review",
                        "sentiment": "UnderReview",
                        "description": "This risk is currently under review."
                    },
                    {
                        "name": "State Validation",
                        "value": "Under Review",
                        "sentiment": "UnderReview",
                        "description": "This risk is currently under review."
                    },
                    {
                        "name": "Data Availability",
                        "value": "Under Review",
                        "sentiment": "UnderReview",
                        "description": "This risk is currently under review."
                    },
                    {
                        "name": "Exit Window",
                        "value": "Under Review",
                        "sentiment": "UnderReview",
                        "description": "This risk is currently under review."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Under Review",
                        "sentiment": "UnderReview",
                        "description": "This risk is currently under review."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 543.32,
                        "ether": 0,
                        "stablecoin": 0,
                        "associated": 543.32
                    },
                    "change7d": -0.07938390633207382,
                    "associatedTokens": [
                        "PMON"
                    ]
                }
            },
            "bugbuster": {
                "id": "bugbuster",
                "name": "Bug Buster",
                "slug": "bugbuster",
                "type": "layer3",
                "hostChain": "OP Mainnet",
                "category": "Optimistic Rollup",
                "provider": "Cartesi Rollups",
                "purposes": [
                    "Bug bounty"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": false,
                "badges": [
                    {
                        "id": "AppChain",
                        "type": "VM",
                        "name": "Application-specific chain",
                        "description": "This project is built to operate a specific application"
                    },
                    {
                        "id": "CartesiVM",
                        "type": "VM",
                        "name": "CartesiVM",
                        "description": "This project uses the Cartesi Machine to run its smart contracts and supports any programming language that can be ported to RISC-V architecture"
                    },
                    {
                        "id": "EthereumBlobs",
                        "type": "DA",
                        "name": "Ethereum with blobs",
                        "description": "This project is posting its data to Ethereum as blobs"
                    },
                    {
                        "id": "Cartesi",
                        "type": "Stack",
                        "name": "Built on the Cartesi stack",
                        "description": "The project is built on the Cartesi stack"
                    },
                    {
                        "id": "OpMainnet",
                        "type": "L3ParentChain",
                        "name": "Built on top of OP Mainnet",
                        "description": "The project has OP Mainnet as its host chain"
                    }
                ],
                "stage": "Stage 0",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "Self sequence",
                        "sentiment": "good",
                        "description": "In the event of a sequencer failure, users can force transactions to be included in the project's chain by sending them to L1. There can be up to a 12h delay on this operation."
                    },
                    {
                        "name": "State Validation",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "Currently the system permits invalid state roots. More details in project overview."
                    },
                    {
                        "name": "Data Availability",
                        "value": "Onchain",
                        "sentiment": "good",
                        "description": "All of the data needed for proof construction is published on the base chain, which ultimately gets published on Ethereum."
                    },
                    {
                        "name": "Exit Window",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "There is no window for users to exit in case of an unwanted regular upgrade since contracts are instantly upgradable."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Cannot withdraw",
                        "sentiment": "bad",
                        "description": "Only the whitelisted proposers can publish state roots on L1, so in the event of failure the withdrawals are frozen."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 320.59,
                        "ether": 0,
                        "stablecoin": 0,
                        "associated": 0
                    },
                    "change7d": -0.09908669383167068,
                    "associatedTokens": []
                }
            },
            "r0ar": {
                "id": "r0ar",
                "name": "R0ar",
                "slug": "r0ar",
                "type": "layer2",
                "hostChain": "Ethereum",
                "category": "Optimistic Rollup",
                "provider": "OP Stack",
                "purposes": [
                    "Universal"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": true,
                "badges": [
                    {
                        "id": "EVM",
                        "type": "VM",
                        "name": "EVM",
                        "description": "This project uses the Ethereum Virtual Machine to run its smart contracts and supports the Solidity programming language"
                    },
                    {
                        "id": "OPStack",
                        "type": "Stack",
                        "name": "Built on OP Stack",
                        "description": "The project is built on the OP Stack"
                    },
                    {
                        "id": "Zeeve",
                        "type": "RaaS",
                        "name": "Zeeve",
                        "description": "This project was deployed via the rollup-as-a-service provider Zeeve"
                    }
                ],
                "stage": "Under review",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "Under Review",
                        "sentiment": "UnderReview",
                        "description": "This risk is currently under review."
                    },
                    {
                        "name": "State Validation",
                        "value": "Under Review",
                        "sentiment": "UnderReview",
                        "description": "This risk is currently under review."
                    },
                    {
                        "name": "Data Availability",
                        "value": "Under Review",
                        "sentiment": "UnderReview",
                        "description": "This risk is currently under review."
                    },
                    {
                        "name": "Exit Window",
                        "value": "Under Review",
                        "sentiment": "UnderReview",
                        "description": "This risk is currently under review."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Under Review",
                        "sentiment": "UnderReview",
                        "description": "This risk is currently under review."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 271.33,
                        "ether": 271.33,
                        "stablecoin": 0,
                        "associated": 0
                    },
                    "change7d": -0.10942987494666356,
                    "associatedTokens": []
                }
            },
            "rufus": {
                "id": "rufus",
                "name": "Rufus",
                "slug": "rufus",
                "type": "layer2",
                "hostChain": "Ethereum",
                "category": "Optimium",
                "provider": "Arbitrum",
                "purposes": [
                    "Gaming"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": true,
                "badges": [
                    {
                        "id": "EVM",
                        "type": "VM",
                        "name": "EVM",
                        "description": "This project uses the Ethereum Virtual Machine to run its smart contracts and supports the Solidity programming language"
                    },
                    {
                        "id": "DAC",
                        "type": "DA",
                        "name": "Data Availability Committee",
                        "description": "There is a Data Availability Committee that provides/attests to data availability"
                    },
                    {
                        "id": "Orbit",
                        "type": "Stack",
                        "name": "Built on Arbitrum Orbit",
                        "description": "The project is built on Arbitrum Orbit"
                    },
                    {
                        "id": "Caldera",
                        "type": "RaaS",
                        "name": "Caldera",
                        "description": "This project was deployed via the rollup-as-a-service provider Caldera"
                    }
                ],
                "stage": "Not applicable",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "Under Review",
                        "sentiment": "UnderReview",
                        "description": "This risk is currently under review."
                    },
                    {
                        "name": "State Validation",
                        "value": "Under Review",
                        "sentiment": "UnderReview",
                        "description": "This risk is currently under review."
                    },
                    {
                        "name": "Data Availability",
                        "value": "Under Review",
                        "sentiment": "UnderReview",
                        "description": "This risk is currently under review."
                    },
                    {
                        "name": "Exit Window",
                        "value": "Under Review",
                        "sentiment": "UnderReview",
                        "description": "This risk is currently under review."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Under Review",
                        "sentiment": "UnderReview",
                        "description": "This risk is currently under review."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 8.33,
                        "ether": 0,
                        "stablecoin": 0,
                        "associated": 8.33
                    },
                    "change7d": -0.038106235565819824,
                    "associatedTokens": [
                        "ELON"
                    ]
                }
            },
            "grvt": {
                "id": "grvt",
                "name": "GRVT",
                "slug": "grvt",
                "type": "layer2",
                "hostChain": "Ethereum",
                "category": "Validium",
                "provider": "ZK Stack",
                "purposes": [
                    "Universal",
                    "Gaming"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": false,
                "badges": [
                    {
                        "id": "EVM",
                        "type": "VM",
                        "name": "EVM",
                        "description": "This project uses the Ethereum Virtual Machine to run its smart contracts and supports the Solidity programming language"
                    },
                    {
                        "id": "CustomDA",
                        "type": "DA",
                        "name": "Custom DA solution",
                        "description": "This project is using a custom DA solution"
                    },
                    {
                        "id": "ZKStack",
                        "type": "Stack",
                        "name": "Built on the ZK Stack",
                        "description": "The project is built on the ZK Stack"
                    },
                    {
                        "id": "ElasticChain",
                        "type": "Infra",
                        "name": "Part of the Elastic Chain",
                        "description": "The project is part of the Elastic Chain, meaning it's based on the ZK stack and uses the shared contracts"
                    }
                ],
                "stage": "Not applicable",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "No mechanism",
                        "sentiment": "bad",
                        "description": "There is no mechanism to have transactions be included if the sequencer is down or censoring. The Operator actively uses a TransactionFilterer contract, which requires accounts that enqueue or force transactions from L1 to be whitelisted."
                    },
                    {
                        "name": "State Validation",
                        "value": "ZK proofs (ST, SN)",
                        "sentiment": "good",
                        "description": "STARKs and SNARKs are zero knowledge proofs that ensure state correctness. STARKs proofs are wrapped in SNARKs proofs for efficiency. SNARKs require a trusted setup."
                    },
                    {
                        "name": "Data Availability",
                        "value": "External",
                        "sentiment": "bad",
                        "description": "Proof construction and state derivation rely fully on data that is NOT published onchain."
                    },
                    {
                        "name": "Exit Window",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "There is no window for users to exit in case of an unwanted standard upgrade because the central operator can censor withdrawal transactions by implementing a TransactionFilterer with no delay. The standard upgrade delay is 4d 3h."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Cannot withdraw",
                        "sentiment": "warning",
                        "description": "Only the whitelisted proposers can publish state roots on L1, so in the event of failure the withdrawals are frozen. There is a decentralized Governance system that can attempt changing Proposers with an upgrade."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 0,
                        "associated": 0,
                        "ether": 0,
                        "stablecoin": 0
                    },
                    "change7d": 0,
                    "associatedTokens": []
                }
            },
            "pandasea": {
                "id": "pandasea",
                "name": "PandaSea",
                "slug": "pandasea",
                "type": "layer2",
                "hostChain": "Ethereum",
                "category": "Optimistic Rollup",
                "provider": "OP Stack",
                "purposes": [
                    "Universal"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": true,
                "badges": [
                    {
                        "id": "EVM",
                        "type": "VM",
                        "name": "EVM",
                        "description": "This project uses the Ethereum Virtual Machine to run its smart contracts and supports the Solidity programming language"
                    },
                    {
                        "id": "OPStack",
                        "type": "Stack",
                        "name": "Built on OP Stack",
                        "description": "The project is built on the OP Stack"
                    },
                    {
                        "id": "Zeeve",
                        "type": "RaaS",
                        "name": "Zeeve",
                        "description": "This project was deployed via the rollup-as-a-service provider Zeeve"
                    }
                ],
                "stage": "Under review",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "Under Review",
                        "sentiment": "UnderReview",
                        "description": "This risk is currently under review."
                    },
                    {
                        "name": "State Validation",
                        "value": "Under Review",
                        "sentiment": "UnderReview",
                        "description": "This risk is currently under review."
                    },
                    {
                        "name": "Data Availability",
                        "value": "Under Review",
                        "sentiment": "UnderReview",
                        "description": "This risk is currently under review."
                    },
                    {
                        "name": "Exit Window",
                        "value": "Under Review",
                        "sentiment": "UnderReview",
                        "description": "This risk is currently under review."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Under Review",
                        "sentiment": "UnderReview",
                        "description": "This risk is currently under review."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 0,
                        "associated": 0,
                        "ether": 0,
                        "stablecoin": 0
                    },
                    "change7d": 0,
                    "associatedTokens": []
                }
            },
            "apechain": {
                "id": "apechain",
                "name": "ApeChain",
                "slug": "apechain",
                "type": "layer3",
                "hostChain": "Arbitrum One",
                "category": "Optimium",
                "provider": "Arbitrum",
                "purposes": [
                    "Universal"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": false,
                "badges": [
                    {
                        "id": "EVM",
                        "type": "VM",
                        "name": "EVM",
                        "description": "This project uses the Ethereum Virtual Machine to run its smart contracts and supports the Solidity programming language"
                    },
                    {
                        "id": "DAC",
                        "type": "DA",
                        "name": "Data Availability Committee",
                        "description": "There is a Data Availability Committee that provides/attests to data availability"
                    },
                    {
                        "id": "Orbit",
                        "type": "Stack",
                        "name": "Built on Arbitrum Orbit",
                        "description": "The project is built on Arbitrum Orbit"
                    },
                    {
                        "id": "Arbitrum",
                        "type": "L3ParentChain",
                        "name": "Built on top of Arbitrum",
                        "description": "The project has Arbitrum as its host chain"
                    },
                    {
                        "id": "Caldera",
                        "type": "RaaS",
                        "name": "Caldera",
                        "description": "This project was deployed via the rollup-as-a-service provider Caldera"
                    }
                ],
                "stage": "Not applicable",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "Self sequence",
                        "sentiment": "good",
                        "description": "In the event of a sequencer failure, users can force transactions to be included in the project's chain by sending them to L1. There can be up to a 4d delay on this operation."
                    },
                    {
                        "name": "State Validation",
                        "value": "Fraud proofs (INT)",
                        "sentiment": "bad",
                        "description": "No actor outside of the single Proposer can submit fraud proofs. Interactive proofs (INT) require multiple transactions over time to resolve. The challenge protocol can be subject to delay attacks. There is a 6d 8h challenge period."
                    },
                    {
                        "name": "Data Availability",
                        "value": "External (DAC)",
                        "sentiment": "bad",
                        "description": "Proof construction relies fully on data that is NOT published onchain. There exists a Data Availability Committee (DAC) with a threshold of 5/7 that is tasked with protecting and supplying the data."
                    },
                    {
                        "name": "Exit Window",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "There is no window for users to exit in case of an unwanted regular upgrade since contracts are instantly upgradable."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Self propose",
                        "sentiment": "good",
                        "description": "Anyone can become a Proposer after 12d 17h of inactivity from the currently whitelisted Proposers."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 0,
                        "associated": 0,
                        "ether": 0,
                        "stablecoin": 0
                    },
                    "change7d": 0,
                    "associatedTokens": []
                }
            },
            "bitlazer": {
                "id": "bitlazer",
                "name": "Bitlazer",
                "slug": "bitlazer",
                "type": "layer3",
                "hostChain": "Arbitrum One",
                "category": "Optimium",
                "provider": "Arbitrum",
                "purposes": [
                    "Bitcoin DApps"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": true,
                "badges": [
                    {
                        "id": "EVM",
                        "type": "VM",
                        "name": "EVM",
                        "description": "This project uses the Ethereum Virtual Machine to run its smart contracts and supports the Solidity programming language"
                    },
                    {
                        "id": "DAC",
                        "type": "DA",
                        "name": "Data Availability Committee",
                        "description": "There is a Data Availability Committee that provides/attests to data availability"
                    },
                    {
                        "id": "Orbit",
                        "type": "Stack",
                        "name": "Built on Arbitrum Orbit",
                        "description": "The project is built on Arbitrum Orbit"
                    },
                    {
                        "id": "Arbitrum",
                        "type": "L3ParentChain",
                        "name": "Built on top of Arbitrum",
                        "description": "The project has Arbitrum as its host chain"
                    },
                    {
                        "id": "Caldera",
                        "type": "RaaS",
                        "name": "Caldera",
                        "description": "This project was deployed via the rollup-as-a-service provider Caldera"
                    }
                ],
                "stage": "Not applicable",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "Under Review",
                        "sentiment": "UnderReview",
                        "description": "This risk is currently under review."
                    },
                    {
                        "name": "State Validation",
                        "value": "Under Review",
                        "sentiment": "UnderReview",
                        "description": "This risk is currently under review."
                    },
                    {
                        "name": "Data Availability",
                        "value": "Under Review",
                        "sentiment": "UnderReview",
                        "description": "This risk is currently under review."
                    },
                    {
                        "name": "Exit Window",
                        "value": "Under Review",
                        "sentiment": "UnderReview",
                        "description": "This risk is currently under review."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Under Review",
                        "sentiment": "UnderReview",
                        "description": "This risk is currently under review."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 0,
                        "ether": 0,
                        "stablecoin": 0,
                        "associated": 0
                    },
                    "change7d": 0,
                    "associatedTokens": []
                }
            },
            "blockfit": {
                "id": "blockfit",
                "name": "BlockFit",
                "slug": "blockfit",
                "type": "layer3",
                "hostChain": "Arbitrum Nova",
                "category": "Optimium",
                "provider": "Arbitrum",
                "purposes": [
                    "Universal"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": true,
                "badges": [
                    {
                        "id": "EVM",
                        "type": "VM",
                        "name": "EVM",
                        "description": "This project uses the Ethereum Virtual Machine to run its smart contracts and supports the Solidity programming language"
                    },
                    {
                        "id": "Orbit",
                        "type": "Stack",
                        "name": "Built on Arbitrum Orbit",
                        "description": "The project is built on Arbitrum Orbit"
                    },
                    {
                        "id": "Zeeve",
                        "type": "RaaS",
                        "name": "Zeeve",
                        "description": "This project was deployed via the rollup-as-a-service provider Zeeve"
                    }
                ],
                "stage": "Not applicable",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "Under Review",
                        "sentiment": "UnderReview",
                        "description": "This risk is currently under review."
                    },
                    {
                        "name": "State Validation",
                        "value": "Under Review",
                        "sentiment": "UnderReview",
                        "description": "This risk is currently under review."
                    },
                    {
                        "name": "Data Availability",
                        "value": "Under Review",
                        "sentiment": "UnderReview",
                        "description": "This risk is currently under review."
                    },
                    {
                        "name": "Exit Window",
                        "value": "Under Review",
                        "sentiment": "UnderReview",
                        "description": "This risk is currently under review."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Under Review",
                        "sentiment": "UnderReview",
                        "description": "This risk is currently under review."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 0,
                        "associated": 0,
                        "ether": 0,
                        "stablecoin": 0
                    },
                    "change7d": 0,
                    "associatedTokens": []
                }
            },
            "conwai": {
                "id": "conwai",
                "name": "ConWai",
                "slug": "conwai",
                "type": "layer3",
                "hostChain": "Arbitrum One",
                "category": "Optimium",
                "provider": "Arbitrum",
                "purposes": [
                    "AI"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": true,
                "badges": [
                    {
                        "id": "EVM",
                        "type": "VM",
                        "name": "EVM",
                        "description": "This project uses the Ethereum Virtual Machine to run its smart contracts and supports the Solidity programming language"
                    },
                    {
                        "id": "Orbit",
                        "type": "Stack",
                        "name": "Built on Arbitrum Orbit",
                        "description": "The project is built on Arbitrum Orbit"
                    },
                    {
                        "id": "Arbitrum",
                        "type": "L3ParentChain",
                        "name": "Built on top of Arbitrum",
                        "description": "The project has Arbitrum as its host chain"
                    },
                    {
                        "id": "Caldera",
                        "type": "RaaS",
                        "name": "Caldera",
                        "description": "This project was deployed via the rollup-as-a-service provider Caldera"
                    }
                ],
                "stage": "Not applicable",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "Under Review",
                        "sentiment": "UnderReview",
                        "description": "This risk is currently under review."
                    },
                    {
                        "name": "State Validation",
                        "value": "Under Review",
                        "sentiment": "UnderReview",
                        "description": "This risk is currently under review."
                    },
                    {
                        "name": "Data Availability",
                        "value": "Under Review",
                        "sentiment": "UnderReview",
                        "description": "This risk is currently under review."
                    },
                    {
                        "name": "Exit Window",
                        "value": "Under Review",
                        "sentiment": "UnderReview",
                        "description": "This risk is currently under review."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Under Review",
                        "sentiment": "UnderReview",
                        "description": "This risk is currently under review."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 0,
                        "associated": 0,
                        "ether": 0,
                        "stablecoin": 0
                    },
                    "change7d": 0,
                    "associatedTokens": []
                }
            },
            "dodochain": {
                "id": "dodochain",
                "name": "DODOchain",
                "slug": "dodochain",
                "type": "layer3",
                "hostChain": "Arbitrum One",
                "category": "Optimium",
                "provider": "Arbitrum",
                "purposes": [
                    "Universal",
                    "Interoperability"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": true,
                "badges": [],
                "stage": "Not applicable",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "Under Review",
                        "sentiment": "UnderReview",
                        "description": "This risk is currently under review."
                    },
                    {
                        "name": "State Validation",
                        "value": "Under Review",
                        "sentiment": "UnderReview",
                        "description": "This risk is currently under review."
                    },
                    {
                        "name": "Data Availability",
                        "value": "Under Review",
                        "sentiment": "UnderReview",
                        "description": "This risk is currently under review."
                    },
                    {
                        "name": "Exit Window",
                        "value": "Under Review",
                        "sentiment": "UnderReview",
                        "description": "This risk is currently under review."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Under Review",
                        "sentiment": "UnderReview",
                        "description": "This risk is currently under review."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 0,
                        "associated": 0,
                        "ether": 0,
                        "stablecoin": 0
                    },
                    "change7d": 0,
                    "associatedTokens": []
                }
            },
            "inevm": {
                "id": "inevm",
                "name": "inEVM",
                "slug": "inevm",
                "type": "layer3",
                "hostChain": "Arbitrum One",
                "category": "Optimium",
                "provider": "Arbitrum",
                "purposes": [
                    "Universal",
                    "Interoperability"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": false,
                "badges": [
                    {
                        "id": "EVM",
                        "type": "VM",
                        "name": "EVM",
                        "description": "This project uses the Ethereum Virtual Machine to run its smart contracts and supports the Solidity programming language"
                    },
                    {
                        "id": "DAC",
                        "type": "DA",
                        "name": "Data Availability Committee",
                        "description": "There is a Data Availability Committee that provides/attests to data availability"
                    },
                    {
                        "id": "Orbit",
                        "type": "Stack",
                        "name": "Built on Arbitrum Orbit",
                        "description": "The project is built on Arbitrum Orbit"
                    },
                    {
                        "id": "Caldera",
                        "type": "RaaS",
                        "name": "Caldera",
                        "description": "This project was deployed via the rollup-as-a-service provider Caldera"
                    }
                ],
                "stage": "Not applicable",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "Self sequence",
                        "sentiment": "good",
                        "description": "In the event of a sequencer failure, users can force transactions to be included in the project's chain by sending them to L1. There can be up to a 2d delay on this operation."
                    },
                    {
                        "name": "State Validation",
                        "value": "Fraud proofs (INT)",
                        "sentiment": "bad",
                        "description": "No actor outside of the single Proposer can submit fraud proofs. Interactive proofs (INT) require multiple transactions over time to resolve. The challenge protocol can be subject to delay attacks. There is a 6d 8h challenge period."
                    },
                    {
                        "name": "Data Availability",
                        "value": "External (DAC)",
                        "sentiment": "bad",
                        "description": "Proof construction relies fully on data that is NOT published onchain. There exists a Data Availability Committee (DAC) with a threshold of 1/1 that is tasked with protecting and supplying the data."
                    },
                    {
                        "name": "Exit Window",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "There is no window for users to exit in case of an unwanted regular upgrade since contracts are instantly upgradable."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Self propose",
                        "sentiment": "good",
                        "description": "Anyone can become a Proposer after 12d 17h of inactivity from the currently whitelisted Proposers."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 0,
                        "ether": 0,
                        "stablecoin": 0,
                        "associated": 0
                    },
                    "change7d": 0,
                    "associatedTokens": []
                }
            },
            "onchain": {
                "id": "onchain",
                "name": "Onchain Chain",
                "slug": "onchain",
                "type": "layer3",
                "hostChain": "Base",
                "category": "Optimium",
                "provider": "Arbitrum",
                "purposes": [
                    "Gaming",
                    "Social"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": true,
                "badges": [
                    {
                        "id": "EVM",
                        "type": "VM",
                        "name": "EVM",
                        "description": "This project uses the Ethereum Virtual Machine to run its smart contracts and supports the Solidity programming language"
                    },
                    {
                        "id": "DAC",
                        "type": "DA",
                        "name": "Data Availability Committee",
                        "description": "There is a Data Availability Committee that provides/attests to data availability"
                    },
                    {
                        "id": "Orbit",
                        "type": "Stack",
                        "name": "Built on Arbitrum Orbit",
                        "description": "The project is built on Arbitrum Orbit"
                    },
                    {
                        "id": "Base",
                        "type": "L3ParentChain",
                        "name": "Built on top of Base",
                        "description": "The project has Base as its host chain"
                    },
                    {
                        "id": "Conduit",
                        "type": "RaaS",
                        "name": "Conduit",
                        "description": "This project was deployed via the rollup-as-a-service provider Conduit"
                    }
                ],
                "stage": "Not applicable",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "Under Review",
                        "sentiment": "UnderReview",
                        "description": "This risk is currently under review."
                    },
                    {
                        "name": "State Validation",
                        "value": "Under Review",
                        "sentiment": "UnderReview",
                        "description": "This risk is currently under review."
                    },
                    {
                        "name": "Data Availability",
                        "value": "Under Review",
                        "sentiment": "UnderReview",
                        "description": "This risk is currently under review."
                    },
                    {
                        "name": "Exit Window",
                        "value": "Under Review",
                        "sentiment": "UnderReview",
                        "description": "This risk is currently under review."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Under Review",
                        "sentiment": "UnderReview",
                        "description": "This risk is currently under review."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 0,
                        "ether": 0,
                        "stablecoin": 0,
                        "associated": 0
                    },
                    "change7d": 0,
                    "associatedTokens": []
                }
            },
            "skynet": {
                "id": "skynet",
                "name": "Skynet",
                "slug": "skynet",
                "type": "layer3",
                "hostChain": "Arbitrum One",
                "category": "Optimium",
                "provider": "Arbitrum",
                "purposes": [
                    "Universal"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": true,
                "badges": [
                    {
                        "id": "EVM",
                        "type": "VM",
                        "name": "EVM",
                        "description": "This project uses the Ethereum Virtual Machine to run its smart contracts and supports the Solidity programming language"
                    },
                    {
                        "id": "Orbit",
                        "type": "Stack",
                        "name": "Built on Arbitrum Orbit",
                        "description": "The project is built on Arbitrum Orbit"
                    },
                    {
                        "id": "Zeeve",
                        "type": "RaaS",
                        "name": "Zeeve",
                        "description": "This project was deployed via the rollup-as-a-service provider Zeeve"
                    }
                ],
                "stage": "Not applicable",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "Under Review",
                        "sentiment": "UnderReview",
                        "description": "This risk is currently under review."
                    },
                    {
                        "name": "State Validation",
                        "value": "Under Review",
                        "sentiment": "UnderReview",
                        "description": "This risk is currently under review."
                    },
                    {
                        "name": "Data Availability",
                        "value": "Under Review",
                        "sentiment": "UnderReview",
                        "description": "This risk is currently under review."
                    },
                    {
                        "name": "Exit Window",
                        "value": "Under Review",
                        "sentiment": "UnderReview",
                        "description": "This risk is currently under review."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Under Review",
                        "sentiment": "UnderReview",
                        "description": "This risk is currently under review."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 0,
                        "associated": 0,
                        "ether": 0,
                        "stablecoin": 0
                    },
                    "change7d": 0,
                    "associatedTokens": []
                }
            },
            "playblock": {
                "id": "playblock",
                "name": "PlayBlock",
                "slug": "playblock",
                "type": "layer3",
                "hostChain": "Arbitrum Nova",
                "category": "Optimium",
                "provider": "Arbitrum",
                "purposes": [
                    "Universal",
                    "Gaming"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": false,
                "badges": [
                    {
                        "id": "EVM",
                        "type": "VM",
                        "name": "EVM",
                        "description": "This project uses the Ethereum Virtual Machine to run its smart contracts and supports the Solidity programming language"
                    },
                    {
                        "id": "DAC",
                        "type": "DA",
                        "name": "Data Availability Committee",
                        "description": "There is a Data Availability Committee that provides/attests to data availability"
                    },
                    {
                        "id": "Orbit",
                        "type": "Stack",
                        "name": "Built on Arbitrum Orbit",
                        "description": "The project is built on Arbitrum Orbit"
                    },
                    {
                        "id": "Nova",
                        "type": "L3ParentChain",
                        "name": "Built on top of Arbitrum Nova",
                        "description": "The project has Arbitrum Nova as its host chain"
                    },
                    {
                        "id": "Gelato",
                        "type": "RaaS",
                        "name": "Gelato",
                        "description": "This project was deployed via the rollup-as-a-service provider Gelato"
                    }
                ],
                "stage": "Not applicable",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "Self sequence",
                        "sentiment": "good",
                        "description": "In the event of a sequencer failure, users can force transactions to be included in the project's chain by sending them to L1. There can be up to a 2d delay on this operation."
                    },
                    {
                        "name": "State Validation",
                        "value": "Fraud proofs (INT)",
                        "sentiment": "bad",
                        "description": "No actor outside of the single Proposer can submit fraud proofs. Interactive proofs (INT) require multiple transactions over time to resolve. The challenge protocol can be subject to delay attacks. There is a 30m challenge period."
                    },
                    {
                        "name": "Data Availability",
                        "value": "External (DAC)",
                        "sentiment": "bad",
                        "description": "Proof construction relies fully on data that is NOT published onchain. There exists a Data Availability Committee (DAC) with a threshold of 1/2 that is tasked with protecting and supplying the data."
                    },
                    {
                        "name": "Exit Window",
                        "value": "None",
                        "sentiment": "bad",
                        "description": "There is no window for users to exit in case of an unwanted regular upgrade since contracts are instantly upgradable."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Self propose",
                        "sentiment": "good",
                        "description": "Anyone can become a Proposer after 19d 2h of inactivity from the currently whitelisted Proposers."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 0,
                        "associated": 0,
                        "ether": 0,
                        "stablecoin": 0
                    },
                    "change7d": 0,
                    "associatedTokens": []
                }
            },
            "xrone": {
                "id": "xrone",
                "name": "XR One",
                "slug": "xrone",
                "type": "layer3",
                "hostChain": "Arbitrum One",
                "category": "Optimium",
                "provider": "Arbitrum",
                "purposes": [
                    "Gaming"
                ],
                "isArchived": false,
                "isUpcoming": false,
                "isUnderReview": true,
                "badges": [
                    {
                        "id": "EVM",
                        "type": "VM",
                        "name": "EVM",
                        "description": "This project uses the Ethereum Virtual Machine to run its smart contracts and supports the Solidity programming language"
                    },
                    {
                        "id": "DAC",
                        "type": "DA",
                        "name": "Data Availability Committee",
                        "description": "There is a Data Availability Committee that provides/attests to data availability"
                    },
                    {
                        "id": "Orbit",
                        "type": "Stack",
                        "name": "Built on Arbitrum Orbit",
                        "description": "The project is built on Arbitrum Orbit"
                    },
                    {
                        "id": "Arbitrum",
                        "type": "L3ParentChain",
                        "name": "Built on top of Arbitrum",
                        "description": "The project has Arbitrum as its host chain"
                    },
                    {
                        "id": "Caldera",
                        "type": "RaaS",
                        "name": "Caldera",
                        "description": "This project was deployed via the rollup-as-a-service provider Caldera"
                    }
                ],
                "stage": "Not applicable",
                "risks": [
                    {
                        "name": "Sequencer Failure",
                        "value": "Under Review",
                        "sentiment": "UnderReview",
                        "description": "This risk is currently under review."
                    },
                    {
                        "name": "State Validation",
                        "value": "Under Review",
                        "sentiment": "UnderReview",
                        "description": "This risk is currently under review."
                    },
                    {
                        "name": "Data Availability",
                        "value": "Under Review",
                        "sentiment": "UnderReview",
                        "description": "This risk is currently under review."
                    },
                    {
                        "name": "Exit Window",
                        "value": "Under Review",
                        "sentiment": "UnderReview",
                        "description": "This risk is currently under review."
                    },
                    {
                        "name": "Proposer Failure",
                        "value": "Under Review",
                        "sentiment": "UnderReview",
                        "description": "This risk is currently under review."
                    }
                ],
                "tvs": {
                    "breakdown": {
                        "total": 0,
                        "ether": 0,
                        "stablecoin": 0,
                        "associated": 0
                    },
                    "change7d": 0,
                    "associatedTokens": []
                }
            }
        }
    }
}