sources:
  - referenceName: frax.raw_blocks
    version: 1.0.0
    type: dataset
    startAt: earliest
    description: >-
      Metadata for each block on the chain including hashes, transaction count,
      difficulty, and gas used.
  - referenceName: frax.raw_logs
    version: 1.0.0
    type: dataset
    startAt: earliest
    description: >-
      Raw logs for events emitted from contracts. Contains the contract address,
      data, topics, and metadata for blocks and transactions.
  - referenceName: frax.transaction_receipts
    version: 1.0.0
    type: dataset
    startAt: earliest
    description: >-
      Transaction data including input, value, from and to address, and metadata
      for the block, gas, and receipts.
  - referenceName: frax.raw_traces
    version: 1.0.0
    type: dataset
    startAt: earliest
    description: >-
      Traces of all function calls made on the chain including metadata for
      block, trace, transaction, and gas.
transforms:
  - type: sql
    referenceName: frax_blocks
    primaryKey: id
    sql: |
      select
        *
        ,'frax' as chain
        ,'mainnet' as network
      from
        frax.raw_blocks
  - type: sql
    referenceName: frax_raw_logs
    primaryKey: id
    sql: |
      select
        *
        ,'frax' as chain
        ,'mainnet' as network
      from
        frax.raw_logs
  - type: sql
    referenceName: frax_raw_traces
    primaryKey: id
    sql: |
      select
        *
        ,'frax' as chain
        ,'mainnet' as network
      from
        frax.raw_traces
  - type: sql
    referenceName: frax_transactions
    primaryKey: id
    sql: |
      select
         'frax' as chain
        ,'mainnet' as network
        ,id
        ,block_hash
        ,block_number
        ,block_timestamp
        ,from_address
        ,to_address
        ,hash
        ,nonce
        ,value
        ,gas as gas_limit
        ,gas_price
        ,cast(gas_price as Nullable(Float64)) / 1e9 as gas_price_gwei
        ,receipt_status AS status

        ,receipt_gas_used AS gas_used
        ,receipt_l1_gas_used AS l1_gas_used
        
        ,round(receipt_l1_fee /
          (
             COALESCE(receipt_l1_fee_scalar*cast(receipt_l1_gas_price as Nullable(Float64)),0)
           + COALESCE(receipt_l1_base_fee_scalar*cast(receipt_l1_blob_base_fee as Nullable(Float64)),0)
           )
          )
          AS estimated_tx_size

        ,receipt_l1_gas_price AS l1_gas_price
          ,receipt_l1_gas_price / 1e9 AS l1_gas_price_gwei
        ,receipt_l1_fee_scalar AS l1_fee_scalar
        ,receipt_l1_base_fee_scalar AS l1_base_fee_scalar

        ,receipt_l1_blob_base_fee AS l1_blob_base_fee
          ,receipt_l1_blob_base_fee / 1e9 AS l1_blob_base_fee_gwei
        ,receipt_l1_blob_base_fee_scalar AS l1_blob_base_fee_scalar
        
        ,max_fee_per_gas
        ,max_fee_per_gas / 1e9 AS max_fee_per_gas_gwei

        ,(receipt_l1_fee + gas_used*gas_price)/1e18 AS tx_fee_eth

        ,receipt_l1_fee AS l1_fee
          ,receipt_l1_fee / 1e18 AS l1_fee_eth
          ,estimated_tx_size * COALESCE(l1_fee_scalar*cast(l1_gas_price as Nullable(Float64)),0) / 1e18 AS l1_fee_l1_gas_eth
          ,estimated_tx_size * COALESCE(l1_blob_base_fee_scalar*cast(l1_blob_base_fee as Nullable(Float64)),0) / 1e18 AS l1_fee_blob_gas_eth

        ,gas_price - max_priority_fee_per_gas AS base_fee_per_gas
          ,(gas_price - max_priority_fee_per_gas) / 1e9 AS base_fee_per_gas_gwei
          ,((gas_price - max_priority_fee_per_gas) / 1e9) * (gas_used / 1e9) AS l2_base_fee_eth

        ,max_priority_fee_per_gas
          ,max_priority_fee_per_gas / 1e9 AS max_priority_fee_per_gas_gwei
          ,(max_priority_fee_per_gas / 1e9) * (gas_used / 1e9) AS l2_priority_fee_eth

        ,receipt_cumulative_gas_used
        ,receipt_effective_gas_price

        , length(unhex(input)) - 1 AS num_input_bytes
        , length(replace(toString(unhex(input)), '\0', '')) - 1 AS num_input_zero_bytes
        , num_input_bytes - num_input_zero_bytes AS num_input_nonzero_bytes

        ,transaction_type
        ,transaction_index

        ,blob_versioned_hashes
        ,gateway_fee
        ,fee_currency
        ,gateway_fee_recipient
        
        ,insert_time
        ,is_deleted

      from
        frax.transaction_receipts
sinks:
  - secretName: OP_DEMO_CLICKHOUSE
    type: clickHouse
    table: frax_blocks
    batchSize: 100000
    description: ClickHouse sink from frax.raw_blocks to frax_blocks
    flushInterval: '10000'
    referenceName: clickhouse_frax.raw_blocks
    appendOnlyMode: true
    schemaOverride:
      hash: FixedString(66)
      number: UInt64 CODEC(Delta, ZSTD)
      timestamp: DateTime CODEC(Delta, ZSTD)
    sourceStreamName: frax_blocks
  - secretName: OP_DEMO_CLICKHOUSE
    type: clickHouse
    table: frax_logs
    batchSize: 100000
    description: ClickHouse sink from frax.raw_logs to frax_logs
    flushInterval: '10000'
    referenceName: clickhouse_frax.raw_logs
    appendOnlyMode: true
    schemaOverride:
      address: FixedString(42)
      log_index: UInt64
      block_hash: FixedString(66)
      block_number: UInt64 CODEC(Delta, ZSTD)
      block_timestamp: DateTime CODEC(Delta, ZSTD)
      transaction_hash: FixedString(66)
      transaction_index: UInt64
    sourceStreamName: frax_raw_logs
  - secretName: OP_DEMO_CLICKHOUSE
    type: clickHouse
    table: frax_transactions
    batchSize: 100000
    description: ClickHouse sink from frax.transaction_receipts to frax_transactions
    flushInterval: '10000'
    referenceName: clickhouse_frax.transaction_receipts
    appendOnlyMode: true
    schemaOverride:
      gas: UInt128
      nonce: UInt64
      value: UInt256
      gas_price: UInt128
      block_hash: FixedString(66)
      to_address: FixedString(42)
      block_number: UInt64 CODEC(Delta, ZSTD)
      from_address: FixedString(42)
      receipt_l1_fee: Nullable(UInt128)
      receipt_status: UInt8
      block_timestamp: DateTime CODEC(Delta, ZSTD)
      max_fee_per_gas: UInt128
      receipt_gas_used: UInt128
      hash: FixedString(66)
      transaction_type: UInt8
      transaction_index: UInt64
      receipt_l1_gas_used: Nullable(UInt128)
      receipt_l1_gas_price: Nullable(UInt128)
      receipt_l1_blob_base_fee: Nullable(UInt128)
      receipt_l1_fee_scalar: Nullable(Float64)
      receipt_l1_base_fee_scalar: Nullable(Float64)
      receipt_l1_blob_base_fee_scalar: Nullable(Float64)
      receipt_l1_block_number: Nullable(Int64)
      max_priority_fee_per_gas: UInt128
      receipt_cumulative_gas_used: UInt128
      receipt_effective_gas_price: UInt128
    sourceStreamName: frax_transactions
  - secretName: OP_DEMO_CLICKHOUSE
    type: clickHouse
    table: frax_traces
    batchSize: 100000
    description: ClickHouse sink from frax.raw_traces to traces
    flushInterval: '10000'
    referenceName: clickhouse_frax.raw_traces
    appendOnlyMode: true
    schemaOverride:
      gas: UInt128
      value: UInt256
      status: UInt8
      gas_used: UInt128
      subtraces: UInt256
      block_hash: FixedString(66)
      to_address: FixedString(42)
      block_number: UInt64 CODEC(Delta(4), ZSTD)
      from_address: FixedString(42)
      block_timestamp: DateTime CODEC(Delta, ZSTD)
      transaction_hash: FixedString(66)
      transaction_index: UInt64
    sourceStreamName: frax_raw_traces