version: 2.1

orbs:
  gcp-cli: circleci/gcp-cli@3.0.1
  utils: ethereum-optimism/circleci-utils@0.0.11

parameters:
  run_job:
    type: enum
    default: "select_job"
    enum:
      [
        "select_job",
        "run_daily_api_upload",
        "run_daily_metadata",
        "run_defillama_stablecoins",
        "daily_l2_aggregate_later_loads",
        "deploy_github_pages",
      ]

commands:
  setup-python-env:
    steps:
      - run:
          name: Install uv
          command: |
            curl -LsSf https://astral.sh/uv/install.sh | sh
      - run:
          name: Set up Python
          command: uv python install
      - run:
          name: Install project dependencies
          command: uv sync --all-extras --dev

  setup-conda:
    steps:
      - run:
          name: Setup Conda
          command: |
            wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh
            bash Miniconda3-latest-Linux-x86_64.sh -b

  setup-python-3-10:
    steps:
      - setup-conda
      - run:
          name: Setup Python 3.10
          command: |
            ~/miniconda3/bin/conda create -n py310 python=3.10 -y
            ~/miniconda3/bin/conda init bash            
            source ~/.bashrc

  checkout-dep-1:
    steps:
      - run:
          name: Clone repository and checkout branch with depth 1
          command: git clone --depth 1 "$CIRCLE_REPOSITORY_URL" --branch "$CIRCLE_BRANCH" .

jobs:
  general-l2:
    machine:
      image: ubuntu-2004:current
    steps:
      - utils/gcp-oidc-authenticate:
          project_id: GCP_PROJECT_ID
          service_account_email: GCP_SERVICE_ACCOUNT_EMAIL
          workload_identity_pool_id: GCP_WIP_ID
          workload_identity_pool_provider_id: GCP_WIP_PROVIDER_ID
      - checkout-dep-1
      - setup-python-3-10
      - run:
          name: Generate and run Python scripts
          command: |
            conda activate py310
            python3.10 -m pip install pipenv
            python3.10 -m pipenv install
            python3.10 -m pipenv run jupyter nbconvert --to python op_chains_tracking/dune_opchain_uploads.ipynb other_chains_tracking/get_filtered_deployers.ipynb other_chains_tracking/total_chain_data_to_uploads.ipynb

            cd op_chains_tracking
            python3.10 -m pipenv run python dune_opchain_uploads.py

            cd ../other_chains_tracking
            python3.10 -m pipenv run python get_filtered_deployers.py total_chain_data_to_uploads.py
      - utils/get-github-access-token
      - utils/github-commit-and-push-changes:
          commit-message: "GH Action Update - Agg Downloads"
          skip-ci: true
          folder: "."

  chain-metadata:
    machine:
      image: ubuntu-2004:current
    steps:
      - checkout-dep-1
      - setup-python-env
      - run:
          name: Chain Metadata
          command: uv run opdata chains chain_metadata_updates
          environment:
            OPLABS_ENV: prod
  deploy-github-pages:
    machine:
      image: ubuntu-2004:current
    steps:
      - checkout-dep-1
      - setup-python-env
      - run:
          name: Build Static Content
          command: make html
      # Copy directories to serve
      - run:
          name: Copy Directories To Serve
          command: |
            #this copies everything from the build directory to the docs directory
            make html-copies
            tmp_dir="/tmp/docs"
            mkdir -p $tmp_dir
            cp -r docs/* $tmp_dir
            touch $tmp_dir/.nojekyll

      - utils/get-github-access-token
      - utils/github-pages-deploy:
          force-push: true
          src-pages-dir: /tmp/docs

  defillama-stablecoins:
    machine:
      image: ubuntu-2004:current
    steps:
      - checkout-dep-1
      - setup-python-env
      - run:
          name: DefiLlama Protocol TVL
          command: uv run opdata pulls defillama_stablecoins
          environment:
            OPLABS_RUNTIME: "gha"
            OPLABS_ENV: "prod"

  defillama-protocols:
    machine:
      image: ubuntu-2004:current
    steps:
      - checkout-dep-1
      - setup-python-env
      - run:
          name: DefiLlama Protocol TVL
          command: uv run opdata pulls defillama_protocol_tvl
          environment:
            OPLABS_RUNTIME: "gha"
            OPLABS_ENV: "prod"

      - run:
          name: DefiLlama Historical Chain TVL
          command: uv run opdata pulls defillama_historical_chain_tvl
          environment:
            OPLABS_RUNTIME: "gha"
            OPLABS_ENV: "prod"

  daily-uploads-other-tasks:
    machine:
      image: ubuntu-2004:current
    steps:
      - checkout-dep-1
      - setup-python-env
      - run:
          name: L2Beat
          command: uv run opdata pulls l2beat
          environment:
            OPLABS_RUNTIME: "gha"
            OPLABS_ENV: "prod"

      - run:
          name: DefiLlama Stablecoins
          command: uv run opdata pulls defillama_stablecoins
          environment:
            OPLABS_RUNTIME: "gha"
            OPLABS_ENV: "prod"

      - run:
          name: GrowThePie Chain Summary
          command: uv run opdata pulls growthepie_chain_summary
          environment:
            OPLABS_RUNTIME: "gha"
            OPLABS_ENV: "prod"

      - run:
          name: DefiLlama Stablecoins BQ
          command: uv run opdata pulls defillama_stablecoins_bq
          environment:
            OPLABS_RUNTIME: "gha"
            OPLABS_ENV: "prod"

workflows:
  version: 2
  run-daily-api-uploads:
    when:
      or:
        - equal: [<< pipeline.parameters.run_job >>, "run_daily_api_upload"]
        - equal: [<< pipeline.schedule.name >>, "run_daily_api_upload"]
    jobs:
      - defillama-protocols:
          context: op-analytics
      - daily-uploads-other-tasks:
          context: op-analytics
  run-daily-metadata:
    when:
      or:
        - equal: [<< pipeline.parameters.run_job >>, "run_daily_metadata"]
        - equal: [<< pipeline.schedule.name >>, "run_daily_metadata"]
    jobs:
      - chain-metadata:
          context: op-analytics
  run-defillama-stablecoins:
    when:
      or:
        - equal:
            [<< pipeline.parameters.run_job >>, "run_defillama_stablecoins"]
    jobs:
      - defillama-stablecoins:
          context: op-analytics

  run-general-l2:
    when:
      or:
        - equal:
            [<< pipeline.schedule.name >>, "daily_l2_aggregate_later_loads"]
        - equal:
            [
              << pipeline.parameters.run_job >>,
              "daily_l2_aggregate_later_loads",
            ]
    jobs:
      - general-l2:
          context:
            - op-analytics-legacy
            - circleci-repo-op-analytics
            - op-analytics-gcp

  github-pages:
    when:
      or:
        - equal: [<< pipeline.parameters.run_job >>, "deploy_github_pages"]
        - equal: [<< pipeline.git.branch >>, "main"]
    jobs:
      - deploy-github-pages:
          context:
            - circleci-repo-op-analytics
            - op-analytics
          filters:
            branches:
              only: main
