version: 2.1

orbs:
  gcp-cli: circleci/gcp-cli@3.0.1
  utils: ethereum-optimism/circleci-utils@0.0.11

parameters:
  run_job:
    type: enum
    default: "select_job"
    enum: ["select_job", "run_daily_api_upload", "run_daily_metadata"]

commands:
  setup-python-env:
    steps:
      - run:
          name: Install uv
          command: |
            curl -LsSf https://astral.sh/uv/install.sh | sh
      - run:
          name: Set up Python
          command: uv python install
      - run:
          name: Install project dependencies
          command: uv sync --all-extras --dev
jobs:
  chain-metadata:
    machine:
      image: ubuntu-2004:current
    steps:
      - checkout
      - setup-python-env
      - run:
          name: Chain Metadata
          command: uv run opdata chains chain_metadata_updates
          environment:
            OPLABS_ENV: prod
  deploy-github-pages:
    machine:
      image: ubuntu-2004:current
    steps:
      - run:
          name: Clone the repository

          command: |
            git clone --depth 1 "$CIRCLE_REPOSITORY_URL" --branch "$CIRCLE_BRANCH" .
      - setup-python-env
      - run:
          name: Build Static Content
          command: make html
      # Copy directories to serve
      - run:
          name: Copy Directories To Serve
          command: |
            #this copies everything from the build directory to the docs directory
            make html-copies
            tmp_dir="/tmp/docs"
            mkdir -p $tmp_dir
            cp -r docs/* $tmp_dir
            touch $tmp_dir/.nojekyll

      - utils/get-github-access-token
      - utils/github-pages-deploy:
          force-push: true
          src-pages-dir: /tmp/docs

  defillama-protocols:
    machine:
      image: ubuntu-2004:current
    steps:
      - run:
          name: Clone the repository
          command: |
            git clone --depth 1 "$CIRCLE_REPOSITORY_URL" --branch "$CIRCLE_BRANCH" .
      - setup-python-env
      - run:
          name: DefiLlama Protocol TVL
          command: uv run opdata pulls defillama_protocol_tvl
          environment:
            OPLABS_RUNTIME: "gha"
            OPLABS_ENV: "prod"

      - run:
          name: DefiLlama Historical Chain TVL
          command: uv run opdata pulls defillama_historical_chain_tvl
          environment:
            OPLABS_RUNTIME: "gha"
            OPLABS_ENV: "prod"

  daily-uploads-other-tasks:
    machine:
      image: ubuntu-2004:current
    steps:
      - checkout
      - setup-python-env
      - run:
          name: L2Beat
          command: uv run opdata pulls l2beat
          environment:
            OPLABS_RUNTIME: "gha"
            OPLABS_ENV: "prod"

      - run:
          name: DefiLlama Stablecoins
          command: uv run opdata pulls defillama_stablecoins
          environment:
            OPLABS_RUNTIME: "gha"
            OPLABS_ENV: "prod"

      - run:
          name: GitHub Analytics
          command: uv run opdata pulls github_analytics
          environment:
            OPLABS_RUNTIME: "gha"
            OPLABS_ENV: "prod"

      - run:
          name: GrowThePie Chain Summary
          command: uv run opdata pulls growthepie_chain_summary
          environment:
            OPLABS_RUNTIME: "gha"
            OPLABS_ENV: "prod"

      - run:
          name: DefiLlama Stablecoins BQ
          command: uv run opdata pulls defillama_stablecoins_bq
          environment:
            OPLABS_RUNTIME: "gha"
            OPLABS_ENV: "prod"

workflows:
  version: 2
  run-daily-api-uploads:
    when:
      or:
        - equal: [<< pipeline.parameters.run_job >>, "run_daily_api_upload"]
        - equal: [run_daily_api_upload, <<pipeline.schedule.name>>]
    jobs:
      - defillama-protocols:
          context: op-analytics
      - daily-uploads-other-tasks:
          context: op-analytics
  run-daily-metadata:
    when:
      or:
        - equal: [<< pipeline.parameters.run_job >>, "run_daily_metadata"]
        - equal: [run_daily_metadata, <<pipeline.schedule.name>>]
    jobs:
      - chain-metadata:
          context: op-analytics

  merge-to-main:
    when:
      not:
        equal: [<< pipeline.trigger_source >>, "api"]
    jobs:
      - deploy-github-pages:
          context:
            - circleci-repo-op-analytics
            - op-analytics
          filters:
            branches:
              only: main
