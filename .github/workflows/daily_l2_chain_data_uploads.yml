name: Daily L2 Chain Data Uploads

on:
  schedule: #02:01 AM UTC
    - cron: '1 2 * * *'
  workflow_dispatch:
permissions:
  contents: write
jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10.11'
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
      - name: Install pipenv and dependencies
        run: |
          python -m pip install pipenv
          pipenv install --dev

  run_notebook:
    needs: setup
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - working-directory: other_chains_tracking
            notebook: chain_tvl_trends
          - working-directory: other_chains_tracking
            notebook: pull_l2_activity
          - working-directory: other_chains_tracking
            notebook: get_ethereum_chain_list
          - working-directory: other_chains_tracking
            notebook: get_dune_evms_info
          - working-directory: other_chains_tracking
            notebook: get_qualified_txs
          - working-directory: other_chains_tracking
            notebook: get_contract_labels
          - working-directory: op_chains_tracking
            notebook: get_superchain_token_list
          - working-directory: op_chains_tracking
            notebook: ch_gs_uploads
          - working-directory: op_chains_tracking
            notebook: dune_op_stack_chains_l1_data
          - working-directory: op_collective_economics/opcollective_feesplit
            notebook: op_collective_revenue
          - working-directory: op_collective_economics
            notebook: get_op_collective_net_revenue_balances
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10.11'
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
      - name: Install pipenv
        run: |
          python -m pip install pipenv
      - name: Restore pipenv environment
        run: |
          pipenv install --dev
      - name: Convert and run notebook
        working-directory: ${{ matrix.working-directory }}
        run: |
          pwd
          pipenv run jupyter nbconvert --to python ${{ matrix.notebook }}.ipynb
          pipenv run python ${{ matrix.notebook }}.py
        env:
          DUNE_API_KEY: ${{ secrets.DUNE_API_KEY }}
          FLIPSIDE_API_KEY: ${{ secrets.FLIPSIDE_API_KEY }}
          OP_CLICKHOUSE_HOST: ${{ secrets.OP_CLICKHOUSE_HOST }}
          OP_CLICKHOUSE_USER: ${{ secrets.OP_CLICKHOUSE_USER }}
          OP_CLICKHOUSE_PW: ${{ secrets.OP_CLICKHOUSE_PW }}
          OP_CLICKHOUSE_PORT: ${{ secrets.OP_CLICKHOUSE_PORT }}
          IS_RUNNING_LOCAL: ${{ secrets.IS_RUNNING_LOCAL }}
          BQ_APPLICATION_CREDENTIALS: ${{ secrets.BQ_APPLICATION_CREDENTIALS }}
          BQ_PROJECT_ID: ${{ secrets.BQ_PROJECT_ID }}
          L1_ETHERSCAN_API: ${{ secrets.L1_ETHERSCAN_API }}
          BASESCAN_API: ${{ secrets.BASESCAN_API }}
          OP_ETHERSCAN_API: ${{ secrets.OP_ETHERSCAN_API }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  commit-changes:
    needs: run_notebook
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: List changed files
        run: git status
      - name: Commit and push changes
        run: |
          git pull origin main
          git config --local user.email "action@github.com"
          git config --local user.name "github-actions"
          git add --all
          if [ -z "$(git status --porcelain)" ]; then
            echo "No changes to commit."
          else
            git commit -m "GH Action Update - L2 Chain Data" -a
            git push
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}