name: Run OP Governance Data

# Controls when the workflow will run
on:
  # Run on a schedule - Every day at 12:31 AM
  schedule:
      - cron: '31 0 * * *'
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
permissions:
  contents: write
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      
      # Set up Python and Node.js
      - name: Set up Python and Node.js
        uses: actions/setup-python@v2
        with:
          python-version: '3.10.11'
        # Set max space to see if this helps with timeouts
        env:
          NODE_OPTIONS: '--max-old-space-size=4096'
        # Update the Node.js version to 16
          node-version: '16'

      - name: Install pipenv
        run: |
          python -m pip install pipenv

      # Add any missing dependencied to pipfile
      - name: Install Dependencies
        run: |
          pipenv install --dev

  # Generate .py files for each notebook
      - name: Generate py files
        working-directory: op_governance_data
        run: |
                pipenv run jupyter nbconvert --to python op_circulating_supply.ipynb
                pipenv run jupyter nbconvert --to python op_votable_supply.ipynb
                  
  # Run py
      - name: Run py
        working-directory: op_governance_data
        run: |
                pipenv run python op_circulating_supply.py
                pipenv run python op_votable_supply.py
        env:
          DUNE_API_KEY: ${{ secrets.DUNE_API_KEY }}
          BQ_APPLICATION_CREDENTIALS: ${{ secrets.BQ_APPLICATION_CREDENTIALS }}
          BQ_PROJECT_ID: ${{ secrets.BQ_PROJECT_ID }}


    # commit_results:
      # if: ${{ always() }} #Always runs even if prior jobs fail - so that one bad job doesn't f everything up.
      # needs: build #[build, app_fees, op_summer, total_tvl_flow]
      # runs-on: ubuntu-latest
      # steps:
        # Runs a set of commands using the runners shell
        # - name: Run a multi-line script
        #  run: |
        #    echo Add other actions to build,
        #    echo test, and deploy your project.

        # Commit and push output images
        # https://github.com/orgs/community/discussions/26672
      - name: Pull changes
        run: |
          git pull origin main
      - name: Commit files
        id: commit
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "github-actions"
          git add --all
          if [ -z "$(git status --porcelain)" ]; then
            echo "No changes to commit."
            echo "push=false" >> $GITHUB_OUTPUT
          else
            git commit -m "GH Action Update - Gov Uploads" -a
            echo "push=true" >> $GITHUB_OUTPUT
          fi
        shell: bash
      - name: Push changes
        if: steps.commit.outputs.push == 'true'
        uses: ad-m/github-push-action@master
        with:
            github_token: ${{ secrets.GITHUB_TOKEN }}
