import typer
from op_indexer.schemas.blocks import BLOCKS_SCHEMA

from op_analytics.cli.subcommands.dbt.sources import to_dbt_table
from op_analytics.cli.subcommands.dbt.yamlwriter import write_sources_yaml

from op_coreutils.logger import LOGGER
from op_coreutils.path import repo_path

log = LOGGER.get_logger()

app = typer.Typer()


@app.command()
def generate_sources():
    """Generate dbt source YAML files for our core tables."""

    dbt_sources = {
        "version": "2.0",
        "sources": [
            {
                "name": "indexed",
                "description": "Tables for indexed onchain data.",
                "tables": [to_dbt_table(_) for _ in [BLOCKS_SCHEMA]],
            }
        ],
    }

    path = repo_path("dbt/sources/indexed.yml")

    with open(path, "w") as fobj:
        fobj.write(
            "### AUTO-GENERATED FILE. DO NOT CHANGE. This file was autogenerated by the generate_sources command."
        )
        write_sources_yaml(fobj, dbt_sources)

    log.info(f"Saved onchain raw sources to {path}")
