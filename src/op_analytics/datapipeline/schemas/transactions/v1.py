"""
TRANSACTIONS SCHEMA
"""

from textwrap import dedent

import pyarrow as pa

from op_analytics.datapipeline.schemas import shared
from op_analytics.datapipeline.schemas.core import Column, JsonRPCMethod, CoreDataset

TRANSACTIONS_V1_SCHEMA = CoreDataset(
    name="transactions",
    goldsky_table_suffix="transactions",
    block_number_col="block_number",
    doc=dedent("""Indexed Transactions. See [eth_gettransactionreceipt](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_gettransactionreceipt) for more info.
    
    Fields from RPC not included here:
    - eth_getTransactionByHash.blobVersionedHashes
    
    Fields from OP Labs pipeline sink tables not included here:
    - gateway_fee
    - gateway_fee_recipient
    - fee_currency
    - receipt_l1_block_number
    
    
    For more information on transaction fields return by RPC see the implementation on the 
    [op-geth repo](https://github.com/ethereum-optimism/op-geth/blob/c283254e5447f127e3b9350860985911dab9cd2f/internal/ethapi/api.go#L1453).
    
    """),
    columns=[
        shared.METADATA,
        shared.CHAIN,
        shared.NETWORK,
        shared.CHAIN_ID,
        # Block
        Column(
            name="dt",
            field_type=pa.large_string(),
            required=True,
            json_rpc_method=None,
            json_rpc_field_name=None,
            raw_goldsky_pipeline_expr=None,
            raw_goldsky_pipeline_type=None,
            op_analytics_clickhouse_expr="formatDateTime(block_timestamp, '%Y-%m-%d') AS dt",
        ),
        Column(
            name="block_timestamp",
            field_type=pa.timestamp(unit="us"),
            required=True,
            json_rpc_method=JsonRPCMethod.eth_getBlockByNumber,
            json_rpc_field_name="timestamp",
            raw_goldsky_pipeline_expr="block_timestamp",
            raw_goldsky_pipeline_type="long",
            op_analytics_clickhouse_expr="block_timestamp",
        ),
        Column(
            name="block_number",
            field_type=pa.int64(),
            required=True,
            json_rpc_method=JsonRPCMethod.eth_getBlockByNumber,
            json_rpc_field_name="number",
            raw_goldsky_pipeline_expr="block_number",
            raw_goldsky_pipeline_type="long",
            op_analytics_clickhouse_expr="accurateCast(block_number, 'Int64') AS block_number",
        ),
        Column(
            name="block_hash",
            field_type=pa.large_string(),
            required=True,
            json_rpc_method=JsonRPCMethod.eth_getBlockByNumber,
            json_rpc_field_name="block_hash",
            raw_goldsky_pipeline_expr="block_hash",
            raw_goldsky_pipeline_type="string",
            op_analytics_clickhouse_expr="cast(block_hash, 'String') AS block_hash",
        ),
        # Transaction
        Column(
            name="hash",
            field_type=pa.large_string(),
            required=True,
            json_rpc_method=JsonRPCMethod.eth_getTransactionByHash,
            json_rpc_field_name="hash",
            raw_goldsky_pipeline_expr="hash",
            raw_goldsky_pipeline_type="string",
            op_analytics_clickhouse_expr="cast(hash, 'String') AS hash",
        ),
        Column(
            name="nonce",
            field_type=pa.int64(),
            required=True,
            json_rpc_method=JsonRPCMethod.eth_getTransactionByHash,
            json_rpc_field_name="nonce",
            raw_goldsky_pipeline_expr="nonce",
            raw_goldsky_pipeline_type="long",
            op_analytics_clickhouse_expr="accurateCast(nonce, 'Int64') AS nonce",
        ),
        Column(
            name="transaction_index",
            field_type=pa.int64(),
            required=True,
            json_rpc_method=JsonRPCMethod.eth_getTransactionByHash,
            json_rpc_field_name="hash",
            raw_goldsky_pipeline_expr="transaction_index",
            raw_goldsky_pipeline_type="long",
            op_analytics_clickhouse_expr="accurateCast(transaction_index, 'Int64') AS transaction_index",
        ),
        Column(
            name="from_address",
            field_type=pa.large_string(),
            required=True,
            json_rpc_method=JsonRPCMethod.eth_getTransactionByHash,
            json_rpc_field_name="from",
            raw_goldsky_pipeline_expr="from_address",
            raw_goldsky_pipeline_type="string",
            op_analytics_clickhouse_expr="cast(from_address, 'String') AS from_address",
        ),
        Column(
            name="to_address",
            field_type=pa.large_string(),
            required=True,
            json_rpc_method=JsonRPCMethod.eth_getTransactionByHash,
            json_rpc_field_name="to",
            raw_goldsky_pipeline_expr="to_address",
            raw_goldsky_pipeline_type="string",
            op_analytics_clickhouse_expr="cast(to_address, 'String') AS to_address",
        ),
        Column(
            name="value_64",
            field_type=pa.int64(),
            required=True,
            json_rpc_method=JsonRPCMethod.eth_getTransactionByHash,
            json_rpc_field_name="value",
            raw_goldsky_pipeline_expr="value",
            raw_goldsky_pipeline_type="decimal",
            op_analytics_clickhouse_expr="accurateCastOrNull(value, 'Int64') AS value_64",
            doc="Lossy value downcasted to Int64 to be compatible with BigQuery data types.",
        ),
        Column(
            name="value_lossless",
            field_type=pa.large_string(),
            required=True,
            json_rpc_method=JsonRPCMethod.eth_getTransactionByHash,
            json_rpc_field_name="value",
            raw_goldsky_pipeline_expr="value",
            raw_goldsky_pipeline_type="decimal",
            op_analytics_clickhouse_expr="cast(value, 'String') AS value_lossless",
        ),
        Column(
            name="gas",
            field_type=pa.int64(),
            required=True,
            json_rpc_method=JsonRPCMethod.eth_getTransactionByHash,
            json_rpc_field_name="gas",
            raw_goldsky_pipeline_expr="gas",
            raw_goldsky_pipeline_type="decimal",
            op_analytics_clickhouse_expr="accurateCast(gas, 'Int64') AS gas",
        ),
        Column(
            name="gas_price",
            field_type=pa.int64(),
            required=True,
            json_rpc_method=JsonRPCMethod.eth_getTransactionByHash,
            json_rpc_field_name="gasPrice",
            raw_goldsky_pipeline_expr="gas_price",
            raw_goldsky_pipeline_type="decimal",
            op_analytics_clickhouse_expr="accurateCast(gas_price, 'Int64') AS gas_price",
        ),
        Column(
            name="input",
            field_type=pa.large_string(),
            required=True,
            json_rpc_method=JsonRPCMethod.eth_getTransactionByHash,
            json_rpc_field_name="input",
            raw_goldsky_pipeline_expr="input",
            raw_goldsky_pipeline_type="string",
            op_analytics_clickhouse_expr="input",
        ),
        Column(
            name="transaction_type",
            field_type=pa.int32(),
            required=True,
            json_rpc_method=JsonRPCMethod.eth_getTransactionByHash,
            json_rpc_field_name="type",
            raw_goldsky_pipeline_expr="transaction_type",
            raw_goldsky_pipeline_type="long",
            op_analytics_clickhouse_expr="accurateCast(transaction_type, 'Int32') AS transaction_type",
        ),
        Column(
            name="max_fee_per_gas",
            field_type=pa.int64(),
            required=True,
            json_rpc_method=JsonRPCMethod.eth_getTransactionByHash,
            json_rpc_field_name="maxFeePerGas",  # (aka. GasFeeCap)
            raw_goldsky_pipeline_expr="max_fee_per_gas",
            raw_goldsky_pipeline_type="decimal",
            op_analytics_clickhouse_expr="accurateCast(max_fee_per_gas, 'Int64') AS max_fee_per_gas",
        ),
        Column(
            name="max_priority_fee_per_gas",
            field_type=pa.int64(),
            required=True,
            json_rpc_method=JsonRPCMethod.eth_getTransactionByHash,
            json_rpc_field_name="maxPriorityFeePerGas",  # (aka. GasTipCap)
            raw_goldsky_pipeline_expr="max_priority_fee_per_gas",
            raw_goldsky_pipeline_type="decimal",
            op_analytics_clickhouse_expr="accurateCast(max_priority_fee_per_gas, 'Int64') AS max_priority_fee_per_gas",
        ),
        Column(
            name="blob_versioned_hashes",
            field_type=pa.large_list(value_type=pa.large_string()),
            required=True,
            json_rpc_method=JsonRPCMethod.eth_getTransactionByHash,
            json_rpc_field_name="blobVersionedHashes",
            doc="a set of hash outputs from the blobs in the transaction",
            raw_goldsky_pipeline_expr=None,
            raw_goldsky_pipeline_type=None,
            op_analytics_clickhouse_expr=None,
        ),
        Column(
            name="max_fee_per_blob_gas",
            field_type=pa.int64(),
            required=True,
            json_rpc_method=JsonRPCMethod.eth_getTransactionByHash,
            json_rpc_field_name="maxFeePerBlobGas",
            raw_goldsky_pipeline_expr=None,
            raw_goldsky_pipeline_type=None,
            op_analytics_clickhouse_expr=None,
        ),
        # Receipt
        Column(
            name="receipt_cumulative_gas_used",
            field_type=pa.int64(),
            required=True,
            json_rpc_method=JsonRPCMethod.eth_getTransactionReceipt,
            json_rpc_field_name="cumulativeGasUsed",
            raw_goldsky_pipeline_expr="receipt_cumulative_gas_used",
            raw_goldsky_pipeline_type="decimal",
            op_analytics_clickhouse_expr="accurateCast(receipt_cumulative_gas_used, 'Int64') AS receipt_cumulative_gas_used",
        ),
        Column(
            name="receipt_gas_used",
            field_type=pa.int64(),
            required=True,
            json_rpc_method=JsonRPCMethod.eth_getTransactionReceipt,
            json_rpc_field_name="gasUsed",
            raw_goldsky_pipeline_expr="receipt_gas_used",
            raw_goldsky_pipeline_type="decimal",
            op_analytics_clickhouse_expr="accurateCast(receipt_gas_used, 'Int64') AS receipt_gas_used",
        ),
        Column(
            name="receipt_contract_address",
            field_type=pa.int64(),
            required=True,
            json_rpc_method=JsonRPCMethod.eth_getTransactionReceipt,
            json_rpc_field_name="contractAddress",
            raw_goldsky_pipeline_expr="receipt_contract_address",
            raw_goldsky_pipeline_type="string",
            op_analytics_clickhouse_expr="receipt_contract_address",
        ),
        Column(
            name="receipt_status",
            field_type=pa.int32(),
            required=True,
            json_rpc_method=JsonRPCMethod.eth_getTransactionReceipt,
            json_rpc_field_name="status",
            raw_goldsky_pipeline_expr="receipt_status",
            raw_goldsky_pipeline_type="long",
            op_analytics_clickhouse_expr="accurateCast(receipt_status, 'Int32') AS receipt_status",
        ),
        Column(
            name="receipt_effective_gas_price",
            field_type=pa.int64(),
            required=True,
            json_rpc_method=JsonRPCMethod.eth_getTransactionReceipt,
            json_rpc_field_name="effectiveGasPrice",
            raw_goldsky_pipeline_expr="receipt_effective_gas_price",
            raw_goldsky_pipeline_type="decimal",
            op_analytics_clickhouse_expr="accurateCast(receipt_effective_gas_price, 'Int64') AS receipt_effective_gas_price",
        ),
        Column(
            name="receipt_root_hash",
            field_type=pa.int64(),
            required=True,
            json_rpc_method=JsonRPCMethod.eth_getTransactionReceipt,
            json_rpc_field_name="root",
            raw_goldsky_pipeline_expr=None,
            raw_goldsky_pipeline_type=None,
            op_analytics_clickhouse_expr=None,
        ),
        Column(
            name="receipt_l1_gas_price",
            field_type=pa.int64(),
            required=True,
            json_rpc_method=JsonRPCMethod.eth_getTransactionReceipt,
            json_rpc_field_name="l1GasPrice",
            raw_goldsky_pipeline_expr="receipt_l1_gas_price",
            raw_goldsky_pipeline_type="decimal",
            op_analytics_clickhouse_expr="accurateCast(receipt_l1_gas_price, 'Nullable(Int64)') AS receipt_l1_gas_price",
        ),
        Column(
            name="receipt_l1_gas_used",
            field_type=pa.int64(),
            required=True,
            json_rpc_method=JsonRPCMethod.eth_getTransactionReceipt,
            json_rpc_field_name="l1GasUsed",
            raw_goldsky_pipeline_expr="receipt_l1_gas_used",
            raw_goldsky_pipeline_type="decimal",
            op_analytics_clickhouse_expr="accurateCast(receipt_l1_gas_used, 'Nullable(Int64)') AS receipt_l1_gas_used",
        ),
        Column(
            name="receipt_l1_fee",
            field_type=pa.int64(),
            required=True,
            json_rpc_method=JsonRPCMethod.eth_getTransactionReceipt,
            json_rpc_field_name="l1Fee",
            raw_goldsky_pipeline_expr="receipt_l1_fee",
            raw_goldsky_pipeline_type="decimal",
            op_analytics_clickhouse_expr="accurateCast(receipt_l1_fee, 'Nullable(Int64)') receipt_l1_fee",
        ),
        Column(
            name="receipt_l1_fee_scalar",
            field_type=pa.float64(),
            required=True,
            json_rpc_method=JsonRPCMethod.eth_getTransactionReceipt,
            json_rpc_field_name="l1FeeScalar",
            doc="This field was removed in Ecotone.",
            raw_goldsky_pipeline_expr="receipt_l1_fee_scalar",
            raw_goldsky_pipeline_type="decimal",
            op_analytics_clickhouse_expr="receipt_l1_fee_scalar",
        ),
        Column(
            name="receipt_l1_blob_base_fee",
            field_type=pa.int64(),
            required=True,
            json_rpc_method=JsonRPCMethod.eth_getTransactionReceipt,
            json_rpc_field_name="l1BlobBaseFee",
            doc="This field was added in Ecotone.",
            raw_goldsky_pipeline_expr="receipt_l1_blob_base_fee",
            raw_goldsky_pipeline_type="decimal",
            op_analytics_clickhouse_expr="accurateCast(receipt_l1_blob_base_fee, 'Nullable(Int64)') AS receipt_l1_blob_base_fee",
        ),
        Column(
            name="receipt_l1_blob_base_fee_scalar",
            field_type=pa.int64(),
            required=True,
            json_rpc_method=JsonRPCMethod.eth_getTransactionReceipt,
            json_rpc_field_name="l1BlobBaseFeeScalar",
            doc="This field was added in Ecotone.",
            raw_goldsky_pipeline_expr="receipt_l1_blob_base_fee_scalar",
            raw_goldsky_pipeline_type="decimal",
            op_analytics_clickhouse_expr="accurateCast(receipt_l1_blob_base_fee_scalar, 'Nullable(Int64)') AS receipt_l1_blob_base_fee_scalar",
        ),
        Column(
            name="receipt_l1_base_fee_scalar",
            field_type=pa.int64(),
            required=True,
            json_rpc_method=JsonRPCMethod.eth_getTransactionReceipt,
            json_rpc_field_name="l1BaseFeeScalar",
            doc="This field was added in Ecotone.",
            raw_goldsky_pipeline_expr="receipt_l1_base_fee_scalar",
            raw_goldsky_pipeline_type="decimal",
            op_analytics_clickhouse_expr="accurateCast(receipt_l1_base_fee_scalar, 'Nullable(Int64)') AS receipt_l1_base_fee_scalar",
        ),
    ],
)
