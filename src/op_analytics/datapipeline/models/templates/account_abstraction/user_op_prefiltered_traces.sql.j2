/***
  Prefilered traces:

    - Traces that match one of the innerHandleOp method_ids.
    - Traces that match tx_hash and sender as seen in UserOperationEvent logs.

  The data here needs to be further processed to determine which is the first method call
  performed by a sender in an innerHandleOp subtrace.
   */

SELECT
  t.dt
  , t.chain
  , t.chain_id
  , t.network
  --
  , t.block_timestamp
  , t.block_number
  , t.transaction_hash
  , t.from_address
  , t.to_address
  , t.call_type
  , t.trace_address
  , trace_address_root(t.trace_address) AS trace_root
  , hexstr_method_id(t.input) AS method_id
  , decode_inner_handle_op(t.input) AS inner_handle_op
FROM {{ raw_traces }} AS t
WHERE
  t.call_type != 'delegatecall'
  AND (
    -- Filter to traces associated with UserOperationEvent logs.
    -- This filter help us narrow down the initial scan on the traces dataset, but by itself it is
    -- not sufficient to ensure a function call is associated with a specific sender. To do that we
    -- need to use the decoded innerHandleOp trace call which gives us the trace address associated
    -- where the UserOperationEvent log was emitted from.
    concat_ws('::', t.transaction_hash, t.from_address) IN (SELECT u.txhash_sender FROM {{ user_op_txhash_senders }} AS u)

    OR

    -- innerHandleOp traces. These are decoded so we can then find the exact sender-related traces.
    method_id IN ({{ inner_handle_op_method_ids }})
  )
