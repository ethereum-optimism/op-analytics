WITH

-- All traces in transactions that emit Entrypoint Contract logs. 
-- (See prefiltering logic.)
all_prefiltered_traces AS (
  SELECT
    t.dt
    , t.chain
    , t.chain_id
    , t.network
    --
    , t.block_timestamp
    , t.block_number
    , t.block_hash
    , t.transaction_hash
    , t.transaction_index
    , t.from_address
    , t.to_address
    , t.value_lossless AS value
    , t.input
    , t.output
    , t.trace_type
    , t.call_type
    , t.reward_type
    , t.gas
    , t.gas_used
    , t.subtraces
    , t.trace_address
    , t.error
    , t.status
    , t.trace_root
    , hexstr_method_id(t.input) AS method_id
    , IF(
      hexstr_method_id(t.input) IN ('{{ method_id_v6 }}', '{{ method_id_v7 }}')
      , decode_innerhandleop(t.input)
      , NULL
    ) AS decoded
  FROM {{ prefiltered_traces }} AS t
)

-- Destructure the decoded result into our custom column names.
, decoded_traces_exploded AS (
  SELECT
    t.dt
    , t.chain
    , t.chain_id
    , t.network
    --
    , t.block_timestamp
    , t.block_number
    , t.block_hash
    , t.transaction_hash
    , t.transaction_index
    , t.from_address
    , t.to_address
    , t.value
    , t.input
    , t.output
    , t.trace_type
    , t.call_type
    , t.reward_type
    , t.gas
    , t.gas_used
    , t.subtraces
    , t.trace_address
    , t.error
    , t.status
    , t.trace_root
    , t.method_id

    --
    -- The most important decoded fields.
    , t.decoded['opinfo_sender'] AS userop_sender
    , t.decoded['opinfo_paymaster'] AS userop_paymaster
    , t.decoded['opinfo_userophash'] AS userop_hash
    , t.decoded['calldata'] AS userop_calldata

    --
    -- Additional decoded fields (not as important but keeping them for completeness).
    , t.decoded['decodeerror'] AS innerhandleop_decodeerror
    , t.decoded['opinfo'] AS innerhandleop_opinfo
    , t.decoded['context'] AS innerhandleop_context

  FROM all_prefiltered_traces AS t
)


-- InnerHandleOp traces joined to the corresponding UserOperationEvent
, innerhandleops AS (
  SELECT
    t.block_number
    , t.transaction_hash
    , t.userop_sender
    , t.userop_paymaster
    , t.userop_hash
    , t.userop_calldata
    , t.innerhandleop_decodeerror
    , t.innerhandleop_opinfo
    , t.innerhandleop_context
    , t.trace_address AS innerhandleop_trace_address
    , u.nonce AS useropevent_nonce
    , u.success AS useropevent_success
    , u.actualGasCost AS useropevent_actualgascost
    , u.actualGasUsed AS useropevent_actualgasused
    , CASE
      WHEN t.method_id = '{{ method_id_v6 }}' THEN 'v6'
      WHEN t.method_id = '{{ method_id_v7 }}' THEN 'v7'
      ELSE NULL
    END AS entrypoint_contract_version

  FROM decoded_traces_exploded AS t
  LEFT JOIN {{ uops }} AS u
    ON
      t.block_number = u.block_number
      AND t.transaction_hash = u.transaction_hash
      AND t.userop_sender = u.sender
      AND t.userop_paymaster = u.paymaster
      AND t.userop_hash = u.userophash

  WHERE t.userop_sender IS NOT NULL
)

-- Enrich traces by matching them with:
--  * The decoded innerHandleOp trace (self-join) 
--  * The decoded UserOperationEvent (join with logs)
SELECT -- noqa: ST06
  t.dt
  , t.chain
  , t.chain_id
  , t.network
  --
  , t.block_timestamp
  , t.block_number
  , t.block_hash
  , t.transaction_hash
  , t.transaction_index
  , t.from_address
  , t.to_address
  , t.value
  , t.input
  , t.output
  , t.trace_type
  , t.call_type
  , t.reward_type
  , t.gas
  , t.gas_used
  , t.subtraces
  , t.trace_address
  , t.error
  , t.status
  , t.trace_root
  , t.method_id

  -- Flag the innerHandleOp traces.
  , t.userop_sender IS NOT NULL AS is_innerhandleop

  -- Flag traces that are subtraces of the innerhandleop (this is the same as the join condition)
  , i.innerhandleop_trace_address IS NOT NULL AND starts_with(t.trace_address, i.innerhandleop_trace_address) AS is_innerhandleop_subtrace

  -- Flag traces that are from the userop sender.
  , t.from_address = i.userop_sender AS is_from_sender

  -- The innerHandleOp fields are included for all subtraces of the innerHandleOp
  -- This should enable analysis without an additional self-join.
  , i.userop_sender
  , i.userop_paymaster
  , i.userop_hash
  , i.userop_calldata

  -- Additional decoded fields. 
  , i.innerhandleop_decodeerror
  , i.innerhandleop_opinfo
  , i.innerhandleop_context

  -- Values picked from the self join.
  , i.innerhandleop_trace_address
  , i.entrypoint_contract_version

  -- Values picked from the UserOperationEvent logs
  , i.useropevent_nonce
  , i.useropevent_success
  , i.useropevent_actualgascost
  , i.useropevent_actualgasused

FROM decoded_traces_exploded AS t

LEFT JOIN innerhandleops AS i
  ON
    t.block_number = i.block_number
    AND t.transaction_hash = i.transaction_hash
    -- Subtraces of the innerHandleOp function call.
    AND starts_with(t.trace_address, i.innerhandleop_trace_address)
