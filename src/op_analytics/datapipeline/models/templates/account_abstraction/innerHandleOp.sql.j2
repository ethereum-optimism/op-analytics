WITH

-- Traces that are innerHandleOp calls.
decoded_traces AS (
  SELECT
    t.dt
    , t.chain
    , t.chain_id
    , t.network
    --
    , t.block_timestamp
    , t.block_number
    , t.block_hash
    , t.transaction_hash
    , t.transaction_index
    , t.from_address
    , t.to_address
    , t.value_lossless
    , t.input
    , t.output
    , t.trace_type
    , t.call_type
    , t.reward_type
    , t.gas
    , t.gas_used
    , t.subtraces
    , t.trace_address
    , t.error
    , t.status
    , t.trace_root
    , TRY_CAST(t.trace_root AS INT) AS trace_rootnum
    , hexstr_method_id(t.input) AS method_id
    , IF(hexstr_method_id(t.input) IN ({{ innerhandleop_method_ids }}), decode_innerhandleop(t.input), NULL) AS decoded
  FROM {{ prefiltered_traces }} AS t
)

, decoded_traces_exploded AS (
  SELECT
    t.dt
    , t.chain
    , t.chain_id
    , t.network
    --
    , t.block_timestamp
    , t.block_number
    , t.block_hash
    , t.transaction_hash
    , t.transaction_index
    , t.from_address
    , t.to_address
    , t.value_lossless
    , t.input
    , t.output
    , t.trace_type
    , t.call_type
    , t.reward_type
    , t.gas
    , t.gas_used
    , t.subtraces
    , t.trace_address
    , t.error
    , t.status
    , t.trace_root
    , t.trace_rootnum
    , t.method_id
    -- Decoded innerHandleOp
    , t.decoded['decodeerror'] AS innerhandleop_decodeerror
    , t.decoded['opinfo_sender'] AS innerhandleop_opinfo_sender
    , t.decoded['opinfo_paymaster'] AS innerhandleop_opinfo_paymaster
    , t.decoded['opinfo_userophash'] AS innerhandleop_opinfo_userophash
    , t.decoded['opinfo'] AS innerhandleop_opinfo
    , t.decoded['context'] AS innerhandleop_context
    , t.decoded['calldata'] AS innerhandleop_calldata
  FROM decoded_traces AS t
)

SELECT
  t.dt
  , t.chain
  , t.chain_id
  , t.network
  --
  , t.block_timestamp
  , t.block_number
  , t.block_hash
  , t.transaction_hash
  , t.transaction_index
  , t.from_address
  , t.to_address
  , t.value_lossless
  , t.input
  , t.output
  , t.trace_type
  , t.call_type
  , t.reward_type
  , t.gas
  , t.gas_used
  , t.subtraces
  , t.trace_address
  , t.error
  , t.status
  , t.trace_root
  , t.trace_rootnum
  , t.method_id
  -- Add the sender from the parent innerHandleOp
  , t.innerhandleop_decodeerror
  -- Decoded innerHandleOp
  , t.innerhandleop_opinfo_sender
  , t.innerhandleop_opinfo_paymaster
  , t.innerhandleop_opinfo_userophash
  , t.innerhandleop_opinfo
  , t.innerhandleop_context
  , t.innerhandleop_calldata
  , last_value(IF(t.innerhandleop_opinfo_sender IS NULL, NULL, t.trace_address) IGNORE NULLS) OVER shared_root AS userop_trace_address
  , last_value(t.innerhandleop_opinfo_sender IGNORE NULLS) OVER shared_root AS userop_sender
  , last_value(t.innerhandleop_opinfo_sender IGNORE NULLS) OVER shared_root = t.from_address AS is_from_userop_sender

FROM decoded_traces_exploded AS t
WINDOW
  shared_root AS (
    PARTITION BY t.transaction_hash
    ORDER BY t.trace_rootnum
    RANGE BETWEEN UNBOUNDED PRECEDING AND 0 FOLLOWING
  )
