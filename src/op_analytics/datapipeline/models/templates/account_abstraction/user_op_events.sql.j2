/***
  Documentation obtained from:
  https://vscode.blockscan.com/8453/0x5ff137d4b0fdcd49dca30c7cf57e578a026d2789

  event UserOperationEvent(
    bytes32 indexed userOpHash,
    address indexed sender,
    address indexed paymaster,
    uint256 nonce,
    bool success,
    uint256 actualGasCost,
    uint256 actualGasUsed
  );

    * An event emitted after each successful request
    * @param userOpHash - unique identifier for the request (hash its entire content, except signature).
    * @param sender - the account that generates this request.
    * @param paymaster - if non-null, the paymaster that pays for this request.
    * @param nonce - the nonce value from the request.
    * @param success - true if the sender transaction succeeded, false if reverted.
    * @param actualGasCost - actual amount paid (by account or paymaster) for this UserOperation.
    * @param actualGasUsed - total gas used by this UserOperation (including preVerification, creation, validation and execution).
    */

WITH decoded AS (
  SELECT
    l.dt
    , l.chain
    , l.chain_id
    , l.network
    --
    , l.block_timestamp
    , l.block_number
    , l.block_hash
    , l.transaction_hash
    , l.transaction_index
    , l.log_index
    , l.address AS contract_address

    -- Hash over the content of the userOp (except the signature), the entrypoint and the chainid.
    , l.indexed_args[1] AS user_op_hash

    -- The sender account for this user operation.
    , indexed_event_arg_to_address(l.indexed_args[2]) AS sender

    -- Obtained as: paymaster = address(bytes20(paymasterAndData[: 20]));
    , indexed_event_arg_to_address(l.indexed_args[3]) AS paymaster

    -- Decoded non-indexed args for the UserOperationEvent (nonce, success, actualGaCost, actualGasUsed)
    , decode_user_ops(l.data) AS decoded_user_ops


  FROM {{ raw_logs }} AS l
  WHERE
    true
    AND l.topic0 = '0x49628fd1471006c1482da88028e9ce4dbb080b815c9b0344d39e5a8e6ec1419f' -- UserOperationEvent
    AND array_length(l.indexed_args) = 3
)


SELECT -- noqa: AM04
  * EXCLUDE decoded_user_ops -- noqa: RF03
  , decoded_user_ops.*  -- noqa: RF01,RF03

  -- The combination of tx hash + sender is used to filter
  -- traces associated with the user operation.
  , concat_ws('::', transaction_hash, sender) AS txhash_sender -- noqa: RF03
FROM decoded
