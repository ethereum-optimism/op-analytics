/*
Aggregates at the transaction level, at transaction to and method.
"Method ID" enables segmenting and filtering by function called (i.e. swap, transfer, approve, handle userops)
"To address" is the contract (or address) that the sender (from address) is directly interacting with.
Downstream, we can use contracts tables to filter for transactions to contracts versus others.
*/

SELECT
  dt,
  chain,
  chain_id,
  network,
  to_address,
  method_id

  -- Aggregations
  , COUNT(*) AS count_transactions
  , COUNT(*) FILTER (WHERE success) AS count_transactions_success

  , COUNT(DISTINCT block_number) AS count_unique_blocks
  , COUNT(DISTINCT from_address) AS count_unique_from_addresses

  , SUM(l2_gas_used) AS sum_l2_gas_used
  , SUM(l2_gas_used) FILTER (WHERE success) AS sum_l2_gas_used_success

  , SUM(tx_fee_native) AS sum_tx_fee_native
  , SUM(tx_fee_native) FILTER (WHERE success) AS sum_tx_fee_native_success

  , SUM(l1_fee_native) AS l1_fee_native
  , SUM(l1_fee_native) FILTER (WHERE success) AS l1_fee_native_success

  , SUM(l2_fee_native) AS l2_fee_native
  , SUM(l2_fee_native) FILTER (WHERE success) AS l2_fee_native_success

  , SUM(l2_priority_fee_native) AS l2_priority_fee_native
  , SUM(l2_priority_fee_native) FILTER (WHERE success) AS l2_priority_fee_native_success

  , SUM(l2_base_fee_native) AS l2_base_fee_native
  , SUM(l2_base_fee_native) FILTER (WHERE success) AS l2_base_fee_native_success

  , SUM(l2_legacy_extra_fee_native) AS l2_legacy_extra_fee_native
  , SUM(l2_legacy_extra_fee_native) FILTER (WHERE success) AS l2_legacy_extra_fee_native_success

  -- Transaction-Level Gas Prices
  , SUM(l2_gas_used * l2_gas_price_gwei) / SUM(l2_gas_used) AS avg_l2_gas_price_gwei
  , SUM(l2_gas_used * l2_priority_gas_price_gwei) / SUM(l2_gas_used) AS avg_l2_priority_gas_price_gwei
  , SUM(l2_gas_used * l2_legacy_extra_gas_price_gwei) / SUM(l2_gas_used) AS avg_l2_legacy_extra_gas_price_gwei
  , SUM(l2_gas_used * l1_base_gas_price_gwei) / SUM(l2_gas_used) AS avg_l1_base_gas_price_gwei
  , SUM(l2_gas_used * l1_blob_base_gas_price_gwei) / SUM(l2_gas_used) AS avg_l1_blob_base_gas_price_gwei

  -- Transaction-Level transaction sizes
  , SUM(input_byte_length) AS sum_input_byte_length
  , SUM(input_zero_bytes) AS sum_input_zero_bytes
  , SUM(input_nonzero_bytes) AS sum_input_nonzero_bytes
  , SUM(l1_base_scaled_size) AS sum_l1_base_scaled_size
  , SUM(l1_blob_scaled_size) AS sum_l1_blob_scaled_size
  , SUM(l1_gas_used_unified) AS sum_l1_gas_used_unified
  , SUM(estimated_size) AS sum_estimated_size


FROM refined_transactions_fees
WHERE NOT is_system_transaction

GROUP BY
  dt, chain, chain_id, network,
  to_address, method_id
